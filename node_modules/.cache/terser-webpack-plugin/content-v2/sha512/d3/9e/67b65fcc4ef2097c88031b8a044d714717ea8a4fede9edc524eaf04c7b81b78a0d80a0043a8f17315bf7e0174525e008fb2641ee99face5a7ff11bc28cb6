{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3/d3.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-collection/src/map.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-collection/src/set.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/namespaces.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/namespace.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/creator.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selector.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selectorAll.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/sparse.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/enter.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/constant.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/data.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/sort.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/attr.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/window.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/classed.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/text.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/html.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/raise.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/lower.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/insert.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/remove.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/clone.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/on.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/dispatch.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/index.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/select.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/selectAll.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/filter.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/matcher.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/exit.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/join.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/merge.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/order.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/call.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/nodes.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/node.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/size.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/empty.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/each.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/style.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/property.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/append.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/selection/datum.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/local.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/node_modules/d3-selection/src/sourceEvent.js\",\"/Users/ag/Desktop/aaProjects/NBA_snap/src/main.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"__WEBPACK_AMD_DEFINE_FACTORY__\",\"__WEBPACK_AMD_DEFINE_RESULT__\",\"d3\",\"version\",\"d3_arraySlice\",\"slice\",\"d3_array\",\"list\",\"d3_document\",\"this\",\"document\",\"d3_documentElement\",\"node\",\"ownerDocument\",\"documentElement\",\"d3_window\",\"defaultView\",\"childNodes\",\"nodeType\",\"e\",\"length\",\"array\",\"Array\",\"Date\",\"now\",\"createElement\",\"style\",\"setProperty\",\"error\",\"d3_element_prototype\",\"Element\",\"d3_element_setAttribute\",\"setAttribute\",\"d3_element_setAttributeNS\",\"setAttributeNS\",\"d3_style_prototype\",\"CSSStyleDeclaration\",\"d3_style_setProperty\",\"space\",\"local\",\"priority\",\"d3_ascending\",\"a\",\"b\",\"NaN\",\"d3_number\",\"x\",\"d3_numeric\",\"isNaN\",\"d3_bisector\",\"compare\",\"left\",\"lo\",\"hi\",\"arguments\",\"mid\",\"right\",\"ascending\",\"descending\",\"min\",\"f\",\"max\",\"extent\",\"sum\",\"mean\",\"j\",\"quantile\",\"values\",\"H\",\"h\",\"Math\",\"floor\",\"v\",\"median\",\"numbers\",\"push\",\"sort\",\"variance\",\"deviation\",\"apply\",\"sqrt\",\"d3_bisect\",\"d3_transposeLength\",\"bisectLeft\",\"bisect\",\"bisectRight\",\"bisector\",\"shuffle\",\"i0\",\"i1\",\"random\",\"permute\",\"indexes\",\"permutes\",\"pairs\",\"p1\",\"transpose\",\"matrix\",\"row\",\"zip\",\"keys\",\"map\",\"entries\",\"merge\",\"arrays\",\"merged\",\"abs\",\"d3_class\",\"ctor\",\"properties\",\"d3_Map\",\"_\",\"range\",\"start\",\"stop\",\"step\",\"Infinity\",\"Error\",\"k\",\"d3_range_integerScale\",\"forEach\",\"set\",\"isArray\",\"d3_map_proto\",\"d3_map_zero\",\"d3_map_escape\",\"d3_map_unescape\",\"d3_map_has\",\"d3_map_remove\",\"d3_map_keys\",\"d3_map_size\",\"size\",\"d3_map_empty\",\"d3_Set\",\"d3_identity\",\"d3_rebind\",\"target\",\"source\",\"method\",\"d3_vendorSymbol\",\"charAt\",\"toUpperCase\",\"d3_vendorPrefixes\",\"prefixName\",\"has\",\"remove\",\"empty\",\"nest\",\"sortValues\",\"rollup\",\"sortKeys\",\"mapType\",\"depth\",\"keyValue\",\"setter\",\"valuesByKey\",\"sortKey\",\"keyMap\",\"order\",\"add\",\"behavior\",\"rebind\",\"d3_noop\",\"d3_dispatch\",\"d3_dispatch_event\",\"dispatch\",\"listeners\",\"listenerByName\",\"event\",\"z\",\"on\",\"listener\",\"indexOf\",\"concat\",\"d3_eventPreventDefault\",\"preventDefault\",\"d3_eventSource\",\"sourceEvent\",\"d3_eventDispatch\",\"of\",\"thiz\",\"argumentz\",\"e1\",\"e0\",\"type\",\"requote\",\"replace\",\"d3_requote_re\",\"d3_subclass\",\"__proto__\",\"d3_selection\",\"groups\",\"d3_selectionPrototype\",\"d3_select\",\"querySelector\",\"d3_selectAll\",\"querySelectorAll\",\"d3_selectMatches\",\"d3_selectMatcher\",\"matches\",\"Sizzle\",\"matchesSelector\",\"selection\",\"select\",\"d3_selection_selector\",\"selector\",\"d3_selection_selectorAll\",\"subgroup\",\"subnode\",\"group\",\"subgroups\",\"parentNode\",\"__data__\",\"selectAll\",\"d3_nsXhtml\",\"d3_nsPrefix\",\"svg\",\"xhtml\",\"xlink\",\"xml\",\"xmlns\",\"d3_selection_attr\",\"qualify\",\"removeAttributeNS\",\"removeAttribute\",\"d3_collapse\",\"trim\",\"d3_selection_classedRe\",\"RegExp\",\"d3_selection_classes\",\"split\",\"d3_selection_classed\",\"d3_selection_classedName\",\"re\",\"classList\",\"getAttribute\",\"lastIndex\",\"test\",\"d3_selection_style\",\"removeProperty\",\"d3_selection_property\",\"d3_selection_creator\",\"createElementNS\",\"namespace\",\"namespaceURI\",\"d3_selectionRemove\",\"parent\",\"removeChild\",\"d3_selection_dataNode\",\"data\",\"d3_selection_filter\",\"d3_selection_each\",\"callback\",\"d3_selection_enter\",\"d3_selection_enterPrototype\",\"prefix\",\"attr\",\"getAttributeNS\",\"each\",\"classed\",\"contains\",\"getComputedStyle\",\"getPropertyValue\",\"text\",\"textContent\",\"html\",\"innerHTML\",\"append\",\"appendChild\",\"insert\",\"before\",\"insertBefore\",\"groupData\",\"nodeData\",\"n0\",\"updateNodes\",\"enterNodes\",\"exitNodes\",\"nodeByKeyValue\",\"keyValues\",\"update\",\"enter\",\"exit\",\"datum\",\"filter\",\"next\",\"nextSibling\",\"comparator\",\"args\",\"d3_selection_on\",\"capture\",\"wrap\",\"d3_selection_onListener\",\"d3_selection_onFilters\",\"onRemove\",\"removeEventListener\",\"$\",\"d3_selection_onFilter\",\"addEventListener\",\"match\",\"upgroup\",\"j0\",\"nodes\",\"mouseenter\",\"mouseleave\",\"related\",\"relatedTarget\",\"compareDocumentPosition\",\"d3_event_dragSelect\",\"d3_event_dragId\",\"d3_event_dragSuppress\",\"click\",\"w\",\"suppressClick\",\"off\",\"setTimeout\",\"mouse\",\"container\",\"d3_mousePoint\",\"d3_mouse_bug44083\",\"navigator\",\"userAgent\",\"changedTouches\",\"ownerSVGElement\",\"createSVGPoint\",\"point\",\"window\",\"scrollX\",\"scrollY\",\"ctm\",\"position\",\"top\",\"margin\",\"padding\",\"border\",\"getScreenCTM\",\"pageX\",\"y\",\"pageY\",\"clientX\",\"clientY\",\"matrixTransform\",\"inverse\",\"rect\",\"getBoundingClientRect\",\"clientLeft\",\"clientTop\",\"d3_behavior_dragTouchId\",\"identifier\",\"touch\",\"touches\",\"drag\",\"origin\",\"mousedown\",\"dragstart\",\"touchstart\",\"id\",\"subject\",\"move\",\"end\",\"dragOffset\",\"correspondingElement\",\"dragged\",\"dragId\",\"dragName\",\"dragSubject\",\"dx\",\"dy\",\"position1\",\"position0\",\"dragRestore\",\"ε\",\"ε2\",\"π\",\"PI\",\"τ\",\"τε\",\"halfπ\",\"d3_radians\",\"d3_degrees\",\"d3_sgn\",\"d3_cross2d\",\"d3_acos\",\"acos\",\"d3_asin\",\"asin\",\"d3_cosh\",\"exp\",\"d3_haversin\",\"sin\",\"ρ\",\"SQRT2\",\"interpolateZoom\",\"p0\",\"S\",\"ux0\",\"uy0\",\"w0\",\"ux1\",\"uy1\",\"w1\",\"d2\",\"log\",\"d1\",\"b0\",\"b1\",\"r0\",\"r1\",\"coshr0\",\"u\",\"d3_sinh\",\"duration\",\"zoom\",\"translate0\",\"center0\",\"center\",\"mousewheelTimer\",\"touchtime\",\"x0\",\"x1\",\"y0\",\"y1\",\"view\",\"scaleExtent\",\"d3_behavior_zoomInfinity\",\"zooming\",\"mousemove\",\"mouseup\",\"g\",\"mousedowned\",\"d3_behavior_zoomWheel\",\"mousewheeled\",\"dblclicked\",\"touchstarted\",\"location\",\"scaleTo\",\"translateTo\",\"zoomTo\",\"that\",\"__chart__\",\"pow\",\"transition\",\"rescale\",\"domain\",\"invert\",\"zoomstarted\",\"zoomed\",\"scale\",\"translate\",\"zoomended\",\"location0\",\"d3_selection_interrupt\",\"scale0\",\"locations0\",\"distance0\",\"zoomName\",\"touchmove\",\"touchend\",\"targets\",\"relocate\",\"started\",\"moved\",\"ended\",\"changed\",\"LN2\",\"q\",\"l0\",\"l1\",\"distance1\",\"scale1\",\"clearTimeout\",\"d3_behavior_zoomDelta\",\"shiftKey\",\"ceil\",\"deltaY\",\"deltaMode\",\"wheelDelta\",\"detail\",\"view1\",\"d3_transitionInheritId\",\"tween\",\"cx\",\"cy\",\"copy\",\"d3_color\",\"d3_hsl\",\"d3_rgb_parse\",\"d3_rgb_hsl\",\"color\",\"toString\",\"rgb\",\"hsl\",\"d3_hslPrototype\",\"d3_hsl_rgb\",\"m1\",\"m2\",\"vv\",\"round\",\"d3_rgb\",\"d3_hcl\",\"d3_lab_hcl\",\"d3_lab\",\"d3_rgb_lab\",\"brighter\",\"darker\",\"hcl\",\"d3_hclPrototype\",\"d3_hcl_lab\",\"cos\",\"d3_lab_K\",\"lab\",\"d3_lab_X\",\"d3_lab_Y\",\"d3_lab_Z\",\"d3_labPrototype\",\"d3_lab_rgb\",\"d3_xyz_rgb\",\"d3_lab_xyz\",\"atan2\",\"d3_xyz_lab\",\"d3_rgbNumber\",\"d3_rgbString\",\"d3_rgbPrototype\",\"d3_rgb_hex\",\"format\",\"exec\",\"toLowerCase\",\"parseFloat\",\"d3_rgb_parseNumber\",\"d3_rgb_names\",\"parseInt\",\"d3_rgb_xyz\",\"aliceblue\",\"antiquewhite\",\"aqua\",\"aquamarine\",\"azure\",\"beige\",\"bisque\",\"black\",\"blanchedalmond\",\"blue\",\"blueviolet\",\"brown\",\"burlywood\",\"cadetblue\",\"chartreuse\",\"chocolate\",\"coral\",\"cornflowerblue\",\"cornsilk\",\"crimson\",\"cyan\",\"darkblue\",\"darkcyan\",\"darkgoldenrod\",\"darkgray\",\"darkgreen\",\"darkgrey\",\"darkkhaki\",\"darkmagenta\",\"darkolivegreen\",\"darkorange\",\"darkorchid\",\"darkred\",\"darksalmon\",\"darkseagreen\",\"darkslateblue\",\"darkslategray\",\"darkslategrey\",\"darkturquoise\",\"darkviolet\",\"deeppink\",\"deepskyblue\",\"dimgray\",\"dimgrey\",\"dodgerblue\",\"firebrick\",\"floralwhite\",\"forestgreen\",\"fuchsia\",\"gainsboro\",\"ghostwhite\",\"gold\",\"goldenrod\",\"gray\",\"green\",\"greenyellow\",\"grey\",\"honeydew\",\"hotpink\",\"indianred\",\"indigo\",\"ivory\",\"khaki\",\"lavender\",\"lavenderblush\",\"lawngreen\",\"lemonchiffon\",\"lightblue\",\"lightcoral\",\"lightcyan\",\"lightgoldenrodyellow\",\"lightgray\",\"lightgreen\",\"lightgrey\",\"lightpink\",\"lightsalmon\",\"lightseagreen\",\"lightskyblue\",\"lightslategray\",\"lightslategrey\",\"lightsteelblue\",\"lightyellow\",\"lime\",\"limegreen\",\"linen\",\"magenta\",\"maroon\",\"mediumaquamarine\",\"mediumblue\",\"mediumorchid\",\"mediumpurple\",\"mediumseagreen\",\"mediumslateblue\",\"mediumspringgreen\",\"mediumturquoise\",\"mediumvioletred\",\"midnightblue\",\"mintcream\",\"mistyrose\",\"moccasin\",\"navajowhite\",\"navy\",\"oldlace\",\"olive\",\"olivedrab\",\"orange\",\"orangered\",\"orchid\",\"palegoldenrod\",\"palegreen\",\"paleturquoise\",\"palevioletred\",\"papayawhip\",\"peachpuff\",\"peru\",\"pink\",\"plum\",\"powderblue\",\"purple\",\"rebeccapurple\",\"red\",\"rosybrown\",\"royalblue\",\"saddlebrown\",\"salmon\",\"sandybrown\",\"seagreen\",\"seashell\",\"sienna\",\"silver\",\"skyblue\",\"slateblue\",\"slategray\",\"slategrey\",\"snow\",\"springgreen\",\"steelblue\",\"tan\",\"teal\",\"thistle\",\"tomato\",\"turquoise\",\"violet\",\"wheat\",\"white\",\"whitesmoke\",\"yellow\",\"yellowgreen\",\"d3_functor\",\"d3_xhrType\",\"response\",\"url\",\"mimeType\",\"d3_xhr\",\"xhr\",\"headers\",\"request\",\"XMLHttpRequest\",\"responseType\",\"respond\",\"result\",\"status\",\"responseText\",\"d3_xhrHasResponse\",\"load\",\"XDomainRequest\",\"onload\",\"onerror\",\"onreadystatechange\",\"readyState\",\"onprogress\",\"progress\",\"header\",\"send\",\"open\",\"setRequestHeader\",\"overrideMimeType\",\"beforesend\",\"abort\",\"d3_xhr_fixCallback\",\"functor\",\"dsv\",\"delimiter\",\"reFormat\",\"delimiterCode\",\"charCodeAt\",\"typedResponse\",\"parse\",\"formatRow\",\"formatValue\",\"join\",\"parseRows\",\"Function\",\"JSON\",\"stringify\",\"eol\",\"EOL\",\"EOF\",\"rows\",\"N\",\"I\",\"token\",\"formatRows\",\"fieldSet\",\"fields\",\"field\",\"csv\",\"tsv\",\"d3_timer_queueHead\",\"d3_timer_queueTail\",\"d3_timer_interval\",\"d3_timer_timeout\",\"d3_timer_frame\",\"d3_timer\",\"delay\",\"then\",\"timer\",\"d3_timer_step\",\"d3_timer_mark\",\"d3_timer_sweep\",\"isFinite\",\"t0\",\"t1\",\"time\",\"d3_format_precision\",\"LN10\",\"flush\",\"d3_formatPrefixes\",\"symbol\",\"d3_locale_numberFormat\",\"locale\",\"locale_decimal\",\"decimal\",\"locale_thousands\",\"thousands\",\"locale_grouping\",\"grouping\",\"locale_currency\",\"currency\",\"formatGroup\",\"width\",\"substring\",\"reverse\",\"specifier\",\"d3_format_re\",\"fill\",\"align\",\"sign\",\"zfill\",\"comma\",\"precision\",\"suffix\",\"integer\",\"exponent\",\"d3_format_types\",\"d3_format_typeDefault\",\"zcomma\",\"fullSuffix\",\"negative\",\"unit\",\"formatPrefix\",\"after\",\"lastIndexOf\",\"String\",\"fromCharCode\",\"X\",\"toPrecision\",\"toExponential\",\"toFixed\",\"d3_time\",\"d3_date\",\"d3_date_utc\",\"UTC\",\"getDate\",\"getUTCDate\",\"getDay\",\"getUTCDay\",\"getFullYear\",\"getUTCFullYear\",\"getHours\",\"getUTCHours\",\"getMilliseconds\",\"getUTCMilliseconds\",\"getMinutes\",\"getUTCMinutes\",\"getMonth\",\"getUTCMonth\",\"getSeconds\",\"getUTCSeconds\",\"getTime\",\"getTimezoneOffset\",\"valueOf\",\"setDate\",\"d3_time_prototype\",\"setUTCDate\",\"setDay\",\"setUTCDay\",\"setFullYear\",\"setUTCFullYear\",\"setHours\",\"setUTCHours\",\"setMilliseconds\",\"setUTCMilliseconds\",\"setMinutes\",\"setUTCMinutes\",\"setMonth\",\"setUTCMonth\",\"setSeconds\",\"setUTCSeconds\",\"setTime\",\"d3_time_interval\",\"number\",\"date\",\"d0\",\"offset\",\"dt\",\"times\",\"utc\",\"d3_time_interval_utc\",\"d3_locale_timeFormat\",\"locale_dateTime\",\"dateTime\",\"locale_date\",\"locale_time\",\"locale_periods\",\"periods\",\"locale_days\",\"days\",\"locale_shortDays\",\"shortDays\",\"locale_months\",\"months\",\"locale_shortMonths\",\"shortMonths\",\"d3_time_format\",\"template\",\"string\",\"d3_time_formatPads\",\"d3_time_formats\",\"M\",\"L\",\"Z\",\"d3_time_parse\",\"localZ\",\"W\",\"U\",\"d3_time_parsers\",\"multi\",\"d3_time_formatMulti\",\"d3_time_periodLookup\",\"d3_time_dayRe\",\"d3_time_formatRe\",\"d3_time_dayLookup\",\"d3_time_formatLookup\",\"d3_time_dayAbbrevRe\",\"d3_time_dayAbbrevLookup\",\"d3_time_monthRe\",\"d3_time_monthLookup\",\"d3_time_monthAbbrevRe\",\"d3_time_monthAbbrevLookup\",\"A\",\"B\",\"d3_time_formatPad\",\"dayOfYear\",\"sundayOfYear\",\"mondayOfYear\",\"Y\",\"d3_time_zone\",\"%\",\"d3_time_parseDay\",\"d3_time_parseHour24\",\"d3_time_parseDayOfYear\",\"d3_time_parseMilliseconds\",\"d3_time_parseMonthNumber\",\"d3_time_parseMinutes\",\"d3_time_parseSeconds\",\"d3_time_parseWeekNumberSunday\",\"d3_time_parseWeekdayNumber\",\"d3_time_parseWeekNumberMonday\",\"d3_time_parseYear\",\"d3_time_parseFullYear\",\"d3_time_parseZone\",\"d3_time_parseLiteralPercent\",\"year\",\"day\",\"years\",\"interval\",\"week\",\"sunday\",\"weeks\",\"weekOfYear\",\"-\",\"0\",\"d3_time_numberRe\",\"d3_time_percentRe\",\"names\",\"zs\",\"zh\",\"zm\",\"formats\",\"numberFormat\",\"timeFormat\",\"d3_locale_enUS\",\"d3_adder\",\"geo\",\"d3_adderSum\",\"d3_adderTemp\",\"reset\",\"bv\",\"av\",\"d3_geo_streamGeometry\",\"geometry\",\"d3_geo_streamGeometryType\",\"stream\",\"d3_geo_streamObjectType\",\"Feature\",\"feature\",\"FeatureCollection\",\"features\",\"Sphere\",\"sphere\",\"Point\",\"coordinates\",\"MultiPoint\",\"LineString\",\"d3_geo_streamLine\",\"MultiLineString\",\"Polygon\",\"d3_geo_streamPolygon\",\"MultiPolygon\",\"GeometryCollection\",\"geometries\",\"closed\",\"coordinate\",\"lineStart\",\"lineEnd\",\"polygonStart\",\"polygonEnd\",\"area\",\"d3_geo_areaSum\",\"d3_geo_area\",\"d3_geo_centroidW0\",\"d3_geo_centroidW1\",\"d3_geo_centroidX0\",\"d3_geo_centroidY0\",\"d3_geo_centroidZ0\",\"d3_geo_centroidX1\",\"d3_geo_centroidY1\",\"d3_geo_centroidZ1\",\"d3_geo_centroidX2\",\"d3_geo_centroidY2\",\"d3_geo_centroidZ2\",\"d3_geo_areaRingSum\",\"d3_geo_areaRingStart\",\"λ00\",\"φ00\",\"λ0\",\"cosφ0\",\"sinφ0\",\"nextPoint\",\"λ\",\"φ\",\"dλ\",\"sdλ\",\"adλ\",\"cosφ\",\"sinφ\",\"d3_geo_cartesian\",\"spherical\",\"d3_geo_cartesianDot\",\"d3_geo_cartesianCross\",\"d3_geo_cartesianAdd\",\"d3_geo_cartesianScale\",\"vector\",\"d3_geo_cartesianNormalize\",\"d3_geo_spherical\",\"cartesian\",\"d3_geo_sphericalEqual\",\"bounds\",\"φ0\",\"λ1\",\"φ1\",\"λ_\",\"λ__\",\"φ__\",\"dλSum\",\"ranges\",\"bound\",\"ringPoint\",\"ringStart\",\"ringEnd\",\"linePoint\",\"normal\",\"inflection\",\"λi\",\"antimeridian\",\"φi\",\"angle\",\"compareRanges\",\"withinRange\",\"best\",\"centroid\",\"d3_geo_centroid\",\"d3_geo_centroidPoint\",\"d3_geo_centroidLineStart\",\"d3_geo_centroidLineEnd\",\"d3_geo_centroidRingStart\",\"d3_geo_centroidPointXYZ\",\"z0\",\"cz\",\"d3_geo_compose\",\"compose\",\"d3_true\",\"d3_geo_clipPolygon\",\"segments\",\"clipStartInside\",\"interpolate\",\"clip\",\"segment\",\"d3_geo_clipPolygonIntersection\",\"d3_geo_clipPolygonLinkCircular\",\"entry\",\"points\",\"current\",\"isSubject\",\"other\",\"d3_geo_clip\",\"pointVisible\",\"clipLine\",\"clipStart\",\"rotate\",\"line\",\"rotatedClipStart\",\"pointRing\",\"polygon\",\"meridian\",\"parallel\",\"meridianNormal\",\"polarAngle\",\"winding\",\"ring\",\"point0\",\"arc\",\"intersection\",\"φarc\",\"d3_geo_pointInPolygon\",\"polygonStarted\",\"d3_geo_clipSort\",\"pointLine\",\"buffer\",\"d3_geo_clipBufferListener\",\"ringListener\",\"clean\",\"ringSegments\",\"pop\",\"shift\",\"d3_geo_clipSegmentLength1\",\"lines\",\"rejoin\",\"d3_geo_clipAntimeridian\",\"sλ0\",\"sλ1\",\"cosφ1\",\"sinλ0_λ1\",\"atan\",\"d3_geo_clipAntimeridianIntersect\",\"from\",\"to\",\"direction\",\"d3_geom_clipLine\",\"ax\",\"ay\",\"d3_geo_clipExtentMAX\",\"d3_geo_clipExtent\",\"x__\",\"y__\",\"v__\",\"x_\",\"y_\",\"v_\",\"first\",\"listener_\",\"bufferListener\",\"wn\",\"insidePolygon\",\"inside\",\"visible\",\"a1\",\"corner\",\"comparePoints\",\"ca\",\"cb\",\"d3_geo_conic\",\"projectAt\",\"d3_geo_projectionMutator\",\"parallels\",\"d3_geo_conicEqualArea\",\"C\",\"ρ0\",\"forward\",\"ρ0_y\",\"clipExtent\",\"output\",\"valid\",\"conicEqualArea\",\"raw\",\"albers\",\"albersUsa\",\"lower48Point\",\"alaskaPoint\",\"hawaiiPoint\",\"lower48\",\"alaska\",\"hawaii\",\"pointStream\",\"lower48Stream\",\"alaskaStream\",\"hawaiiStream\",\"d3_geo_pathAreaSum\",\"d3_geo_pathAreaPolygon\",\"d3_geo_pathBoundsX0\",\"d3_geo_pathBoundsY0\",\"d3_geo_pathBoundsX1\",\"d3_geo_pathBoundsY1\",\"d3_geo_pathArea\",\"d3_geo_pathAreaRingStart\",\"x00\",\"y00\",\"d3_geo_pathBounds\",\"d3_geo_pathBuffer\",\"pointCircle\",\"d3_geo_pathBufferCircle\",\"pointLineStart\",\"lineEndPolygon\",\"pointRadius\",\"radius\",\"d3_geo_lengthSum\",\"d3_geo_pathCentroid\",\"d3_geo_pathCentroidPoint\",\"d3_geo_pathCentroidLineStart\",\"d3_geo_pathCentroidLineEnd\",\"d3_geo_pathCentroidRingStart\",\"d3_geo_pathContext\",\"context\",\"moveTo\",\"lineTo\",\"closePath\",\"d3_geo_resample\",\"project\",\"δ2\",\"cosMinDistance\",\"maxDepth\",\"resample\",\"a00\",\"b00\",\"c00\",\"a0\",\"c0\",\"resampleLineTo\",\"d3_geo_transformPoint\",\"c1\",\"φ2\",\"λ2\",\"x2\",\"y2\",\"dx2\",\"dy2\",\"dz\",\"d3_geo_transform\",\"d3_geo_projection\",\"projectRotate\",\"δx\",\"δy\",\"projectResample\",\"δλ\",\"δφ\",\"δγ\",\"preclip\",\"postclip\",\"clipAngle\",\"projection\",\"d3_geo_rotation\",\"invalidate\",\"d3_geo_projectionRadians\",\"cr\",\"smallRadius\",\"notHemisphere\",\"v0\",\"v00\",\"point2\",\"point1\",\"code\",\"intersect\",\"d3_geo_circleInterpolate\",\"two\",\"n1\",\"n2\",\"n2n2\",\"n1n2\",\"determinant\",\"c2\",\"n1xn2\",\"uu\",\"t2\",\"polar\",\"q1\",\"d3_geo_clipCircle\",\"d3_geo_equirectangular\",\"d3_geo_identityRotation\",\"d3_geo_rotationλ\",\"d3_geo_rotationφγ\",\"d3_geo_forwardRotationλ\",\"rotation\",\"cosδφ\",\"sinδφ\",\"cosδγ\",\"sinδγ\",\"sr\",\"d3_geo_circleAngle\",\"d3_geo_graticuleX\",\"d3_geo_graticuleY\",\"d3_source\",\"d3_target\",\"path\",\"projectStream\",\"contextStream\",\"cacheStream\",\"transform\",\"methods\",\"projectionMutator\",\"equirectangular\",\"circle\",\"distance\",\"Δλ\",\"sinΔλ\",\"cosΔλ\",\"sinφ1\",\"graticule\",\"X1\",\"X0\",\"Y1\",\"Y0\",\"DX\",\"DY\",\"outline\",\"majorExtent\",\"minorExtent\",\"majorStep\",\"minorStep\",\"greatArc\",\"source_\",\"target_\",\"cy0\",\"sy0\",\"cy1\",\"sy1\",\"kx0\",\"ky0\",\"kx1\",\"ky1\",\"d3_geo_length\",\"d3_geo_azimuthal\",\"azimuthal\",\"cosλ\",\"sinc\",\"cosc\",\"d3_geo_azimuthalEqualArea\",\"cosλcosφ\",\"azimuthalEqualArea\",\"d3_geo_azimuthalEquidistant\",\"d3_geo_conicConformal\",\"F\",\"d3_geo_mercator\",\"d3_geo_conicEquidistant\",\"G\",\"azimuthalEquidistant\",\"conicConformal\",\"conicEquidistant\",\"d3_geo_gnomonic\",\"d3_geo_mercatorProjection\",\"clipAuto\",\"gnomonic\",\"mercator\",\"d3_geo_orthographic\",\"orthographic\",\"d3_geo_stereographic\",\"d3_geo_transverseMercator\",\"d3_geom_pointX\",\"d3_geom_pointY\",\"d3_geom_hullUpper\",\"hull\",\"hs\",\"d3_geom_hullOrder\",\"stereographic\",\"transverseMercator\",\"geom\",\"vertices\",\"fx\",\"fy\",\"flippedPoints\",\"upper\",\"lower\",\"skipLeft\",\"skipRight\",\"d3_geom_polygonPrototype\",\"d3_geom_polygonInside\",\"d3_geom_polygonIntersect\",\"x3\",\"x21\",\"x43\",\"y3\",\"y21\",\"y43\",\"ua\",\"d3_geom_polygonClosed\",\"input\",\"d3_geom_voronoiEdges\",\"d3_geom_voronoiCells\",\"d3_geom_voronoiBeaches\",\"d3_geom_voronoiFirstCircle\",\"d3_geom_voronoiCircles\",\"d3_geom_voronoiBeachPool\",\"d3_geom_voronoiCirclePool\",\"d3_geom_voronoiBeach\",\"d3_geom_voronoiRedBlackNode\",\"edge\",\"site\",\"d3_geom_voronoiCreateBeach\",\"beach\",\"d3_geom_voronoiDetachBeach\",\"d3_geom_voronoiDetachCircle\",\"d3_geom_voronoiRemoveBeach\",\"vertex\",\"previous\",\"P\",\"disappearing\",\"lArc\",\"unshift\",\"rArc\",\"iArc\",\"nArcs\",\"d3_geom_voronoiSetEdgeEnd\",\"d3_geom_voronoiCreateEdge\",\"d3_geom_voronoiAttachCircle\",\"d3_geom_voronoiAddBeach\",\"dxl\",\"dxr\",\"directrix\",\"d3_geom_voronoiLeftBreakPoint\",\"d3_geom_voronoiRightBreakPoint\",\"R\",\"newArc\",\"lSite\",\"bx\",\"by\",\"rSite\",\"hb\",\"hc\",\"rfocx\",\"rfocy\",\"pby2\",\"lfocx\",\"lfocy\",\"plby2\",\"hl\",\"aby2\",\"d3_geom_voronoiCell\",\"edges\",\"d3_geom_voronoiHalfEdgeOrder\",\"d3_geom_voronoiCircle\",\"cSite\",\"ha\",\"d3_geom_voronoiConnectEdge\",\"vb\",\"fm\",\"fb\",\"va\",\"lx\",\"ly\",\"rx\",\"ry\",\"d3_geom_voronoiEdge\",\"d3_geom_voronoiHalfEdge\",\"d3_geom_voronoiRedBlackTree\",\"d3_geom_voronoiRedBlackRotateLeft\",\"tree\",\"d3_geom_voronoiRedBlackRotateRight\",\"d3_geom_voronoiRedBlackFirst\",\"d3_geom_voronoi\",\"sites\",\"bbox\",\"d3_geom_voronoiVertexOrder\",\"splice\",\"d3_geom_voronoiClipEdges\",\"cell\",\"iHalfEdge\",\"halfEdges\",\"nHalfEdges\",\"cells\",\"iCell\",\"prepare\",\"d3_geom_voronoiCloseCells\",\"diagram\",\"grandpa\",\"uncle\",\"sibling\",\"voronoi\",\"d3_geom_voronoiClipExtent\",\"polygons\",\"links\",\"triangles\",\"s0\",\"s1\",\"d3_geom_quadtreeCompatX\",\"d3_geom_quadtreeCompatY\",\"d3_interpolateRgb\",\"ar\",\"ag\",\"ab\",\"br\",\"bg\",\"bb\",\"d3_interpolateObject\",\"d3_interpolate\",\"d3_interpolateNumber\",\"d3_interpolateString\",\"am\",\"bm\",\"bs\",\"bi\",\"d3_interpolate_numberA\",\"d3_interpolate_numberB\",\"index\",\"delaunay\",\"quadtree\",\"compat\",\"xs\",\"ys\",\"x1_\",\"y1_\",\"x2_\",\"y2_\",\"leaf\",\"nx\",\"ny\",\"insertChild\",\"nPoint\",\"xm\",\"ym\",\"below\",\"root\",\"visit\",\"d3_geom_quadtreeVisit\",\"sx\",\"sy\",\"children\",\"find\",\"closestPoint\",\"minDistance2\",\"distance2\",\"d3_geom_quadtreeFind\",\"interpolateRgb\",\"interpolateObject\",\"interpolateNumber\",\"interpolateString\",\"interpolators\",\"d3_interpolateArray\",\"na\",\"nb\",\"interpolateArray\",\"d3_ease_default\",\"d3_ease\",\"linear\",\"poly\",\"quad\",\"d3_ease_quad\",\"cubic\",\"d3_ease_cubic\",\"d3_ease_sin\",\"d3_ease_exp\",\"d3_ease_circle\",\"elastic\",\"back\",\"bounce\",\"d3_ease_bounce\",\"d3_ease_mode\",\"in\",\"out\",\"d3_ease_reverse\",\"in-out\",\"d3_ease_reflect\",\"out-in\",\"d3_ease_cubicInOut\",\"t3\",\"d3_interpolateRound\",\"d3_transform\",\"kx\",\"d3_transformNormalize\",\"kz\",\"d3_transformDot\",\"ky\",\"skew\",\"ease\",\"interpolateHcl\",\"ah\",\"ac\",\"al\",\"bh\",\"bc\",\"bl\",\"interpolateHsl\",\"as\",\"interpolateLab\",\"aa\",\"ba\",\"interpolateRound\",\"baseVal\",\"consolidate\",\"d3_transformIdentity\",\"d3_interpolateTransformPop\",\"d3_interpolateTransform\",\"ta\",\"tb\",\"d3_interpolateTranslate\",\"ra\",\"rb\",\"d3_interpolateRotate\",\"wa\",\"wb\",\"d3_interpolateSkew\",\"ka\",\"kb\",\"d3_interpolateScale\",\"d3_uninterpolateNumber\",\"d3_uninterpolateClamp\",\"d3_layout_bundlePath\",\"link\",\"lca\",\"aNodes\",\"d3_layout_bundleAncestors\",\"bNodes\",\"aNode\",\"bNode\",\"sharedNode\",\"d3_layout_bundleLeastCommonAncestor\",\"ancestors\",\"d3_layout_forceDragstart\",\"fixed\",\"d3_layout_forceDragend\",\"d3_layout_forceMouseover\",\"px\",\"py\",\"d3_layout_forceMouseout\",\"interpolateTransform\",\"layout\",\"bundle\",\"paths\",\"chord\",\"chords\",\"sortGroups\",\"sortSubgroups\",\"sortChords\",\"relayout\",\"groupSums\",\"groupIndex\",\"subgroupIndex\",\"di\",\"dj\",\"subindex\",\"startAngle\",\"endAngle\",\"resort\",\"force\",\"alpha\",\"distances\",\"strengths\",\"charges\",\"friction\",\"linkDistance\",\"d3_layout_forceLinkDistance\",\"linkStrength\",\"d3_layout_forceLinkStrength\",\"charge\",\"chargeDistance2\",\"d3_layout_forceChargeDistance2\",\"gravity\",\"theta2\",\"repulse\",\"dw\",\"dn\",\"pointCharge\",\"dragmove\",\"resume\",\"tick\",\"weight\",\"d3_layout_forceAccumulate\",\"chargeDistance\",\"theta\",\"neighbors\",\"dimension\",\"candidates\",\"d3_layout_hierarchyRebind\",\"hierarchy\",\"d3_layout_hierarchyLinks\",\"d3_layout_hierarchyVisitBefore\",\"d3_layout_hierarchyVisitAfter\",\"nodes2\",\"d3_layout_hierarchyChildren\",\"d3_layout_hierarchyValue\",\"d3_layout_hierarchySort\",\"child\",\"stack\",\"childs\",\"revalue\",\"partition\",\"pie\",\"Number\",\"d3_layout_pieSortByValue\",\"padAngle\",\"da\",\"pa\",\"arcs\",\"d3_layout_stackX\",\"d3_layout_stackY\",\"d3_layout_stackOut\",\"d3_layout_stackOrderDefault\",\"d3_layout_stackOffsetZero\",\"series\",\"orders\",\"offsets\",\"d3_layout_stackOrders\",\"d3_layout_stackOffsets\",\"inside-out\",\"d3_layout_stackMaxIndex\",\"sums\",\"d3_layout_stackReduceSum\",\"bottom\",\"tops\",\"bottoms\",\"default\",\"silhouette\",\"wiggle\",\"s2\",\"s3\",\"o0\",\"expand\",\"zero\",\"reduce\",\"d3_layout_stackSum\",\"d3_layout_histogramBinSturges\",\"d3_layout_histogramBinFixed\",\"d3_layout_histogramRange\",\"d3_layout_packSort\",\"d3_layout_packInsert\",\"_pack_next\",\"_pack_prev\",\"d3_layout_packSplice\",\"d3_layout_packIntersects\",\"dr\",\"d3_layout_packSiblings\",\"xMin\",\"xMax\",\"yMin\",\"yMax\",\"d3_layout_packLink\",\"d3_layout_packPlace\",\"isect\",\"d3_layout_packUnlink\",\"db\",\"dc\",\"d3_layout_treeSeparation\",\"d3_layout_treeLeft\",\"d3_layout_treeRight\",\"d3_layout_treeMove\",\"wm\",\"wp\",\"change\",\"d3_layout_treeAncestor\",\"vim\",\"ancestor\",\"d3_layout_treemapPadNull\",\"d3_layout_treemapPad\",\"d3_scaleExtent\",\"d3_scaleRange\",\"rangeExtent\",\"d3_scale_bilinear\",\"uninterpolate\",\"d3_scale_nice\",\"nice\",\"d3_scale_niceStep\",\"d3_scale_niceIdentity\",\"histogram\",\"frequency\",\"valuer\",\"ranger\",\"binner\",\"bin\",\"bins\",\"thresholds\",\"pack\",\"d3_layout_packTransform\",\"separation\",\"nodeSize\",\"root0\",\"root1\",\"node1\",\"queue\",\"wrapTree\",\"firstWalk\",\"secondWalk\",\"sizeNode\",\"tx\",\"siblings\",\"d3_layout_treeShift\",\"midpoint\",\"vip\",\"vop\",\"vom\",\"sip\",\"sop\",\"sim\",\"som\",\"apportion\",\"cluster\",\"previousNode\",\"d3_layout_clusterX\",\"d3_layout_clusterY\",\"d3_layout_clusterLeft\",\"d3_layout_clusterRight\",\"treemap\",\"stickies\",\"pad\",\"sticky\",\"ratio\",\"squarify\",\"score\",\"remaining\",\"worst\",\"stickify\",\"rmax\",\"rmin\",\"padConstant\",\"µ\",\"σ\",\"logNormal\",\"bates\",\"irwinHall\",\"d3_scale_polylinear\",\"d3_scale_linearRebind\",\"d3_scale_linearNice\",\"d3_scale_linearTickRange\",\"span\",\"err\",\"d3_scale_linearTicks\",\"d3_scale_linearTickFormat\",\"d3_scale_linearPrecision\",\"d3_scale_linearFormatSignificant\",\"d3_scale_linearFormatPrecision\",\"d3_scale_linear\",\"clamp\",\"rangeRound\",\"ticks\",\"tickFormat\",\"d3_scale_log\",\"base\",\"positive\",\"niced\",\"d3_scale_logNiceNegative\",\"d3_scale_logFormat\",\"d3_scale_powPow\",\"d3_scale_pow\",\"powp\",\"powb\",\"ordinal\",\"d3_scale_ordinal\",\"rangeBand\",\"steps\",\"xi\",\"rangePoints\",\"rangeRoundPoints\",\"rangeBands\",\"outerPadding\",\"rangeRoundBands\",\"category10\",\"d3_category10\",\"category20\",\"d3_category20\",\"category20b\",\"d3_category20b\",\"category20c\",\"d3_category20c\",\"d3_zero\",\"d3_scale_quantile\",\"quantiles\",\"invertExtent\",\"quantize\",\"d3_scale_quantize\",\"threshold\",\"d3_scale_threshold\",\"identity\",\"d3_scale_identity\",\"innerRadius\",\"d3_svg_arcInnerRadius\",\"outerRadius\",\"d3_svg_arcOuterRadius\",\"cornerRadius\",\"padRadius\",\"d3_svg_arcAuto\",\"d3_svg_arcStartAngle\",\"d3_svg_arcEndAngle\",\"d3_svg_arcPadAngle\",\"cw\",\"rc\",\"circleSegment\",\"rp\",\"ap\",\"d3_svg_arcSweep\",\"h1\",\"h0\",\"rc1\",\"rc0\",\"oc\",\"kc\",\"lc\",\"t30\",\"d3_svg_arcCornerTangents\",\"t12\",\"t03\",\"t21\",\"x01\",\"y01\",\"ox\",\"oy\",\"D\",\"cx0\",\"cx1\",\"dx0\",\"dy0\",\"dx1\",\"dy1\",\"d3_svg_line\",\"defined\",\"d3_svg_lineLinear\",\"interpolateKey\",\"tension\",\"d3_svg_lineInterpolators\",\"linear-closed\",\"d3_svg_lineLinearClosed\",\"step-before\",\"d3_svg_lineStepBefore\",\"step-after\",\"d3_svg_lineStepAfter\",\"basis\",\"d3_svg_lineBasis\",\"basis-open\",\"pi\",\"d3_svg_lineDot4\",\"d3_svg_lineBasisBezier3\",\"d3_svg_lineBasisBezier\",\"basis-closed\",\"cardinal\",\"d3_svg_lineHermite\",\"d3_svg_lineCardinalTangents\",\"cardinal-open\",\"cardinal-closed\",\"monotone\",\"tangents\",\"d3_svg_lineSlope\",\"d3_svg_lineFiniteDifferences\",\"d3_svg_lineMonotoneTangents\",\"lp\",\"p2\",\"d3_svg_lineBasisBezier1\",\"d3_svg_lineBasisBezier2\",\"d3_svg_lineRadial\",\"d3_svg_area\",\"interpolateReverse\",\"points0\",\"points1\",\"fx0\",\"fy0\",\"fx1\",\"fy1\",\"d3_svg_chordRadius\",\"d3_svg_diagonalProjection\",\"d3_svg_symbolSize\",\"d3_svg_symbolType\",\"d3_svg_symbolCircle\",\"radial\",\"curve\",\"self\",\"diagonal\",\"p3\",\"projection_\",\"d3_svg_diagonalRadialProjection\",\"d3_svg_symbols\",\"cross\",\"diamond\",\"d3_svg_symbolTan30\",\"square\",\"triangle-down\",\"d3_svg_symbolSqrt3\",\"triangle-up\",\"symbolTypes\",\"d3_transitionId\",\"d3_transitionNamespace\",\"d3_transitionInherit\",\"d3_transitionNode\",\"d3_transition\",\"interrupt\",\"d3_selection_interruptNS\",\"lock\",\"activeId\",\"active\",\"count\",\"d3_transitionPrototype\",\"d3_transition_tween\",\"d3_transition_text\",\"inherit\",\"tweens\",\"elapsed\",\"cancelId\",\"cancel\",\"subnodes\",\"nameNS\",\"attrNull\",\"attrNullNS\",\"attrTween\",\"styleNull\",\"styleTween\",\"inheritId\",\"id0\",\"id1\",\"axis\",\"tickFormat_\",\"orient\",\"d3_svg_axisDefaultOrient\",\"innerTickSize\",\"outerTickSize\",\"tickPadding\",\"tickArguments_\",\"tickValues\",\"tickTransform\",\"tickEnter\",\"tickExit\",\"tickUpdate\",\"tickSpacing\",\"pathUpdate\",\"lineEnter\",\"lineUpdate\",\"textEnter\",\"textUpdate\",\"d3_svg_axisX\",\"d3_svg_axisY\",\"d3_svg_axisOrients\",\"tickSize\",\"tickSubdivide\",\"brush\",\"xExtentDomain\",\"yExtentDomain\",\"xExtent\",\"yExtent\",\"xClamp\",\"yClamp\",\"resizes\",\"d3_svg_brushResizes\",\"brushstart\",\"background\",\"resize\",\"d3_svg_brushCursor\",\"gUpdate\",\"backgroundUpdate\",\"redrawX\",\"redrawY\",\"redraw\",\"eventTarget\",\"event_\",\"resizing\",\"resizingX\",\"resizingY\",\"dragging\",\"keyCode\",\"brushmove\",\"brushend\",\"ex\",\"ey\",\"altKey\",\"move1\",\"extent1\",\"extent0\",\"yi\",\"clear\",\"nw\",\"ne\",\"se\",\"sw\",\"d3_time_formatUtc\",\"d3_time_formatIso\",\"d3_time_formatIsoNative\",\"toISOString\",\"d3_time_scale\",\"tickMethod\",\"d3_time_scaleSteps\",\"d3_time_scaleMilliseconds\",\"d3_time_scaleDate\",\"skip\",\"skipped\",\"iso\",\"second\",\"seconds\",\"minute\",\"minutes\",\"hour\",\"timezone\",\"hours\",\"month\",\"d3_time_scaleLocalMethods\",\"d3_time_scaleLocalFormat\",\"d3_time_scaleUtcMethods\",\"d3_time_scaleUtcFormat\",\"d3_json\",\"d3_html\",\"createRange\",\"selectNode\",\"body\",\"createContextualFragment\",\"json\",\"responseXML\",\"undefined\",\"Map\",\"constructor\",\"src_map\",\"set_Set\",\"proto\",\"namespaces\",\"creator\",\"fullname\",\"uri\",\"none\",\"src_selector\",\"sparse\",\"EnterNode\",\"_next\",\"_parent\",\"keyPrefix\",\"bindIndex\",\"groupLength\",\"dataLength\",\"bindKey\",\"src_window\",\"classArray\",\"ClassList\",\"_node\",\"_names\",\"classedAdd\",\"classedRemove\",\"textRemove\",\"htmlRemove\",\"raise\",\"previousSibling\",\"firstChild\",\"constantNull\",\"selection_cloneShallow\",\"cloneNode\",\"selection_cloneDeep\",\"filterEvents\",\"on_event\",\"filterContextListener\",\"contextListener\",\"event1\",\"event0\",\"typename\",\"__on\",\"onAdd\",\"dispatchEvent\",\"params\",\"CustomEvent\",\"createEvent\",\"initEvent\",\"bubbles\",\"cancelable\",\"selection_root\",\"Selection\",\"parents\",\"_groups\",\"_parents\",\"selection_selection\",\"enterGroup\",\"updateGroup\",\"_enter\",\"_exit\",\"onenter\",\"onupdate\",\"onexit\",\"groups0\",\"groups1\",\"m0\",\"merges\",\"group0\",\"group1\",\"compareNode\",\"sortgroups\",\"sortgroup\",\"styleValue\",\"clone\",\"deep\",\"typenames\",\"parseTypenames\",\"nextId\",\"Local\",\"allStars\",\"getUnique\",\"fetch\",\"res\",\"diameter\",\"innerWidth\",\"heightRatio\",\"innerHeight\",\"height\",\"twentyNineTeen\",\"console\",\"tip\",\"initial\",\"Set\",\"show\",\"hide\",\"nodeEnter\",\"allstarName\",\"includes\",\"convertedRotation\",\"nodeUpdate\",\"_children\",\"nodeExit\",\"img\",\"rebounds\",\"assists\",\"FG\",\"FG3\",\"FT\",\"collapse\",\"frameElement\",\"counter\",\"newQueue\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 2);\\n\",\"!function() {\\n  var d3 = {\\n    version: \\\"3.5.17\\\"\\n  };\\n  var d3_arraySlice = [].slice, d3_array = function(list) {\\n    return d3_arraySlice.call(list);\\n  };\\n  var d3_document = this.document;\\n  function d3_documentElement(node) {\\n    return node && (node.ownerDocument || node.document || node).documentElement;\\n  }\\n  function d3_window(node) {\\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\\n  }\\n  if (d3_document) {\\n    try {\\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\\n    } catch (e) {\\n      d3_array = function(list) {\\n        var i = list.length, array = new Array(i);\\n        while (i--) array[i] = list[i];\\n        return array;\\n      };\\n    }\\n  }\\n  if (!Date.now) Date.now = function() {\\n    return +new Date();\\n  };\\n  if (d3_document) {\\n    try {\\n      d3_document.createElement(\\\"DIV\\\").style.setProperty(\\\"opacity\\\", 0, \\\"\\\");\\n    } catch (error) {\\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\\n      d3_element_prototype.setAttribute = function(name, value) {\\n        d3_element_setAttribute.call(this, name, value + \\\"\\\");\\n      };\\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\\n        d3_element_setAttributeNS.call(this, space, local, value + \\\"\\\");\\n      };\\n      d3_style_prototype.setProperty = function(name, value, priority) {\\n        d3_style_setProperty.call(this, name, value + \\\"\\\", priority);\\n      };\\n    }\\n  }\\n  d3.ascending = d3_ascending;\\n  function d3_ascending(a, b) {\\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\\n  }\\n  d3.descending = function(a, b) {\\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\\n  };\\n  d3.min = function(array, f) {\\n    var i = -1, n = array.length, a, b;\\n    if (arguments.length === 1) {\\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\\n        a = b;\\n        break;\\n      }\\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\\n    } else {\\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\\n        a = b;\\n        break;\\n      }\\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\\n    }\\n    return a;\\n  };\\n  d3.max = function(array, f) {\\n    var i = -1, n = array.length, a, b;\\n    if (arguments.length === 1) {\\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\\n        a = b;\\n        break;\\n      }\\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\\n    } else {\\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\\n        a = b;\\n        break;\\n      }\\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\\n    }\\n    return a;\\n  };\\n  d3.extent = function(array, f) {\\n    var i = -1, n = array.length, a, b, c;\\n    if (arguments.length === 1) {\\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\\n        a = c = b;\\n        break;\\n      }\\n      while (++i < n) if ((b = array[i]) != null) {\\n        if (a > b) a = b;\\n        if (c < b) c = b;\\n      }\\n    } else {\\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\\n        a = c = b;\\n        break;\\n      }\\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\\n        if (a > b) a = b;\\n        if (c < b) c = b;\\n      }\\n    }\\n    return [ a, c ];\\n  };\\n  function d3_number(x) {\\n    return x === null ? NaN : +x;\\n  }\\n  function d3_numeric(x) {\\n    return !isNaN(x);\\n  }\\n  d3.sum = function(array, f) {\\n    var s = 0, n = array.length, a, i = -1;\\n    if (arguments.length === 1) {\\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\\n    } else {\\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\\n    }\\n    return s;\\n  };\\n  d3.mean = function(array, f) {\\n    var s = 0, n = array.length, a, i = -1, j = n;\\n    if (arguments.length === 1) {\\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\\n    } else {\\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\\n    }\\n    if (j) return s / j;\\n  };\\n  d3.quantile = function(values, p) {\\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\\n    return e ? v + e * (values[h] - v) : v;\\n  };\\n  d3.median = function(array, f) {\\n    var numbers = [], n = array.length, a, i = -1;\\n    if (arguments.length === 1) {\\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\\n    } else {\\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\\n    }\\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\\n  };\\n  d3.variance = function(array, f) {\\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\\n    if (arguments.length === 1) {\\n      while (++i < n) {\\n        if (d3_numeric(a = d3_number(array[i]))) {\\n          d = a - m;\\n          m += d / ++j;\\n          s += d * (a - m);\\n        }\\n      }\\n    } else {\\n      while (++i < n) {\\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\\n          d = a - m;\\n          m += d / ++j;\\n          s += d * (a - m);\\n        }\\n      }\\n    }\\n    if (j > 1) return s / (j - 1);\\n  };\\n  d3.deviation = function() {\\n    var v = d3.variance.apply(this, arguments);\\n    return v ? Math.sqrt(v) : v;\\n  };\\n  function d3_bisector(compare) {\\n    return {\\n      left: function(a, x, lo, hi) {\\n        if (arguments.length < 3) lo = 0;\\n        if (arguments.length < 4) hi = a.length;\\n        while (lo < hi) {\\n          var mid = lo + hi >>> 1;\\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\\n        }\\n        return lo;\\n      },\\n      right: function(a, x, lo, hi) {\\n        if (arguments.length < 3) lo = 0;\\n        if (arguments.length < 4) hi = a.length;\\n        while (lo < hi) {\\n          var mid = lo + hi >>> 1;\\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\\n        }\\n        return lo;\\n      }\\n    };\\n  }\\n  var d3_bisect = d3_bisector(d3_ascending);\\n  d3.bisectLeft = d3_bisect.left;\\n  d3.bisect = d3.bisectRight = d3_bisect.right;\\n  d3.bisector = function(f) {\\n    return d3_bisector(f.length === 1 ? function(d, x) {\\n      return d3_ascending(f(d), x);\\n    } : f);\\n  };\\n  d3.shuffle = function(array, i0, i1) {\\n    if ((m = arguments.length) < 3) {\\n      i1 = array.length;\\n      if (m < 2) i0 = 0;\\n    }\\n    var m = i1 - i0, t, i;\\n    while (m) {\\n      i = Math.random() * m-- | 0;\\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\\n    }\\n    return array;\\n  };\\n  d3.permute = function(array, indexes) {\\n    var i = indexes.length, permutes = new Array(i);\\n    while (i--) permutes[i] = array[indexes[i]];\\n    return permutes;\\n  };\\n  d3.pairs = function(array) {\\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\\n    return pairs;\\n  };\\n  d3.transpose = function(matrix) {\\n    if (!(n = matrix.length)) return [];\\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\\n        row[j] = matrix[j][i];\\n      }\\n    }\\n    return transpose;\\n  };\\n  function d3_transposeLength(d) {\\n    return d.length;\\n  }\\n  d3.zip = function() {\\n    return d3.transpose(arguments);\\n  };\\n  d3.keys = function(map) {\\n    var keys = [];\\n    for (var key in map) keys.push(key);\\n    return keys;\\n  };\\n  d3.values = function(map) {\\n    var values = [];\\n    for (var key in map) values.push(map[key]);\\n    return values;\\n  };\\n  d3.entries = function(map) {\\n    var entries = [];\\n    for (var key in map) entries.push({\\n      key: key,\\n      value: map[key]\\n    });\\n    return entries;\\n  };\\n  d3.merge = function(arrays) {\\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\\n    while (++i < n) j += arrays[i].length;\\n    merged = new Array(j);\\n    while (--n >= 0) {\\n      array = arrays[n];\\n      m = array.length;\\n      while (--m >= 0) {\\n        merged[--j] = array[m];\\n      }\\n    }\\n    return merged;\\n  };\\n  var abs = Math.abs;\\n  d3.range = function(start, stop, step) {\\n    if (arguments.length < 3) {\\n      step = 1;\\n      if (arguments.length < 2) {\\n        stop = start;\\n        start = 0;\\n      }\\n    }\\n    if ((stop - start) / step === Infinity) throw new Error(\\\"infinite range\\\");\\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\\n    start *= k, stop *= k, step *= k;\\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\\n    return range;\\n  };\\n  function d3_range_integerScale(x) {\\n    var k = 1;\\n    while (x * k % 1) k *= 10;\\n    return k;\\n  }\\n  function d3_class(ctor, properties) {\\n    for (var key in properties) {\\n      Object.defineProperty(ctor.prototype, key, {\\n        value: properties[key],\\n        enumerable: false\\n      });\\n    }\\n  }\\n  d3.map = function(object, f) {\\n    var map = new d3_Map();\\n    if (object instanceof d3_Map) {\\n      object.forEach(function(key, value) {\\n        map.set(key, value);\\n      });\\n    } else if (Array.isArray(object)) {\\n      var i = -1, n = object.length, o;\\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\\n    } else {\\n      for (var key in object) map.set(key, object[key]);\\n    }\\n    return map;\\n  };\\n  function d3_Map() {\\n    this._ = Object.create(null);\\n  }\\n  var d3_map_proto = \\\"__proto__\\\", d3_map_zero = \\\"\\\\x00\\\";\\n  d3_class(d3_Map, {\\n    has: d3_map_has,\\n    get: function(key) {\\n      return this._[d3_map_escape(key)];\\n    },\\n    set: function(key, value) {\\n      return this._[d3_map_escape(key)] = value;\\n    },\\n    remove: d3_map_remove,\\n    keys: d3_map_keys,\\n    values: function() {\\n      var values = [];\\n      for (var key in this._) values.push(this._[key]);\\n      return values;\\n    },\\n    entries: function() {\\n      var entries = [];\\n      for (var key in this._) entries.push({\\n        key: d3_map_unescape(key),\\n        value: this._[key]\\n      });\\n      return entries;\\n    },\\n    size: d3_map_size,\\n    empty: d3_map_empty,\\n    forEach: function(f) {\\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\\n    }\\n  });\\n  function d3_map_escape(key) {\\n    return (key += \\\"\\\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\\n  }\\n  function d3_map_unescape(key) {\\n    return (key += \\\"\\\")[0] === d3_map_zero ? key.slice(1) : key;\\n  }\\n  function d3_map_has(key) {\\n    return d3_map_escape(key) in this._;\\n  }\\n  function d3_map_remove(key) {\\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\\n  }\\n  function d3_map_keys() {\\n    var keys = [];\\n    for (var key in this._) keys.push(d3_map_unescape(key));\\n    return keys;\\n  }\\n  function d3_map_size() {\\n    var size = 0;\\n    for (var key in this._) ++size;\\n    return size;\\n  }\\n  function d3_map_empty() {\\n    for (var key in this._) return false;\\n    return true;\\n  }\\n  d3.nest = function() {\\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\\n    function map(mapType, array, depth) {\\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\\n      while (++i < n) {\\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\\n          values.push(object);\\n        } else {\\n          valuesByKey.set(keyValue, [ object ]);\\n        }\\n      }\\n      if (mapType) {\\n        object = mapType();\\n        setter = function(keyValue, values) {\\n          object.set(keyValue, map(mapType, values, depth));\\n        };\\n      } else {\\n        object = {};\\n        setter = function(keyValue, values) {\\n          object[keyValue] = map(mapType, values, depth);\\n        };\\n      }\\n      valuesByKey.forEach(setter);\\n      return object;\\n    }\\n    function entries(map, depth) {\\n      if (depth >= keys.length) return map;\\n      var array = [], sortKey = sortKeys[depth++];\\n      map.forEach(function(key, keyMap) {\\n        array.push({\\n          key: key,\\n          values: entries(keyMap, depth)\\n        });\\n      });\\n      return sortKey ? array.sort(function(a, b) {\\n        return sortKey(a.key, b.key);\\n      }) : array;\\n    }\\n    nest.map = function(array, mapType) {\\n      return map(mapType, array, 0);\\n    };\\n    nest.entries = function(array) {\\n      return entries(map(d3.map, array, 0), 0);\\n    };\\n    nest.key = function(d) {\\n      keys.push(d);\\n      return nest;\\n    };\\n    nest.sortKeys = function(order) {\\n      sortKeys[keys.length - 1] = order;\\n      return nest;\\n    };\\n    nest.sortValues = function(order) {\\n      sortValues = order;\\n      return nest;\\n    };\\n    nest.rollup = function(f) {\\n      rollup = f;\\n      return nest;\\n    };\\n    return nest;\\n  };\\n  d3.set = function(array) {\\n    var set = new d3_Set();\\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\\n    return set;\\n  };\\n  function d3_Set() {\\n    this._ = Object.create(null);\\n  }\\n  d3_class(d3_Set, {\\n    has: d3_map_has,\\n    add: function(key) {\\n      this._[d3_map_escape(key += \\\"\\\")] = true;\\n      return key;\\n    },\\n    remove: d3_map_remove,\\n    values: d3_map_keys,\\n    size: d3_map_size,\\n    empty: d3_map_empty,\\n    forEach: function(f) {\\n      for (var key in this._) f.call(this, d3_map_unescape(key));\\n    }\\n  });\\n  d3.behavior = {};\\n  function d3_identity(d) {\\n    return d;\\n  }\\n  d3.rebind = function(target, source) {\\n    var i = 1, n = arguments.length, method;\\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\\n    return target;\\n  };\\n  function d3_rebind(target, source, method) {\\n    return function() {\\n      var value = method.apply(source, arguments);\\n      return value === source ? target : value;\\n    };\\n  }\\n  function d3_vendorSymbol(object, name) {\\n    if (name in object) return name;\\n    name = name.charAt(0).toUpperCase() + name.slice(1);\\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\\n      var prefixName = d3_vendorPrefixes[i] + name;\\n      if (prefixName in object) return prefixName;\\n    }\\n  }\\n  var d3_vendorPrefixes = [ \\\"webkit\\\", \\\"ms\\\", \\\"moz\\\", \\\"Moz\\\", \\\"o\\\", \\\"O\\\" ];\\n  function d3_noop() {}\\n  d3.dispatch = function() {\\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\\n    return dispatch;\\n  };\\n  function d3_dispatch() {}\\n  d3_dispatch.prototype.on = function(type, listener) {\\n    var i = type.indexOf(\\\".\\\"), name = \\\"\\\";\\n    if (i >= 0) {\\n      name = type.slice(i + 1);\\n      type = type.slice(0, i);\\n    }\\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\\n    if (arguments.length === 2) {\\n      if (listener == null) for (type in this) {\\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\\n      }\\n      return this;\\n    }\\n  };\\n  function d3_dispatch_event(dispatch) {\\n    var listeners = [], listenerByName = new d3_Map();\\n    function event() {\\n      var z = listeners, i = -1, n = z.length, l;\\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\\n      return dispatch;\\n    }\\n    event.on = function(name, listener) {\\n      var l = listenerByName.get(name), i;\\n      if (arguments.length < 2) return l && l.on;\\n      if (l) {\\n        l.on = null;\\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\\n        listenerByName.remove(name);\\n      }\\n      if (listener) listeners.push(listenerByName.set(name, {\\n        on: listener\\n      }));\\n      return dispatch;\\n    };\\n    return event;\\n  }\\n  d3.event = null;\\n  function d3_eventPreventDefault() {\\n    d3.event.preventDefault();\\n  }\\n  function d3_eventSource() {\\n    var e = d3.event, s;\\n    while (s = e.sourceEvent) e = s;\\n    return e;\\n  }\\n  function d3_eventDispatch(target) {\\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\\n    dispatch.of = function(thiz, argumentz) {\\n      return function(e1) {\\n        try {\\n          var e0 = e1.sourceEvent = d3.event;\\n          e1.target = target;\\n          d3.event = e1;\\n          dispatch[e1.type].apply(thiz, argumentz);\\n        } finally {\\n          d3.event = e0;\\n        }\\n      };\\n    };\\n    return dispatch;\\n  }\\n  d3.requote = function(s) {\\n    return s.replace(d3_requote_re, \\\"\\\\\\\\$&\\\");\\n  };\\n  var d3_requote_re = /[\\\\\\\\\\\\^\\\\$\\\\*\\\\+\\\\?\\\\|\\\\[\\\\]\\\\(\\\\)\\\\.\\\\{\\\\}]/g;\\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\\n    object.__proto__ = prototype;\\n  } : function(object, prototype) {\\n    for (var property in prototype) object[property] = prototype[property];\\n  };\\n  function d3_selection(groups) {\\n    d3_subclass(groups, d3_selectionPrototype);\\n    return groups;\\n  }\\n  var d3_select = function(s, n) {\\n    return n.querySelector(s);\\n  }, d3_selectAll = function(s, n) {\\n    return n.querySelectorAll(s);\\n  }, d3_selectMatches = function(n, s) {\\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \\\"matchesSelector\\\")];\\n    d3_selectMatches = function(n, s) {\\n      return d3_selectMatcher.call(n, s);\\n    };\\n    return d3_selectMatches(n, s);\\n  };\\n  if (typeof Sizzle === \\\"function\\\") {\\n    d3_select = function(s, n) {\\n      return Sizzle(s, n)[0] || null;\\n    };\\n    d3_selectAll = Sizzle;\\n    d3_selectMatches = Sizzle.matchesSelector;\\n  }\\n  d3.selection = function() {\\n    return d3.select(d3_document.documentElement);\\n  };\\n  var d3_selectionPrototype = d3.selection.prototype = [];\\n  d3_selectionPrototype.select = function(selector) {\\n    var subgroups = [], subgroup, subnode, group, node;\\n    selector = d3_selection_selector(selector);\\n    for (var j = -1, m = this.length; ++j < m; ) {\\n      subgroups.push(subgroup = []);\\n      subgroup.parentNode = (group = this[j]).parentNode;\\n      for (var i = -1, n = group.length; ++i < n; ) {\\n        if (node = group[i]) {\\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\\n          if (subnode && \\\"__data__\\\" in node) subnode.__data__ = node.__data__;\\n        } else {\\n          subgroup.push(null);\\n        }\\n      }\\n    }\\n    return d3_selection(subgroups);\\n  };\\n  function d3_selection_selector(selector) {\\n    return typeof selector === \\\"function\\\" ? selector : function() {\\n      return d3_select(selector, this);\\n    };\\n  }\\n  d3_selectionPrototype.selectAll = function(selector) {\\n    var subgroups = [], subgroup, node;\\n    selector = d3_selection_selectorAll(selector);\\n    for (var j = -1, m = this.length; ++j < m; ) {\\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\\n        if (node = group[i]) {\\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\\n          subgroup.parentNode = node;\\n        }\\n      }\\n    }\\n    return d3_selection(subgroups);\\n  };\\n  function d3_selection_selectorAll(selector) {\\n    return typeof selector === \\\"function\\\" ? selector : function() {\\n      return d3_selectAll(selector, this);\\n    };\\n  }\\n  var d3_nsXhtml = \\\"http://www.w3.org/1999/xhtml\\\";\\n  var d3_nsPrefix = {\\n    svg: \\\"http://www.w3.org/2000/svg\\\",\\n    xhtml: d3_nsXhtml,\\n    xlink: \\\"http://www.w3.org/1999/xlink\\\",\\n    xml: \\\"http://www.w3.org/XML/1998/namespace\\\",\\n    xmlns: \\\"http://www.w3.org/2000/xmlns/\\\"\\n  };\\n  d3.ns = {\\n    prefix: d3_nsPrefix,\\n    qualify: function(name) {\\n      var i = name.indexOf(\\\":\\\"), prefix = name;\\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \\\"xmlns\\\") name = name.slice(i + 1);\\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\\n        space: d3_nsPrefix[prefix],\\n        local: name\\n      } : name;\\n    }\\n  };\\n  d3_selectionPrototype.attr = function(name, value) {\\n    if (arguments.length < 2) {\\n      if (typeof name === \\\"string\\\") {\\n        var node = this.node();\\n        name = d3.ns.qualify(name);\\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\\n      }\\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\\n      return this;\\n    }\\n    return this.each(d3_selection_attr(name, value));\\n  };\\n  function d3_selection_attr(name, value) {\\n    name = d3.ns.qualify(name);\\n    function attrNull() {\\n      this.removeAttribute(name);\\n    }\\n    function attrNullNS() {\\n      this.removeAttributeNS(name.space, name.local);\\n    }\\n    function attrConstant() {\\n      this.setAttribute(name, value);\\n    }\\n    function attrConstantNS() {\\n      this.setAttributeNS(name.space, name.local, value);\\n    }\\n    function attrFunction() {\\n      var x = value.apply(this, arguments);\\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\\n    }\\n    function attrFunctionNS() {\\n      var x = value.apply(this, arguments);\\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\\n    }\\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \\\"function\\\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\\n  }\\n  function d3_collapse(s) {\\n    return s.trim().replace(/\\\\s+/g, \\\" \\\");\\n  }\\n  d3_selectionPrototype.classed = function(name, value) {\\n    if (arguments.length < 2) {\\n      if (typeof name === \\\"string\\\") {\\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\\n        if (value = node.classList) {\\n          while (++i < n) if (!value.contains(name[i])) return false;\\n        } else {\\n          value = node.getAttribute(\\\"class\\\");\\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\\n        }\\n        return true;\\n      }\\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\\n      return this;\\n    }\\n    return this.each(d3_selection_classed(name, value));\\n  };\\n  function d3_selection_classedRe(name) {\\n    return new RegExp(\\\"(?:^|\\\\\\\\s+)\\\" + d3.requote(name) + \\\"(?:\\\\\\\\s+|$)\\\", \\\"g\\\");\\n  }\\n  function d3_selection_classes(name) {\\n    return (name + \\\"\\\").trim().split(/^|\\\\s+/);\\n  }\\n  function d3_selection_classed(name, value) {\\n    name = d3_selection_classes(name).map(d3_selection_classedName);\\n    var n = name.length;\\n    function classedConstant() {\\n      var i = -1;\\n      while (++i < n) name[i](this, value);\\n    }\\n    function classedFunction() {\\n      var i = -1, x = value.apply(this, arguments);\\n      while (++i < n) name[i](this, x);\\n    }\\n    return typeof value === \\\"function\\\" ? classedFunction : classedConstant;\\n  }\\n  function d3_selection_classedName(name) {\\n    var re = d3_selection_classedRe(name);\\n    return function(node, value) {\\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\\n      var c = node.getAttribute(\\\"class\\\") || \\\"\\\";\\n      if (value) {\\n        re.lastIndex = 0;\\n        if (!re.test(c)) node.setAttribute(\\\"class\\\", d3_collapse(c + \\\" \\\" + name));\\n      } else {\\n        node.setAttribute(\\\"class\\\", d3_collapse(c.replace(re, \\\" \\\")));\\n      }\\n    };\\n  }\\n  d3_selectionPrototype.style = function(name, value, priority) {\\n    var n = arguments.length;\\n    if (n < 3) {\\n      if (typeof name !== \\\"string\\\") {\\n        if (n < 2) value = \\\"\\\";\\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\\n        return this;\\n      }\\n      if (n < 2) {\\n        var node = this.node();\\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\\n      }\\n      priority = \\\"\\\";\\n    }\\n    return this.each(d3_selection_style(name, value, priority));\\n  };\\n  function d3_selection_style(name, value, priority) {\\n    function styleNull() {\\n      this.style.removeProperty(name);\\n    }\\n    function styleConstant() {\\n      this.style.setProperty(name, value, priority);\\n    }\\n    function styleFunction() {\\n      var x = value.apply(this, arguments);\\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\\n    }\\n    return value == null ? styleNull : typeof value === \\\"function\\\" ? styleFunction : styleConstant;\\n  }\\n  d3_selectionPrototype.property = function(name, value) {\\n    if (arguments.length < 2) {\\n      if (typeof name === \\\"string\\\") return this.node()[name];\\n      for (value in name) this.each(d3_selection_property(value, name[value]));\\n      return this;\\n    }\\n    return this.each(d3_selection_property(name, value));\\n  };\\n  function d3_selection_property(name, value) {\\n    function propertyNull() {\\n      delete this[name];\\n    }\\n    function propertyConstant() {\\n      this[name] = value;\\n    }\\n    function propertyFunction() {\\n      var x = value.apply(this, arguments);\\n      if (x == null) delete this[name]; else this[name] = x;\\n    }\\n    return value == null ? propertyNull : typeof value === \\\"function\\\" ? propertyFunction : propertyConstant;\\n  }\\n  d3_selectionPrototype.text = function(value) {\\n    return arguments.length ? this.each(typeof value === \\\"function\\\" ? function() {\\n      var v = value.apply(this, arguments);\\n      this.textContent = v == null ? \\\"\\\" : v;\\n    } : value == null ? function() {\\n      this.textContent = \\\"\\\";\\n    } : function() {\\n      this.textContent = value;\\n    }) : this.node().textContent;\\n  };\\n  d3_selectionPrototype.html = function(value) {\\n    return arguments.length ? this.each(typeof value === \\\"function\\\" ? function() {\\n      var v = value.apply(this, arguments);\\n      this.innerHTML = v == null ? \\\"\\\" : v;\\n    } : value == null ? function() {\\n      this.innerHTML = \\\"\\\";\\n    } : function() {\\n      this.innerHTML = value;\\n    }) : this.node().innerHTML;\\n  };\\n  d3_selectionPrototype.append = function(name) {\\n    name = d3_selection_creator(name);\\n    return this.select(function() {\\n      return this.appendChild(name.apply(this, arguments));\\n    });\\n  };\\n  function d3_selection_creator(name) {\\n    function create() {\\n      var document = this.ownerDocument, namespace = this.namespaceURI;\\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\\n    }\\n    function createNS() {\\n      return this.ownerDocument.createElementNS(name.space, name.local);\\n    }\\n    return typeof name === \\\"function\\\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\\n  }\\n  d3_selectionPrototype.insert = function(name, before) {\\n    name = d3_selection_creator(name);\\n    before = d3_selection_selector(before);\\n    return this.select(function() {\\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\\n    });\\n  };\\n  d3_selectionPrototype.remove = function() {\\n    return this.each(d3_selectionRemove);\\n  };\\n  function d3_selectionRemove() {\\n    var parent = this.parentNode;\\n    if (parent) parent.removeChild(this);\\n  }\\n  d3_selectionPrototype.data = function(value, key) {\\n    var i = -1, n = this.length, group, node;\\n    if (!arguments.length) {\\n      value = new Array(n = (group = this[0]).length);\\n      while (++i < n) {\\n        if (node = group[i]) {\\n          value[i] = node.__data__;\\n        }\\n      }\\n      return value;\\n    }\\n    function bind(group, groupData) {\\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\\n      if (key) {\\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\\n        for (i = -1; ++i < n; ) {\\n          if (node = group[i]) {\\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\\n              exitNodes[i] = node;\\n            } else {\\n              nodeByKeyValue.set(keyValue, node);\\n            }\\n            keyValues[i] = keyValue;\\n          }\\n        }\\n        for (i = -1; ++i < m; ) {\\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\\n            enterNodes[i] = d3_selection_dataNode(nodeData);\\n          } else if (node !== true) {\\n            updateNodes[i] = node;\\n            node.__data__ = nodeData;\\n          }\\n          nodeByKeyValue.set(keyValue, true);\\n        }\\n        for (i = -1; ++i < n; ) {\\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\\n            exitNodes[i] = group[i];\\n          }\\n        }\\n      } else {\\n        for (i = -1; ++i < n0; ) {\\n          node = group[i];\\n          nodeData = groupData[i];\\n          if (node) {\\n            node.__data__ = nodeData;\\n            updateNodes[i] = node;\\n          } else {\\n            enterNodes[i] = d3_selection_dataNode(nodeData);\\n          }\\n        }\\n        for (;i < m; ++i) {\\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\\n        }\\n        for (;i < n; ++i) {\\n          exitNodes[i] = group[i];\\n        }\\n      }\\n      enterNodes.update = updateNodes;\\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\\n      enter.push(enterNodes);\\n      update.push(updateNodes);\\n      exit.push(exitNodes);\\n    }\\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\\n    if (typeof value === \\\"function\\\") {\\n      while (++i < n) {\\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\\n      }\\n    } else {\\n      while (++i < n) {\\n        bind(group = this[i], value);\\n      }\\n    }\\n    update.enter = function() {\\n      return enter;\\n    };\\n    update.exit = function() {\\n      return exit;\\n    };\\n    return update;\\n  };\\n  function d3_selection_dataNode(data) {\\n    return {\\n      __data__: data\\n    };\\n  }\\n  d3_selectionPrototype.datum = function(value) {\\n    return arguments.length ? this.property(\\\"__data__\\\", value) : this.property(\\\"__data__\\\");\\n  };\\n  d3_selectionPrototype.filter = function(filter) {\\n    var subgroups = [], subgroup, group, node;\\n    if (typeof filter !== \\\"function\\\") filter = d3_selection_filter(filter);\\n    for (var j = 0, m = this.length; j < m; j++) {\\n      subgroups.push(subgroup = []);\\n      subgroup.parentNode = (group = this[j]).parentNode;\\n      for (var i = 0, n = group.length; i < n; i++) {\\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\\n          subgroup.push(node);\\n        }\\n      }\\n    }\\n    return d3_selection(subgroups);\\n  };\\n  function d3_selection_filter(selector) {\\n    return function() {\\n      return d3_selectMatches(this, selector);\\n    };\\n  }\\n  d3_selectionPrototype.order = function() {\\n    for (var j = -1, m = this.length; ++j < m; ) {\\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\\n        if (node = group[i]) {\\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\\n          next = node;\\n        }\\n      }\\n    }\\n    return this;\\n  };\\n  d3_selectionPrototype.sort = function(comparator) {\\n    comparator = d3_selection_sortComparator.apply(this, arguments);\\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\\n    return this.order();\\n  };\\n  function d3_selection_sortComparator(comparator) {\\n    if (!arguments.length) comparator = d3_ascending;\\n    return function(a, b) {\\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\\n    };\\n  }\\n  d3_selectionPrototype.each = function(callback) {\\n    return d3_selection_each(this, function(node, i, j) {\\n      callback.call(node, node.__data__, i, j);\\n    });\\n  };\\n  function d3_selection_each(groups, callback) {\\n    for (var j = 0, m = groups.length; j < m; j++) {\\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\\n        if (node = group[i]) callback(node, i, j);\\n      }\\n    }\\n    return groups;\\n  }\\n  d3_selectionPrototype.call = function(callback) {\\n    var args = d3_array(arguments);\\n    callback.apply(args[0] = this, args);\\n    return this;\\n  };\\n  d3_selectionPrototype.empty = function() {\\n    return !this.node();\\n  };\\n  d3_selectionPrototype.node = function() {\\n    for (var j = 0, m = this.length; j < m; j++) {\\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\\n        var node = group[i];\\n        if (node) return node;\\n      }\\n    }\\n    return null;\\n  };\\n  d3_selectionPrototype.size = function() {\\n    var n = 0;\\n    d3_selection_each(this, function() {\\n      ++n;\\n    });\\n    return n;\\n  };\\n  function d3_selection_enter(selection) {\\n    d3_subclass(selection, d3_selection_enterPrototype);\\n    return selection;\\n  }\\n  var d3_selection_enterPrototype = [];\\n  d3.selection.enter = d3_selection_enter;\\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\\n  d3_selection_enterPrototype.select = function(selector) {\\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\\n    for (var j = -1, m = this.length; ++j < m; ) {\\n      upgroup = (group = this[j]).update;\\n      subgroups.push(subgroup = []);\\n      subgroup.parentNode = group.parentNode;\\n      for (var i = -1, n = group.length; ++i < n; ) {\\n        if (node = group[i]) {\\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\\n          subnode.__data__ = node.__data__;\\n        } else {\\n          subgroup.push(null);\\n        }\\n      }\\n    }\\n    return d3_selection(subgroups);\\n  };\\n  d3_selection_enterPrototype.insert = function(name, before) {\\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\\n    return d3_selectionPrototype.insert.call(this, name, before);\\n  };\\n  function d3_selection_enterInsertBefore(enter) {\\n    var i0, j0;\\n    return function(d, i, j) {\\n      var group = enter[j].update, n = group.length, node;\\n      if (j != j0) j0 = j, i0 = 0;\\n      if (i >= i0) i0 = i + 1;\\n      while (!(node = group[i0]) && ++i0 < n) ;\\n      return node;\\n    };\\n  }\\n  d3.select = function(node) {\\n    var group;\\n    if (typeof node === \\\"string\\\") {\\n      group = [ d3_select(node, d3_document) ];\\n      group.parentNode = d3_document.documentElement;\\n    } else {\\n      group = [ node ];\\n      group.parentNode = d3_documentElement(node);\\n    }\\n    return d3_selection([ group ]);\\n  };\\n  d3.selectAll = function(nodes) {\\n    var group;\\n    if (typeof nodes === \\\"string\\\") {\\n      group = d3_array(d3_selectAll(nodes, d3_document));\\n      group.parentNode = d3_document.documentElement;\\n    } else {\\n      group = d3_array(nodes);\\n      group.parentNode = null;\\n    }\\n    return d3_selection([ group ]);\\n  };\\n  d3_selectionPrototype.on = function(type, listener, capture) {\\n    var n = arguments.length;\\n    if (n < 3) {\\n      if (typeof type !== \\\"string\\\") {\\n        if (n < 2) listener = false;\\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\\n        return this;\\n      }\\n      if (n < 2) return (n = this.node()[\\\"__on\\\" + type]) && n._;\\n      capture = false;\\n    }\\n    return this.each(d3_selection_on(type, listener, capture));\\n  };\\n  function d3_selection_on(type, listener, capture) {\\n    var name = \\\"__on\\\" + type, i = type.indexOf(\\\".\\\"), wrap = d3_selection_onListener;\\n    if (i > 0) type = type.slice(0, i);\\n    var filter = d3_selection_onFilters.get(type);\\n    if (filter) type = filter, wrap = d3_selection_onFilter;\\n    function onRemove() {\\n      var l = this[name];\\n      if (l) {\\n        this.removeEventListener(type, l, l.$);\\n        delete this[name];\\n      }\\n    }\\n    function onAdd() {\\n      var l = wrap(listener, d3_array(arguments));\\n      onRemove.call(this);\\n      this.addEventListener(type, this[name] = l, l.$ = capture);\\n      l._ = listener;\\n    }\\n    function removeAll() {\\n      var re = new RegExp(\\\"^__on([^.]+)\\\" + d3.requote(type) + \\\"$\\\"), match;\\n      for (var name in this) {\\n        if (match = name.match(re)) {\\n          var l = this[name];\\n          this.removeEventListener(match[1], l, l.$);\\n          delete this[name];\\n        }\\n      }\\n    }\\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\\n  }\\n  var d3_selection_onFilters = d3.map({\\n    mouseenter: \\\"mouseover\\\",\\n    mouseleave: \\\"mouseout\\\"\\n  });\\n  if (d3_document) {\\n    d3_selection_onFilters.forEach(function(k) {\\n      if (\\\"on\\\" + k in d3_document) d3_selection_onFilters.remove(k);\\n    });\\n  }\\n  function d3_selection_onListener(listener, argumentz) {\\n    return function(e) {\\n      var o = d3.event;\\n      d3.event = e;\\n      argumentz[0] = this.__data__;\\n      try {\\n        listener.apply(this, argumentz);\\n      } finally {\\n        d3.event = o;\\n      }\\n    };\\n  }\\n  function d3_selection_onFilter(listener, argumentz) {\\n    var l = d3_selection_onListener(listener, argumentz);\\n    return function(e) {\\n      var target = this, related = e.relatedTarget;\\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\\n        l.call(target, e);\\n      }\\n    };\\n  }\\n  var d3_event_dragSelect, d3_event_dragId = 0;\\n  function d3_event_dragSuppress(node) {\\n    var name = \\\".dragsuppress-\\\" + ++d3_event_dragId, click = \\\"click\\\" + name, w = d3.select(d3_window(node)).on(\\\"touchmove\\\" + name, d3_eventPreventDefault).on(\\\"dragstart\\\" + name, d3_eventPreventDefault).on(\\\"selectstart\\\" + name, d3_eventPreventDefault);\\n    if (d3_event_dragSelect == null) {\\n      d3_event_dragSelect = \\\"onselectstart\\\" in node ? false : d3_vendorSymbol(node.style, \\\"userSelect\\\");\\n    }\\n    if (d3_event_dragSelect) {\\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\\n      style[d3_event_dragSelect] = \\\"none\\\";\\n    }\\n    return function(suppressClick) {\\n      w.on(name, null);\\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\\n      if (suppressClick) {\\n        var off = function() {\\n          w.on(click, null);\\n        };\\n        w.on(click, function() {\\n          d3_eventPreventDefault();\\n          off();\\n        }, true);\\n        setTimeout(off, 0);\\n      }\\n    };\\n  }\\n  d3.mouse = function(container) {\\n    return d3_mousePoint(container, d3_eventSource());\\n  };\\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\\n  function d3_mousePoint(container, e) {\\n    if (e.changedTouches) e = e.changedTouches[0];\\n    var svg = container.ownerSVGElement || container;\\n    if (svg.createSVGPoint) {\\n      var point = svg.createSVGPoint();\\n      if (d3_mouse_bug44083 < 0) {\\n        var window = d3_window(container);\\n        if (window.scrollX || window.scrollY) {\\n          svg = d3.select(\\\"body\\\").append(\\\"svg\\\").style({\\n            position: \\\"absolute\\\",\\n            top: 0,\\n            left: 0,\\n            margin: 0,\\n            padding: 0,\\n            border: \\\"none\\\"\\n          }, \\\"important\\\");\\n          var ctm = svg[0][0].getScreenCTM();\\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\\n          svg.remove();\\n        }\\n      }\\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \\n      point.y = e.clientY;\\n      point = point.matrixTransform(container.getScreenCTM().inverse());\\n      return [ point.x, point.y ];\\n    }\\n    var rect = container.getBoundingClientRect();\\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\\n  }\\n  d3.touch = function(container, touches, identifier) {\\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\\n      if ((touch = touches[i]).identifier === identifier) {\\n        return d3_mousePoint(container, touch);\\n      }\\n    }\\n  };\\n  d3.behavior.drag = function() {\\n    var event = d3_eventDispatch(drag, \\\"drag\\\", \\\"dragstart\\\", \\\"dragend\\\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \\\"mousemove\\\", \\\"mouseup\\\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \\\"touchmove\\\", \\\"touchend\\\");\\n    function drag() {\\n      this.on(\\\"mousedown.drag\\\", mousedown).on(\\\"touchstart.drag\\\", touchstart);\\n    }\\n    function dragstart(id, position, subject, move, end) {\\n      return function() {\\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \\\".drag\\\" + (dragId == null ? \\\"\\\" : \\\"-\\\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\\n        if (origin) {\\n          dragOffset = origin.apply(that, arguments);\\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\\n        } else {\\n          dragOffset = [ 0, 0 ];\\n        }\\n        dispatch({\\n          type: \\\"dragstart\\\"\\n        });\\n        function moved() {\\n          var position1 = position(parent, dragId), dx, dy;\\n          if (!position1) return;\\n          dx = position1[0] - position0[0];\\n          dy = position1[1] - position0[1];\\n          dragged |= dx | dy;\\n          position0 = position1;\\n          dispatch({\\n            type: \\\"drag\\\",\\n            x: position1[0] + dragOffset[0],\\n            y: position1[1] + dragOffset[1],\\n            dx: dx,\\n            dy: dy\\n          });\\n        }\\n        function ended() {\\n          if (!position(parent, dragId)) return;\\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\\n          dragRestore(dragged);\\n          dispatch({\\n            type: \\\"dragend\\\"\\n          });\\n        }\\n      };\\n    }\\n    drag.origin = function(x) {\\n      if (!arguments.length) return origin;\\n      origin = x;\\n      return drag;\\n    };\\n    return d3.rebind(drag, event, \\\"on\\\");\\n  };\\n  function d3_behavior_dragTouchId() {\\n    return d3.event.changedTouches[0].identifier;\\n  }\\n  d3.touches = function(container, touches) {\\n    if (arguments.length < 2) touches = d3_eventSource().touches;\\n    return touches ? d3_array(touches).map(function(touch) {\\n      var point = d3_mousePoint(container, touch);\\n      point.identifier = touch.identifier;\\n      return point;\\n    }) : [];\\n  };\\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\\n  function d3_sgn(x) {\\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\\n  }\\n  function d3_cross2d(a, b, c) {\\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\\n  }\\n  function d3_acos(x) {\\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\\n  }\\n  function d3_asin(x) {\\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\\n  }\\n  function d3_sinh(x) {\\n    return ((x = Math.exp(x)) - 1 / x) / 2;\\n  }\\n  function d3_cosh(x) {\\n    return ((x = Math.exp(x)) + 1 / x) / 2;\\n  }\\n  function d3_tanh(x) {\\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\\n  }\\n  function d3_haversin(x) {\\n    return (x = Math.sin(x / 2)) * x;\\n  }\\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\\n  d3.interpolateZoom = function(p0, p1) {\\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\\n    if (d2 < ε2) {\\n      S = Math.log(w1 / w0) / ρ;\\n      i = function(t) {\\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\\n      };\\n    } else {\\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\\n      S = (r1 - r0) / ρ;\\n      i = function(t) {\\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\\n      };\\n    }\\n    i.duration = S * 1e3;\\n    return i;\\n  };\\n  d3.behavior.zoom = function() {\\n    var view = {\\n      x: 0,\\n      y: 0,\\n      k: 1\\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \\\"mousedown.zoom\\\", mousemove = \\\"mousemove.zoom\\\", mouseup = \\\"mouseup.zoom\\\", mousewheelTimer, touchstart = \\\"touchstart.zoom\\\", touchtime, event = d3_eventDispatch(zoom, \\\"zoomstart\\\", \\\"zoom\\\", \\\"zoomend\\\"), x0, x1, y0, y1;\\n    if (!d3_behavior_zoomWheel) {\\n      d3_behavior_zoomWheel = \\\"onwheel\\\" in d3_document ? (d3_behavior_zoomDelta = function() {\\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\\n      }, \\\"wheel\\\") : \\\"onmousewheel\\\" in d3_document ? (d3_behavior_zoomDelta = function() {\\n        return d3.event.wheelDelta;\\n      }, \\\"mousewheel\\\") : (d3_behavior_zoomDelta = function() {\\n        return -d3.event.detail;\\n      }, \\\"MozMousePixelScroll\\\");\\n    }\\n    function zoom(g) {\\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \\\".zoom\\\", mousewheeled).on(\\\"dblclick.zoom\\\", dblclicked).on(touchstart, touchstarted);\\n    }\\n    zoom.event = function(g) {\\n      g.each(function() {\\n        var dispatch = event.of(this, arguments), view1 = view;\\n        if (d3_transitionInheritId) {\\n          d3.select(this).transition().each(\\\"start.zoom\\\", function() {\\n            view = this.__chart__ || {\\n              x: 0,\\n              y: 0,\\n              k: 1\\n            };\\n            zoomstarted(dispatch);\\n          }).tween(\\\"zoom:zoom\\\", function() {\\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\\n            return function(t) {\\n              var l = i(t), k = dx / l[2];\\n              this.__chart__ = view = {\\n                x: cx - l[0] * k,\\n                y: cy - l[1] * k,\\n                k: k\\n              };\\n              zoomed(dispatch);\\n            };\\n          }).each(\\\"interrupt.zoom\\\", function() {\\n            zoomended(dispatch);\\n          }).each(\\\"end.zoom\\\", function() {\\n            zoomended(dispatch);\\n          });\\n        } else {\\n          this.__chart__ = view;\\n          zoomstarted(dispatch);\\n          zoomed(dispatch);\\n          zoomended(dispatch);\\n        }\\n      });\\n    };\\n    zoom.translate = function(_) {\\n      if (!arguments.length) return [ view.x, view.y ];\\n      view = {\\n        x: +_[0],\\n        y: +_[1],\\n        k: view.k\\n      };\\n      rescale();\\n      return zoom;\\n    };\\n    zoom.scale = function(_) {\\n      if (!arguments.length) return view.k;\\n      view = {\\n        x: view.x,\\n        y: view.y,\\n        k: null\\n      };\\n      scaleTo(+_);\\n      rescale();\\n      return zoom;\\n    };\\n    zoom.scaleExtent = function(_) {\\n      if (!arguments.length) return scaleExtent;\\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\\n      return zoom;\\n    };\\n    zoom.center = function(_) {\\n      if (!arguments.length) return center;\\n      center = _ && [ +_[0], +_[1] ];\\n      return zoom;\\n    };\\n    zoom.size = function(_) {\\n      if (!arguments.length) return size;\\n      size = _ && [ +_[0], +_[1] ];\\n      return zoom;\\n    };\\n    zoom.duration = function(_) {\\n      if (!arguments.length) return duration;\\n      duration = +_;\\n      return zoom;\\n    };\\n    zoom.x = function(z) {\\n      if (!arguments.length) return x1;\\n      x1 = z;\\n      x0 = z.copy();\\n      view = {\\n        x: 0,\\n        y: 0,\\n        k: 1\\n      };\\n      return zoom;\\n    };\\n    zoom.y = function(z) {\\n      if (!arguments.length) return y1;\\n      y1 = z;\\n      y0 = z.copy();\\n      view = {\\n        x: 0,\\n        y: 0,\\n        k: 1\\n      };\\n      return zoom;\\n    };\\n    function location(p) {\\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\\n    }\\n    function point(l) {\\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\\n    }\\n    function scaleTo(s) {\\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\\n    }\\n    function translateTo(p, l) {\\n      l = point(l);\\n      view.x += p[0] - l[0];\\n      view.y += p[1] - l[1];\\n    }\\n    function zoomTo(that, p, l, k) {\\n      that.__chart__ = {\\n        x: view.x,\\n        y: view.y,\\n        k: view.k\\n      };\\n      scaleTo(Math.pow(2, k));\\n      translateTo(center0 = p, l);\\n      that = d3.select(that);\\n      if (duration > 0) that = that.transition().duration(duration);\\n      that.call(zoom.event);\\n    }\\n    function rescale() {\\n      if (x1) x1.domain(x0.range().map(function(x) {\\n        return (x - view.x) / view.k;\\n      }).map(x0.invert));\\n      if (y1) y1.domain(y0.range().map(function(y) {\\n        return (y - view.y) / view.k;\\n      }).map(y0.invert));\\n    }\\n    function zoomstarted(dispatch) {\\n      if (!zooming++) dispatch({\\n        type: \\\"zoomstart\\\"\\n      });\\n    }\\n    function zoomed(dispatch) {\\n      rescale();\\n      dispatch({\\n        type: \\\"zoom\\\",\\n        scale: view.k,\\n        translate: [ view.x, view.y ]\\n      });\\n    }\\n    function zoomended(dispatch) {\\n      if (!--zooming) dispatch({\\n        type: \\\"zoomend\\\"\\n      }), center0 = null;\\n    }\\n    function mousedowned() {\\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\\n      d3_selection_interrupt.call(that);\\n      zoomstarted(dispatch);\\n      function moved() {\\n        dragged = 1;\\n        translateTo(d3.mouse(that), location0);\\n        zoomed(dispatch);\\n      }\\n      function ended() {\\n        subject.on(mousemove, null).on(mouseup, null);\\n        dragRestore(dragged);\\n        zoomended(dispatch);\\n      }\\n    }\\n    function touchstarted() {\\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \\\".zoom-\\\" + d3.event.changedTouches[0].identifier, touchmove = \\\"touchmove\\\" + zoomName, touchend = \\\"touchend\\\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\\n      started();\\n      zoomstarted(dispatch);\\n      subject.on(mousedown, null).on(touchstart, started);\\n      function relocate() {\\n        var touches = d3.touches(that);\\n        scale0 = view.k;\\n        touches.forEach(function(t) {\\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\\n        });\\n        return touches;\\n      }\\n      function started() {\\n        var target = d3.event.target;\\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\\n        targets.push(target);\\n        var changed = d3.event.changedTouches;\\n        for (var i = 0, n = changed.length; i < n; ++i) {\\n          locations0[changed[i].identifier] = null;\\n        }\\n        var touches = relocate(), now = Date.now();\\n        if (touches.length === 1) {\\n          if (now - touchtime < 500) {\\n            var p = touches[0];\\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\\n            d3_eventPreventDefault();\\n          }\\n          touchtime = now;\\n        } else if (touches.length > 1) {\\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\\n          distance0 = dx * dx + dy * dy;\\n        }\\n      }\\n      function moved() {\\n        var touches = d3.touches(that), p0, l0, p1, l1;\\n        d3_selection_interrupt.call(that);\\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\\n          p1 = touches[i];\\n          if (l1 = locations0[p1.identifier]) {\\n            if (l0) break;\\n            p0 = p1, l0 = l1;\\n          }\\n        }\\n        if (l1) {\\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\\n          scaleTo(scale1 * scale0);\\n        }\\n        touchtime = null;\\n        translateTo(p0, l0);\\n        zoomed(dispatch);\\n      }\\n      function ended() {\\n        if (d3.event.touches.length) {\\n          var changed = d3.event.changedTouches;\\n          for (var i = 0, n = changed.length; i < n; ++i) {\\n            delete locations0[changed[i].identifier];\\n          }\\n          for (var identifier in locations0) {\\n            return void relocate();\\n          }\\n        }\\n        d3.selectAll(targets).on(zoomName, null);\\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\\n        dragRestore();\\n        zoomended(dispatch);\\n      }\\n    }\\n    function mousewheeled() {\\n      var dispatch = event.of(this, arguments);\\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \\n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\\n      mousewheelTimer = setTimeout(function() {\\n        mousewheelTimer = null;\\n        zoomended(dispatch);\\n      }, 50);\\n      d3_eventPreventDefault();\\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\\n      translateTo(center0, translate0);\\n      zoomed(dispatch);\\n    }\\n    function dblclicked() {\\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\\n    }\\n    return d3.rebind(zoom, event, \\\"on\\\");\\n  };\\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\\n  d3.color = d3_color;\\n  function d3_color() {}\\n  d3_color.prototype.toString = function() {\\n    return this.rgb() + \\\"\\\";\\n  };\\n  d3.hsl = d3_hsl;\\n  function d3_hsl(h, s, l) {\\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\\\"\\\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\\n  }\\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\\n  d3_hslPrototype.brighter = function(k) {\\n    k = Math.pow(.7, arguments.length ? k : 1);\\n    return new d3_hsl(this.h, this.s, this.l / k);\\n  };\\n  d3_hslPrototype.darker = function(k) {\\n    k = Math.pow(.7, arguments.length ? k : 1);\\n    return new d3_hsl(this.h, this.s, k * this.l);\\n  };\\n  d3_hslPrototype.rgb = function() {\\n    return d3_hsl_rgb(this.h, this.s, this.l);\\n  };\\n  function d3_hsl_rgb(h, s, l) {\\n    var m1, m2;\\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\\n    m1 = 2 * l - m2;\\n    function v(h) {\\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\\n      if (h < 180) return m2;\\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\\n      return m1;\\n    }\\n    function vv(h) {\\n      return Math.round(v(h) * 255);\\n    }\\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\\n  }\\n  d3.hcl = d3_hcl;\\n  function d3_hcl(h, c, l) {\\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\\n  }\\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\\n  d3_hclPrototype.brighter = function(k) {\\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\\n  };\\n  d3_hclPrototype.darker = function(k) {\\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\\n  };\\n  d3_hclPrototype.rgb = function() {\\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\\n  };\\n  function d3_hcl_lab(h, c, l) {\\n    if (isNaN(h)) h = 0;\\n    if (isNaN(c)) c = 0;\\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\\n  }\\n  d3.lab = d3_lab;\\n  function d3_lab(l, a, b) {\\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\\n  }\\n  var d3_lab_K = 18;\\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\\n  d3_labPrototype.brighter = function(k) {\\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\\n  };\\n  d3_labPrototype.darker = function(k) {\\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\\n  };\\n  d3_labPrototype.rgb = function() {\\n    return d3_lab_rgb(this.l, this.a, this.b);\\n  };\\n  function d3_lab_rgb(l, a, b) {\\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\\n    x = d3_lab_xyz(x) * d3_lab_X;\\n    y = d3_lab_xyz(y) * d3_lab_Y;\\n    z = d3_lab_xyz(z) * d3_lab_Z;\\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\\n  }\\n  function d3_lab_hcl(l, a, b) {\\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\\n  }\\n  function d3_lab_xyz(x) {\\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\\n  }\\n  function d3_xyz_lab(x) {\\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\\n  }\\n  function d3_xyz_rgb(r) {\\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\\n  }\\n  d3.rgb = d3_rgb;\\n  function d3_rgb(r, g, b) {\\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\\\"\\\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\\n  }\\n  function d3_rgbNumber(value) {\\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\\n  }\\n  function d3_rgbString(value) {\\n    return d3_rgbNumber(value) + \\\"\\\";\\n  }\\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\\n  d3_rgbPrototype.brighter = function(k) {\\n    k = Math.pow(.7, arguments.length ? k : 1);\\n    var r = this.r, g = this.g, b = this.b, i = 30;\\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\\n    if (r && r < i) r = i;\\n    if (g && g < i) g = i;\\n    if (b && b < i) b = i;\\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\\n  };\\n  d3_rgbPrototype.darker = function(k) {\\n    k = Math.pow(.7, arguments.length ? k : 1);\\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\\n  };\\n  d3_rgbPrototype.hsl = function() {\\n    return d3_rgb_hsl(this.r, this.g, this.b);\\n  };\\n  d3_rgbPrototype.toString = function() {\\n    return \\\"#\\\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\\n  };\\n  function d3_rgb_hex(v) {\\n    return v < 16 ? \\\"0\\\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\\n  }\\n  function d3_rgb_parse(format, rgb, hsl) {\\n    var r = 0, g = 0, b = 0, m1, m2, color;\\n    m1 = /([a-z]+)\\\\((.*)\\\\)/.exec(format = format.toLowerCase());\\n    if (m1) {\\n      m2 = m1[2].split(\\\",\\\");\\n      switch (m1[1]) {\\n       case \\\"hsl\\\":\\n        {\\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\\n        }\\n\\n       case \\\"rgb\\\":\\n        {\\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\\n        }\\n      }\\n    }\\n    if (color = d3_rgb_names.get(format)) {\\n      return rgb(color.r, color.g, color.b);\\n    }\\n    if (format != null && format.charAt(0) === \\\"#\\\" && !isNaN(color = parseInt(format.slice(1), 16))) {\\n      if (format.length === 4) {\\n        r = (color & 3840) >> 4;\\n        r = r >> 4 | r;\\n        g = color & 240;\\n        g = g >> 4 | g;\\n        b = color & 15;\\n        b = b << 4 | b;\\n      } else if (format.length === 7) {\\n        r = (color & 16711680) >> 16;\\n        g = (color & 65280) >> 8;\\n        b = color & 255;\\n      }\\n    }\\n    return rgb(r, g, b);\\n  }\\n  function d3_rgb_hsl(r, g, b) {\\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\\n    if (d) {\\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\\n      h *= 60;\\n    } else {\\n      h = NaN;\\n      s = l > 0 && l < 1 ? 0 : h;\\n    }\\n    return new d3_hsl(h, s, l);\\n  }\\n  function d3_rgb_lab(r, g, b) {\\n    r = d3_rgb_xyz(r);\\n    g = d3_rgb_xyz(g);\\n    b = d3_rgb_xyz(b);\\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\\n  }\\n  function d3_rgb_xyz(r) {\\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\\n  }\\n  function d3_rgb_parseNumber(c) {\\n    var f = parseFloat(c);\\n    return c.charAt(c.length - 1) === \\\"%\\\" ? Math.round(f * 2.55) : f;\\n  }\\n  var d3_rgb_names = d3.map({\\n    aliceblue: 15792383,\\n    antiquewhite: 16444375,\\n    aqua: 65535,\\n    aquamarine: 8388564,\\n    azure: 15794175,\\n    beige: 16119260,\\n    bisque: 16770244,\\n    black: 0,\\n    blanchedalmond: 16772045,\\n    blue: 255,\\n    blueviolet: 9055202,\\n    brown: 10824234,\\n    burlywood: 14596231,\\n    cadetblue: 6266528,\\n    chartreuse: 8388352,\\n    chocolate: 13789470,\\n    coral: 16744272,\\n    cornflowerblue: 6591981,\\n    cornsilk: 16775388,\\n    crimson: 14423100,\\n    cyan: 65535,\\n    darkblue: 139,\\n    darkcyan: 35723,\\n    darkgoldenrod: 12092939,\\n    darkgray: 11119017,\\n    darkgreen: 25600,\\n    darkgrey: 11119017,\\n    darkkhaki: 12433259,\\n    darkmagenta: 9109643,\\n    darkolivegreen: 5597999,\\n    darkorange: 16747520,\\n    darkorchid: 10040012,\\n    darkred: 9109504,\\n    darksalmon: 15308410,\\n    darkseagreen: 9419919,\\n    darkslateblue: 4734347,\\n    darkslategray: 3100495,\\n    darkslategrey: 3100495,\\n    darkturquoise: 52945,\\n    darkviolet: 9699539,\\n    deeppink: 16716947,\\n    deepskyblue: 49151,\\n    dimgray: 6908265,\\n    dimgrey: 6908265,\\n    dodgerblue: 2003199,\\n    firebrick: 11674146,\\n    floralwhite: 16775920,\\n    forestgreen: 2263842,\\n    fuchsia: 16711935,\\n    gainsboro: 14474460,\\n    ghostwhite: 16316671,\\n    gold: 16766720,\\n    goldenrod: 14329120,\\n    gray: 8421504,\\n    green: 32768,\\n    greenyellow: 11403055,\\n    grey: 8421504,\\n    honeydew: 15794160,\\n    hotpink: 16738740,\\n    indianred: 13458524,\\n    indigo: 4915330,\\n    ivory: 16777200,\\n    khaki: 15787660,\\n    lavender: 15132410,\\n    lavenderblush: 16773365,\\n    lawngreen: 8190976,\\n    lemonchiffon: 16775885,\\n    lightblue: 11393254,\\n    lightcoral: 15761536,\\n    lightcyan: 14745599,\\n    lightgoldenrodyellow: 16448210,\\n    lightgray: 13882323,\\n    lightgreen: 9498256,\\n    lightgrey: 13882323,\\n    lightpink: 16758465,\\n    lightsalmon: 16752762,\\n    lightseagreen: 2142890,\\n    lightskyblue: 8900346,\\n    lightslategray: 7833753,\\n    lightslategrey: 7833753,\\n    lightsteelblue: 11584734,\\n    lightyellow: 16777184,\\n    lime: 65280,\\n    limegreen: 3329330,\\n    linen: 16445670,\\n    magenta: 16711935,\\n    maroon: 8388608,\\n    mediumaquamarine: 6737322,\\n    mediumblue: 205,\\n    mediumorchid: 12211667,\\n    mediumpurple: 9662683,\\n    mediumseagreen: 3978097,\\n    mediumslateblue: 8087790,\\n    mediumspringgreen: 64154,\\n    mediumturquoise: 4772300,\\n    mediumvioletred: 13047173,\\n    midnightblue: 1644912,\\n    mintcream: 16121850,\\n    mistyrose: 16770273,\\n    moccasin: 16770229,\\n    navajowhite: 16768685,\\n    navy: 128,\\n    oldlace: 16643558,\\n    olive: 8421376,\\n    olivedrab: 7048739,\\n    orange: 16753920,\\n    orangered: 16729344,\\n    orchid: 14315734,\\n    palegoldenrod: 15657130,\\n    palegreen: 10025880,\\n    paleturquoise: 11529966,\\n    palevioletred: 14381203,\\n    papayawhip: 16773077,\\n    peachpuff: 16767673,\\n    peru: 13468991,\\n    pink: 16761035,\\n    plum: 14524637,\\n    powderblue: 11591910,\\n    purple: 8388736,\\n    rebeccapurple: 6697881,\\n    red: 16711680,\\n    rosybrown: 12357519,\\n    royalblue: 4286945,\\n    saddlebrown: 9127187,\\n    salmon: 16416882,\\n    sandybrown: 16032864,\\n    seagreen: 3050327,\\n    seashell: 16774638,\\n    sienna: 10506797,\\n    silver: 12632256,\\n    skyblue: 8900331,\\n    slateblue: 6970061,\\n    slategray: 7372944,\\n    slategrey: 7372944,\\n    snow: 16775930,\\n    springgreen: 65407,\\n    steelblue: 4620980,\\n    tan: 13808780,\\n    teal: 32896,\\n    thistle: 14204888,\\n    tomato: 16737095,\\n    turquoise: 4251856,\\n    violet: 15631086,\\n    wheat: 16113331,\\n    white: 16777215,\\n    whitesmoke: 16119285,\\n    yellow: 16776960,\\n    yellowgreen: 10145074\\n  });\\n  d3_rgb_names.forEach(function(key, value) {\\n    d3_rgb_names.set(key, d3_rgbNumber(value));\\n  });\\n  function d3_functor(v) {\\n    return typeof v === \\\"function\\\" ? v : function() {\\n      return v;\\n    };\\n  }\\n  d3.functor = d3_functor;\\n  d3.xhr = d3_xhrType(d3_identity);\\n  function d3_xhrType(response) {\\n    return function(url, mimeType, callback) {\\n      if (arguments.length === 2 && typeof mimeType === \\\"function\\\") callback = mimeType, \\n      mimeType = null;\\n      return d3_xhr(url, mimeType, response, callback);\\n    };\\n  }\\n  function d3_xhr(url, mimeType, response, callback) {\\n    var xhr = {}, dispatch = d3.dispatch(\\\"beforesend\\\", \\\"progress\\\", \\\"load\\\", \\\"error\\\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\\n    if (this.XDomainRequest && !(\\\"withCredentials\\\" in request) && /^(http(s)?:)?\\\\/\\\\//.test(url)) request = new XDomainRequest();\\n    \\\"onload\\\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\\n      request.readyState > 3 && respond();\\n    };\\n    function respond() {\\n      var status = request.status, result;\\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\\n        try {\\n          result = response.call(xhr, request);\\n        } catch (e) {\\n          dispatch.error.call(xhr, e);\\n          return;\\n        }\\n        dispatch.load.call(xhr, result);\\n      } else {\\n        dispatch.error.call(xhr, request);\\n      }\\n    }\\n    request.onprogress = function(event) {\\n      var o = d3.event;\\n      d3.event = event;\\n      try {\\n        dispatch.progress.call(xhr, request);\\n      } finally {\\n        d3.event = o;\\n      }\\n    };\\n    xhr.header = function(name, value) {\\n      name = (name + \\\"\\\").toLowerCase();\\n      if (arguments.length < 2) return headers[name];\\n      if (value == null) delete headers[name]; else headers[name] = value + \\\"\\\";\\n      return xhr;\\n    };\\n    xhr.mimeType = function(value) {\\n      if (!arguments.length) return mimeType;\\n      mimeType = value == null ? null : value + \\\"\\\";\\n      return xhr;\\n    };\\n    xhr.responseType = function(value) {\\n      if (!arguments.length) return responseType;\\n      responseType = value;\\n      return xhr;\\n    };\\n    xhr.response = function(value) {\\n      response = value;\\n      return xhr;\\n    };\\n    [ \\\"get\\\", \\\"post\\\" ].forEach(function(method) {\\n      xhr[method] = function() {\\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\\n      };\\n    });\\n    xhr.send = function(method, data, callback) {\\n      if (arguments.length === 2 && typeof data === \\\"function\\\") callback = data, data = null;\\n      request.open(method, url, true);\\n      if (mimeType != null && !(\\\"accept\\\" in headers)) headers[\\\"accept\\\"] = mimeType + \\\",*/*\\\";\\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\\n      if (responseType != null) request.responseType = responseType;\\n      if (callback != null) xhr.on(\\\"error\\\", callback).on(\\\"load\\\", function(request) {\\n        callback(null, request);\\n      });\\n      dispatch.beforesend.call(xhr, request);\\n      request.send(data == null ? null : data);\\n      return xhr;\\n    };\\n    xhr.abort = function() {\\n      request.abort();\\n      return xhr;\\n    };\\n    d3.rebind(xhr, dispatch, \\\"on\\\");\\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\\n  }\\n  function d3_xhr_fixCallback(callback) {\\n    return callback.length === 1 ? function(error, request) {\\n      callback(error == null ? request : null);\\n    } : callback;\\n  }\\n  function d3_xhrHasResponse(request) {\\n    var type = request.responseType;\\n    return type && type !== \\\"text\\\" ? request.response : request.responseText;\\n  }\\n  d3.dsv = function(delimiter, mimeType) {\\n    var reFormat = new RegExp('[\\\"' + delimiter + \\\"\\\\n]\\\"), delimiterCode = delimiter.charCodeAt(0);\\n    function dsv(url, row, callback) {\\n      if (arguments.length < 3) callback = row, row = null;\\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\\n      xhr.row = function(_) {\\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\\n      };\\n      return xhr;\\n    }\\n    function response(request) {\\n      return dsv.parse(request.responseText);\\n    }\\n    function typedResponse(f) {\\n      return function(request) {\\n        return dsv.parse(request.responseText, f);\\n      };\\n    }\\n    dsv.parse = function(text, f) {\\n      var o;\\n      return dsv.parseRows(text, function(row, i) {\\n        if (o) return o(row, i - 1);\\n        var a = new Function(\\\"d\\\", \\\"return {\\\" + row.map(function(name, i) {\\n          return JSON.stringify(name) + \\\": d[\\\" + i + \\\"]\\\";\\n        }).join(\\\",\\\") + \\\"}\\\");\\n        o = f ? function(row, i) {\\n          return f(a(row), i);\\n        } : a;\\n      });\\n    };\\n    dsv.parseRows = function(text, f) {\\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\\n      function token() {\\n        if (I >= N) return EOF;\\n        if (eol) return eol = false, EOL;\\n        var j = I;\\n        if (text.charCodeAt(j) === 34) {\\n          var i = j;\\n          while (i++ < N) {\\n            if (text.charCodeAt(i) === 34) {\\n              if (text.charCodeAt(i + 1) !== 34) break;\\n              ++i;\\n            }\\n          }\\n          I = i + 2;\\n          var c = text.charCodeAt(i + 1);\\n          if (c === 13) {\\n            eol = true;\\n            if (text.charCodeAt(i + 2) === 10) ++I;\\n          } else if (c === 10) {\\n            eol = true;\\n          }\\n          return text.slice(j + 1, i).replace(/\\\"\\\"/g, '\\\"');\\n        }\\n        while (I < N) {\\n          var c = text.charCodeAt(I++), k = 1;\\n          if (c === 10) eol = true; else if (c === 13) {\\n            eol = true;\\n            if (text.charCodeAt(I) === 10) ++I, ++k;\\n          } else if (c !== delimiterCode) continue;\\n          return text.slice(j, I - k);\\n        }\\n        return text.slice(j);\\n      }\\n      while ((t = token()) !== EOF) {\\n        var a = [];\\n        while (t !== EOL && t !== EOF) {\\n          a.push(t);\\n          t = token();\\n        }\\n        if (f && (a = f(a, n++)) == null) continue;\\n        rows.push(a);\\n      }\\n      return rows;\\n    };\\n    dsv.format = function(rows) {\\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\\n      var fieldSet = new d3_Set(), fields = [];\\n      rows.forEach(function(row) {\\n        for (var field in row) {\\n          if (!fieldSet.has(field)) {\\n            fields.push(fieldSet.add(field));\\n          }\\n        }\\n      });\\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\\n        return fields.map(function(field) {\\n          return formatValue(row[field]);\\n        }).join(delimiter);\\n      })).join(\\\"\\\\n\\\");\\n    };\\n    dsv.formatRows = function(rows) {\\n      return rows.map(formatRow).join(\\\"\\\\n\\\");\\n    };\\n    function formatRow(row) {\\n      return row.map(formatValue).join(delimiter);\\n    }\\n    function formatValue(text) {\\n      return reFormat.test(text) ? '\\\"' + text.replace(/\\\\\\\"/g, '\\\"\\\"') + '\\\"' : text;\\n    }\\n    return dsv;\\n  };\\n  d3.csv = d3.dsv(\\\",\\\", \\\"text/csv\\\");\\n  d3.tsv = d3.dsv(\\\"\\t\\\", \\\"text/tab-separated-values\\\");\\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \\\"requestAnimationFrame\\\")] || function(callback) {\\n    setTimeout(callback, 17);\\n  };\\n  d3.timer = function() {\\n    d3_timer.apply(this, arguments);\\n  };\\n  function d3_timer(callback, delay, then) {\\n    var n = arguments.length;\\n    if (n < 2) delay = 0;\\n    if (n < 3) then = Date.now();\\n    var time = then + delay, timer = {\\n      c: callback,\\n      t: time,\\n      n: null\\n    };\\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\\n    d3_timer_queueTail = timer;\\n    if (!d3_timer_interval) {\\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\\n      d3_timer_interval = 1;\\n      d3_timer_frame(d3_timer_step);\\n    }\\n    return timer;\\n  }\\n  function d3_timer_step() {\\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\\n    if (delay > 24) {\\n      if (isFinite(delay)) {\\n        clearTimeout(d3_timer_timeout);\\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\\n      }\\n      d3_timer_interval = 0;\\n    } else {\\n      d3_timer_interval = 1;\\n      d3_timer_frame(d3_timer_step);\\n    }\\n  }\\n  d3.timer.flush = function() {\\n    d3_timer_mark();\\n    d3_timer_sweep();\\n  };\\n  function d3_timer_mark() {\\n    var now = Date.now(), timer = d3_timer_queueHead;\\n    while (timer) {\\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\\n      timer = timer.n;\\n    }\\n    return now;\\n  }\\n  function d3_timer_sweep() {\\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\\n    while (t1) {\\n      if (t1.c) {\\n        if (t1.t < time) time = t1.t;\\n        t1 = (t0 = t1).n;\\n      } else {\\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\\n      }\\n    }\\n    d3_timer_queueTail = t0;\\n    return time;\\n  }\\n  function d3_format_precision(x, p) {\\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\\n  }\\n  d3.round = function(x, n) {\\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\\n  };\\n  var d3_formatPrefixes = [ \\\"y\\\", \\\"z\\\", \\\"a\\\", \\\"f\\\", \\\"p\\\", \\\"n\\\", \\\"µ\\\", \\\"m\\\", \\\"\\\", \\\"k\\\", \\\"M\\\", \\\"G\\\", \\\"T\\\", \\\"P\\\", \\\"E\\\", \\\"Z\\\", \\\"Y\\\" ].map(d3_formatPrefix);\\n  d3.formatPrefix = function(value, precision) {\\n    var i = 0;\\n    if (value = +value) {\\n      if (value < 0) value *= -1;\\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\\n    }\\n    return d3_formatPrefixes[8 + i / 3];\\n  };\\n  function d3_formatPrefix(d, i) {\\n    var k = Math.pow(10, abs(8 - i) * 3);\\n    return {\\n      scale: i > 8 ? function(d) {\\n        return d / k;\\n      } : function(d) {\\n        return d * k;\\n      },\\n      symbol: d\\n    };\\n  }\\n  function d3_locale_numberFormat(locale) {\\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\\n      while (i > 0 && g > 0) {\\n        if (length + g + 1 > width) g = Math.max(1, width - length);\\n        t.push(value.substring(i -= g, i + g));\\n        if ((length += g + 1) > width) break;\\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\\n      }\\n      return t.reverse().join(locale_thousands);\\n    } : d3_identity;\\n    return function(specifier) {\\n      var match = d3_format_re.exec(specifier), fill = match[1] || \\\" \\\", align = match[2] || \\\">\\\", sign = match[3] || \\\"-\\\", symbol = match[4] || \\\"\\\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \\\"\\\", suffix = \\\"\\\", integer = false, exponent = true;\\n      if (precision) precision = +precision.substring(1);\\n      if (zfill || fill === \\\"0\\\" && align === \\\"=\\\") {\\n        zfill = fill = \\\"0\\\";\\n        align = \\\"=\\\";\\n      }\\n      switch (type) {\\n       case \\\"n\\\":\\n        comma = true;\\n        type = \\\"g\\\";\\n        break;\\n\\n       case \\\"%\\\":\\n        scale = 100;\\n        suffix = \\\"%\\\";\\n        type = \\\"f\\\";\\n        break;\\n\\n       case \\\"p\\\":\\n        scale = 100;\\n        suffix = \\\"%\\\";\\n        type = \\\"r\\\";\\n        break;\\n\\n       case \\\"b\\\":\\n       case \\\"o\\\":\\n       case \\\"x\\\":\\n       case \\\"X\\\":\\n        if (symbol === \\\"#\\\") prefix = \\\"0\\\" + type.toLowerCase();\\n\\n       case \\\"c\\\":\\n        exponent = false;\\n\\n       case \\\"d\\\":\\n        integer = true;\\n        precision = 0;\\n        break;\\n\\n       case \\\"s\\\":\\n        scale = -1;\\n        type = \\\"r\\\";\\n        break;\\n      }\\n      if (symbol === \\\"$\\\") prefix = locale_currency[0], suffix = locale_currency[1];\\n      if (type == \\\"r\\\" && !precision) type = \\\"g\\\";\\n      if (precision != null) {\\n        if (type == \\\"g\\\") precision = Math.max(1, Math.min(21, precision)); else if (type == \\\"e\\\" || type == \\\"f\\\") precision = Math.max(0, Math.min(20, precision));\\n      }\\n      type = d3_format_types.get(type) || d3_format_typeDefault;\\n      var zcomma = zfill && comma;\\n      return function(value) {\\n        var fullSuffix = suffix;\\n        if (integer && value % 1) return \\\"\\\";\\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \\\"-\\\") : sign === \\\"-\\\" ? \\\"\\\" : sign;\\n        if (scale < 0) {\\n          var unit = d3.formatPrefix(value, precision);\\n          value = unit.scale(value);\\n          fullSuffix = unit.symbol + suffix;\\n        } else {\\n          value *= scale;\\n        }\\n        value = type(value, precision);\\n        var i = value.lastIndexOf(\\\".\\\"), before, after;\\n        if (i < 0) {\\n          var j = exponent ? value.lastIndexOf(\\\"e\\\") : -1;\\n          if (j < 0) before = value, after = \\\"\\\"; else before = value.substring(0, j), after = value.substring(j);\\n        } else {\\n          before = value.substring(0, i);\\n          after = locale_decimal + value.substring(i + 1);\\n        }\\n        if (!zfill && comma) before = formatGroup(before, Infinity);\\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \\\"\\\";\\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\\n        negative += prefix;\\n        value = before + after;\\n        return (align === \\\"<\\\" ? negative + value + padding : align === \\\">\\\" ? padding + negative + value : align === \\\"^\\\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\\n      };\\n    };\\n  }\\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\\\- ])?([$#])?(0)?(\\\\d+)?(,)?(\\\\.-?\\\\d+)?([a-z%])?/i;\\n  var d3_format_types = d3.map({\\n    b: function(x) {\\n      return x.toString(2);\\n    },\\n    c: function(x) {\\n      return String.fromCharCode(x);\\n    },\\n    o: function(x) {\\n      return x.toString(8);\\n    },\\n    x: function(x) {\\n      return x.toString(16);\\n    },\\n    X: function(x) {\\n      return x.toString(16).toUpperCase();\\n    },\\n    g: function(x, p) {\\n      return x.toPrecision(p);\\n    },\\n    e: function(x, p) {\\n      return x.toExponential(p);\\n    },\\n    f: function(x, p) {\\n      return x.toFixed(p);\\n    },\\n    r: function(x, p) {\\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\\n    }\\n  });\\n  function d3_format_typeDefault(x) {\\n    return x + \\\"\\\";\\n  }\\n  var d3_time = d3.time = {}, d3_date = Date;\\n  function d3_date_utc() {\\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\\n  }\\n  d3_date_utc.prototype = {\\n    getDate: function() {\\n      return this._.getUTCDate();\\n    },\\n    getDay: function() {\\n      return this._.getUTCDay();\\n    },\\n    getFullYear: function() {\\n      return this._.getUTCFullYear();\\n    },\\n    getHours: function() {\\n      return this._.getUTCHours();\\n    },\\n    getMilliseconds: function() {\\n      return this._.getUTCMilliseconds();\\n    },\\n    getMinutes: function() {\\n      return this._.getUTCMinutes();\\n    },\\n    getMonth: function() {\\n      return this._.getUTCMonth();\\n    },\\n    getSeconds: function() {\\n      return this._.getUTCSeconds();\\n    },\\n    getTime: function() {\\n      return this._.getTime();\\n    },\\n    getTimezoneOffset: function() {\\n      return 0;\\n    },\\n    valueOf: function() {\\n      return this._.valueOf();\\n    },\\n    setDate: function() {\\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\\n    },\\n    setDay: function() {\\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\\n    },\\n    setFullYear: function() {\\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\\n    },\\n    setHours: function() {\\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\\n    },\\n    setMilliseconds: function() {\\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\\n    },\\n    setMinutes: function() {\\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\\n    },\\n    setMonth: function() {\\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\\n    },\\n    setSeconds: function() {\\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\\n    },\\n    setTime: function() {\\n      d3_time_prototype.setTime.apply(this._, arguments);\\n    }\\n  };\\n  var d3_time_prototype = Date.prototype;\\n  function d3_time_interval(local, step, number) {\\n    function round(date) {\\n      var d0 = local(date), d1 = offset(d0, 1);\\n      return date - d0 < d1 - date ? d0 : d1;\\n    }\\n    function ceil(date) {\\n      step(date = local(new d3_date(date - 1)), 1);\\n      return date;\\n    }\\n    function offset(date, k) {\\n      step(date = new d3_date(+date), k);\\n      return date;\\n    }\\n    function range(t0, t1, dt) {\\n      var time = ceil(t0), times = [];\\n      if (dt > 1) {\\n        while (time < t1) {\\n          if (!(number(time) % dt)) times.push(new Date(+time));\\n          step(time, 1);\\n        }\\n      } else {\\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\\n      }\\n      return times;\\n    }\\n    function range_utc(t0, t1, dt) {\\n      try {\\n        d3_date = d3_date_utc;\\n        var utc = new d3_date_utc();\\n        utc._ = t0;\\n        return range(utc, t1, dt);\\n      } finally {\\n        d3_date = Date;\\n      }\\n    }\\n    local.floor = local;\\n    local.round = round;\\n    local.ceil = ceil;\\n    local.offset = offset;\\n    local.range = range;\\n    var utc = local.utc = d3_time_interval_utc(local);\\n    utc.floor = utc;\\n    utc.round = d3_time_interval_utc(round);\\n    utc.ceil = d3_time_interval_utc(ceil);\\n    utc.offset = d3_time_interval_utc(offset);\\n    utc.range = range_utc;\\n    return local;\\n  }\\n  function d3_time_interval_utc(method) {\\n    return function(date, k) {\\n      try {\\n        d3_date = d3_date_utc;\\n        var utc = new d3_date_utc();\\n        utc._ = date;\\n        return method(utc, k)._;\\n      } finally {\\n        d3_date = Date;\\n      }\\n    };\\n  }\\n  d3_time.year = d3_time_interval(function(date) {\\n    date = d3_time.day(date);\\n    date.setMonth(0, 1);\\n    return date;\\n  }, function(date, offset) {\\n    date.setFullYear(date.getFullYear() + offset);\\n  }, function(date) {\\n    return date.getFullYear();\\n  });\\n  d3_time.years = d3_time.year.range;\\n  d3_time.years.utc = d3_time.year.utc.range;\\n  d3_time.day = d3_time_interval(function(date) {\\n    var day = new d3_date(2e3, 0);\\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\\n    return day;\\n  }, function(date, offset) {\\n    date.setDate(date.getDate() + offset);\\n  }, function(date) {\\n    return date.getDate() - 1;\\n  });\\n  d3_time.days = d3_time.day.range;\\n  d3_time.days.utc = d3_time.day.utc.range;\\n  d3_time.dayOfYear = function(date) {\\n    var year = d3_time.year(date);\\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\\n  };\\n  [ \\\"sunday\\\", \\\"monday\\\", \\\"tuesday\\\", \\\"wednesday\\\", \\\"thursday\\\", \\\"friday\\\", \\\"saturday\\\" ].forEach(function(day, i) {\\n    i = 7 - i;\\n    var interval = d3_time[day] = d3_time_interval(function(date) {\\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\\n      return date;\\n    }, function(date, offset) {\\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\\n    }, function(date) {\\n      var day = d3_time.year(date).getDay();\\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\\n    });\\n    d3_time[day + \\\"s\\\"] = interval.range;\\n    d3_time[day + \\\"s\\\"].utc = interval.utc.range;\\n    d3_time[day + \\\"OfYear\\\"] = function(date) {\\n      var day = d3_time.year(date).getDay();\\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\\n    };\\n  });\\n  d3_time.week = d3_time.sunday;\\n  d3_time.weeks = d3_time.sunday.range;\\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\\n  d3_time.weekOfYear = d3_time.sundayOfYear;\\n  function d3_locale_timeFormat(locale) {\\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\\n    function d3_time_format(template) {\\n      var n = template.length;\\n      function format(date) {\\n        var string = [], i = -1, j = 0, c, p, f;\\n        while (++i < n) {\\n          if (template.charCodeAt(i) === 37) {\\n            string.push(template.slice(j, i));\\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \\\"e\\\" ? \\\" \\\" : \\\"0\\\" : p);\\n            string.push(c);\\n            j = i + 1;\\n          }\\n        }\\n        string.push(template.slice(j, i));\\n        return string.join(\\\"\\\");\\n      }\\n      format.parse = function(string) {\\n        var d = {\\n          y: 1900,\\n          m: 0,\\n          d: 1,\\n          H: 0,\\n          M: 0,\\n          S: 0,\\n          L: 0,\\n          Z: null\\n        }, i = d3_time_parse(d, template, string, 0);\\n        if (i != string.length) return null;\\n        if (\\\"p\\\" in d) d.H = d.H % 12 + d.p * 12;\\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\\n        if (\\\"j\\\" in d) date.setFullYear(d.y, 0, d.j); else if (\\\"W\\\" in d || \\\"U\\\" in d) {\\n          if (!(\\\"w\\\" in d)) d.w = \\\"W\\\" in d ? 1 : 0;\\n          date.setFullYear(d.y, 0, 1);\\n          date.setFullYear(d.y, 0, \\\"W\\\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\\n        } else date.setFullYear(d.y, d.m, d.d);\\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\\n        return localZ ? date._ : date;\\n      };\\n      format.toString = function() {\\n        return template;\\n      };\\n      return format;\\n    }\\n    function d3_time_parse(date, template, string, j) {\\n      var c, p, t, i = 0, n = template.length, m = string.length;\\n      while (i < n) {\\n        if (j >= m) return -1;\\n        c = template.charCodeAt(i++);\\n        if (c === 37) {\\n          t = template.charAt(i++);\\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\\n          if (!p || (j = p(date, string, j)) < 0) return -1;\\n        } else if (c != string.charCodeAt(j++)) {\\n          return -1;\\n        }\\n      }\\n      return j;\\n    }\\n    d3_time_format.utc = function(template) {\\n      var local = d3_time_format(template);\\n      function format(date) {\\n        try {\\n          d3_date = d3_date_utc;\\n          var utc = new d3_date();\\n          utc._ = date;\\n          return local(utc);\\n        } finally {\\n          d3_date = Date;\\n        }\\n      }\\n      format.parse = function(string) {\\n        try {\\n          d3_date = d3_date_utc;\\n          var date = local.parse(string);\\n          return date && date._;\\n        } finally {\\n          d3_date = Date;\\n        }\\n      };\\n      format.toString = local.toString;\\n      return format;\\n    };\\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\\n    locale_periods.forEach(function(p, i) {\\n      d3_time_periodLookup.set(p.toLowerCase(), i);\\n    });\\n    var d3_time_formats = {\\n      a: function(d) {\\n        return locale_shortDays[d.getDay()];\\n      },\\n      A: function(d) {\\n        return locale_days[d.getDay()];\\n      },\\n      b: function(d) {\\n        return locale_shortMonths[d.getMonth()];\\n      },\\n      B: function(d) {\\n        return locale_months[d.getMonth()];\\n      },\\n      c: d3_time_format(locale_dateTime),\\n      d: function(d, p) {\\n        return d3_time_formatPad(d.getDate(), p, 2);\\n      },\\n      e: function(d, p) {\\n        return d3_time_formatPad(d.getDate(), p, 2);\\n      },\\n      H: function(d, p) {\\n        return d3_time_formatPad(d.getHours(), p, 2);\\n      },\\n      I: function(d, p) {\\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\\n      },\\n      j: function(d, p) {\\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\\n      },\\n      L: function(d, p) {\\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\\n      },\\n      m: function(d, p) {\\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\\n      },\\n      M: function(d, p) {\\n        return d3_time_formatPad(d.getMinutes(), p, 2);\\n      },\\n      p: function(d) {\\n        return locale_periods[+(d.getHours() >= 12)];\\n      },\\n      S: function(d, p) {\\n        return d3_time_formatPad(d.getSeconds(), p, 2);\\n      },\\n      U: function(d, p) {\\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\\n      },\\n      w: function(d) {\\n        return d.getDay();\\n      },\\n      W: function(d, p) {\\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\\n      },\\n      x: d3_time_format(locale_date),\\n      X: d3_time_format(locale_time),\\n      y: function(d, p) {\\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\\n      },\\n      Y: function(d, p) {\\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\\n      },\\n      Z: d3_time_zone,\\n      \\\"%\\\": function() {\\n        return \\\"%\\\";\\n      }\\n    };\\n    var d3_time_parsers = {\\n      a: d3_time_parseWeekdayAbbrev,\\n      A: d3_time_parseWeekday,\\n      b: d3_time_parseMonthAbbrev,\\n      B: d3_time_parseMonth,\\n      c: d3_time_parseLocaleFull,\\n      d: d3_time_parseDay,\\n      e: d3_time_parseDay,\\n      H: d3_time_parseHour24,\\n      I: d3_time_parseHour24,\\n      j: d3_time_parseDayOfYear,\\n      L: d3_time_parseMilliseconds,\\n      m: d3_time_parseMonthNumber,\\n      M: d3_time_parseMinutes,\\n      p: d3_time_parseAmPm,\\n      S: d3_time_parseSeconds,\\n      U: d3_time_parseWeekNumberSunday,\\n      w: d3_time_parseWeekdayNumber,\\n      W: d3_time_parseWeekNumberMonday,\\n      x: d3_time_parseLocaleDate,\\n      X: d3_time_parseLocaleTime,\\n      y: d3_time_parseYear,\\n      Y: d3_time_parseFullYear,\\n      Z: d3_time_parseZone,\\n      \\\"%\\\": d3_time_parseLiteralPercent\\n    };\\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\\n      d3_time_dayAbbrevRe.lastIndex = 0;\\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\\n    }\\n    function d3_time_parseWeekday(date, string, i) {\\n      d3_time_dayRe.lastIndex = 0;\\n      var n = d3_time_dayRe.exec(string.slice(i));\\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\\n    }\\n    function d3_time_parseMonthAbbrev(date, string, i) {\\n      d3_time_monthAbbrevRe.lastIndex = 0;\\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\\n    }\\n    function d3_time_parseMonth(date, string, i) {\\n      d3_time_monthRe.lastIndex = 0;\\n      var n = d3_time_monthRe.exec(string.slice(i));\\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\\n    }\\n    function d3_time_parseLocaleFull(date, string, i) {\\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\\n    }\\n    function d3_time_parseLocaleDate(date, string, i) {\\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\\n    }\\n    function d3_time_parseLocaleTime(date, string, i) {\\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\\n    }\\n    function d3_time_parseAmPm(date, string, i) {\\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\\n      return n == null ? -1 : (date.p = n, i);\\n    }\\n    return d3_time_format;\\n  }\\n  var d3_time_formatPads = {\\n    \\\"-\\\": \\\"\\\",\\n    _: \\\" \\\",\\n    \\\"0\\\": \\\"0\\\"\\n  }, d3_time_numberRe = /^\\\\s*\\\\d+/, d3_time_percentRe = /^%/;\\n  function d3_time_formatPad(value, fill, width) {\\n    var sign = value < 0 ? \\\"-\\\" : \\\"\\\", string = (sign ? -value : value) + \\\"\\\", length = string.length;\\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\\n  }\\n  function d3_time_formatRe(names) {\\n    return new RegExp(\\\"^(?:\\\" + names.map(d3.requote).join(\\\"|\\\") + \\\")\\\", \\\"i\\\");\\n  }\\n  function d3_time_formatLookup(names) {\\n    var map = new d3_Map(), i = -1, n = names.length;\\n    while (++i < n) map.set(names[i].toLowerCase(), i);\\n    return map;\\n  }\\n  function d3_time_parseWeekdayNumber(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\\n  }\\n  function d3_time_parseWeekNumberSunday(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i));\\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\\n  }\\n  function d3_time_parseWeekNumberMonday(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i));\\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\\n  }\\n  function d3_time_parseFullYear(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\\n  }\\n  function d3_time_parseYear(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\\n  }\\n  function d3_time_parseZone(date, string, i) {\\n    return /^[+-]\\\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \\n    i + 5) : -1;\\n  }\\n  function d3_time_expandYear(d) {\\n    return d + (d > 68 ? 1900 : 2e3);\\n  }\\n  function d3_time_parseMonthNumber(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\\n  }\\n  function d3_time_parseDay(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\\n  }\\n  function d3_time_parseDayOfYear(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\\n  }\\n  function d3_time_parseHour24(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\\n  }\\n  function d3_time_parseMinutes(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\\n  }\\n  function d3_time_parseSeconds(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\\n  }\\n  function d3_time_parseMilliseconds(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\\n  }\\n  function d3_time_zone(d) {\\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \\\"-\\\" : \\\"+\\\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\\n    return zs + d3_time_formatPad(zh, \\\"0\\\", 2) + d3_time_formatPad(zm, \\\"0\\\", 2);\\n  }\\n  function d3_time_parseLiteralPercent(date, string, i) {\\n    d3_time_percentRe.lastIndex = 0;\\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\\n    return n ? i + n[0].length : -1;\\n  }\\n  function d3_time_formatMulti(formats) {\\n    var n = formats.length, i = -1;\\n    while (++i < n) formats[i][0] = this(formats[i][0]);\\n    return function(date) {\\n      var i = 0, f = formats[i];\\n      while (!f[1](date)) f = formats[++i];\\n      return f[0](date);\\n    };\\n  }\\n  d3.locale = function(locale) {\\n    return {\\n      numberFormat: d3_locale_numberFormat(locale),\\n      timeFormat: d3_locale_timeFormat(locale)\\n    };\\n  };\\n  var d3_locale_enUS = d3.locale({\\n    decimal: \\\".\\\",\\n    thousands: \\\",\\\",\\n    grouping: [ 3 ],\\n    currency: [ \\\"$\\\", \\\"\\\" ],\\n    dateTime: \\\"%a %b %e %X %Y\\\",\\n    date: \\\"%m/%d/%Y\\\",\\n    time: \\\"%H:%M:%S\\\",\\n    periods: [ \\\"AM\\\", \\\"PM\\\" ],\\n    days: [ \\\"Sunday\\\", \\\"Monday\\\", \\\"Tuesday\\\", \\\"Wednesday\\\", \\\"Thursday\\\", \\\"Friday\\\", \\\"Saturday\\\" ],\\n    shortDays: [ \\\"Sun\\\", \\\"Mon\\\", \\\"Tue\\\", \\\"Wed\\\", \\\"Thu\\\", \\\"Fri\\\", \\\"Sat\\\" ],\\n    months: [ \\\"January\\\", \\\"February\\\", \\\"March\\\", \\\"April\\\", \\\"May\\\", \\\"June\\\", \\\"July\\\", \\\"August\\\", \\\"September\\\", \\\"October\\\", \\\"November\\\", \\\"December\\\" ],\\n    shortMonths: [ \\\"Jan\\\", \\\"Feb\\\", \\\"Mar\\\", \\\"Apr\\\", \\\"May\\\", \\\"Jun\\\", \\\"Jul\\\", \\\"Aug\\\", \\\"Sep\\\", \\\"Oct\\\", \\\"Nov\\\", \\\"Dec\\\" ]\\n  });\\n  d3.format = d3_locale_enUS.numberFormat;\\n  d3.geo = {};\\n  function d3_adder() {}\\n  d3_adder.prototype = {\\n    s: 0,\\n    t: 0,\\n    add: function(y) {\\n      d3_adderSum(y, this.t, d3_adderTemp);\\n      d3_adderSum(d3_adderTemp.s, this.s, this);\\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\\n    },\\n    reset: function() {\\n      this.s = this.t = 0;\\n    },\\n    valueOf: function() {\\n      return this.s;\\n    }\\n  };\\n  var d3_adderTemp = new d3_adder();\\n  function d3_adderSum(a, b, o) {\\n    var x = o.s = a + b, bv = x - a, av = x - bv;\\n    o.t = a - av + (b - bv);\\n  }\\n  d3.geo.stream = function(object, listener) {\\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\\n      d3_geo_streamObjectType[object.type](object, listener);\\n    } else {\\n      d3_geo_streamGeometry(object, listener);\\n    }\\n  };\\n  function d3_geo_streamGeometry(geometry, listener) {\\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\\n    }\\n  }\\n  var d3_geo_streamObjectType = {\\n    Feature: function(feature, listener) {\\n      d3_geo_streamGeometry(feature.geometry, listener);\\n    },\\n    FeatureCollection: function(object, listener) {\\n      var features = object.features, i = -1, n = features.length;\\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\\n    }\\n  };\\n  var d3_geo_streamGeometryType = {\\n    Sphere: function(object, listener) {\\n      listener.sphere();\\n    },\\n    Point: function(object, listener) {\\n      object = object.coordinates;\\n      listener.point(object[0], object[1], object[2]);\\n    },\\n    MultiPoint: function(object, listener) {\\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\\n    },\\n    LineString: function(object, listener) {\\n      d3_geo_streamLine(object.coordinates, listener, 0);\\n    },\\n    MultiLineString: function(object, listener) {\\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\\n    },\\n    Polygon: function(object, listener) {\\n      d3_geo_streamPolygon(object.coordinates, listener);\\n    },\\n    MultiPolygon: function(object, listener) {\\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\\n    },\\n    GeometryCollection: function(object, listener) {\\n      var geometries = object.geometries, i = -1, n = geometries.length;\\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\\n    }\\n  };\\n  function d3_geo_streamLine(coordinates, listener, closed) {\\n    var i = -1, n = coordinates.length - closed, coordinate;\\n    listener.lineStart();\\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\\n    listener.lineEnd();\\n  }\\n  function d3_geo_streamPolygon(coordinates, listener) {\\n    var i = -1, n = coordinates.length;\\n    listener.polygonStart();\\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\\n    listener.polygonEnd();\\n  }\\n  d3.geo.area = function(object) {\\n    d3_geo_areaSum = 0;\\n    d3.geo.stream(object, d3_geo_area);\\n    return d3_geo_areaSum;\\n  };\\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\\n  var d3_geo_area = {\\n    sphere: function() {\\n      d3_geo_areaSum += 4 * π;\\n    },\\n    point: d3_noop,\\n    lineStart: d3_noop,\\n    lineEnd: d3_noop,\\n    polygonStart: function() {\\n      d3_geo_areaRingSum.reset();\\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\\n    },\\n    polygonEnd: function() {\\n      var area = 2 * d3_geo_areaRingSum;\\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\\n    }\\n  };\\n  function d3_geo_areaRingStart() {\\n    var λ00, φ00, λ0, cosφ0, sinφ0;\\n    d3_geo_area.point = function(λ, φ) {\\n      d3_geo_area.point = nextPoint;\\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \\n      sinφ0 = Math.sin(φ);\\n    };\\n    function nextPoint(λ, φ) {\\n      λ *= d3_radians;\\n      φ = φ * d3_radians / 2 + π / 4;\\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\\n    }\\n    d3_geo_area.lineEnd = function() {\\n      nextPoint(λ00, φ00);\\n    };\\n  }\\n  function d3_geo_cartesian(spherical) {\\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\\n  }\\n  function d3_geo_cartesianDot(a, b) {\\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\\n  }\\n  function d3_geo_cartesianCross(a, b) {\\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\\n  }\\n  function d3_geo_cartesianAdd(a, b) {\\n    a[0] += b[0];\\n    a[1] += b[1];\\n    a[2] += b[2];\\n  }\\n  function d3_geo_cartesianScale(vector, k) {\\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\\n  }\\n  function d3_geo_cartesianNormalize(d) {\\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\\n    d[0] /= l;\\n    d[1] /= l;\\n    d[2] /= l;\\n  }\\n  function d3_geo_spherical(cartesian) {\\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\\n  }\\n  function d3_geo_sphericalEqual(a, b) {\\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\\n  }\\n  d3.geo.bounds = function() {\\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\\n    var bound = {\\n      point: point,\\n      lineStart: lineStart,\\n      lineEnd: lineEnd,\\n      polygonStart: function() {\\n        bound.point = ringPoint;\\n        bound.lineStart = ringStart;\\n        bound.lineEnd = ringEnd;\\n        dλSum = 0;\\n        d3_geo_area.polygonStart();\\n      },\\n      polygonEnd: function() {\\n        d3_geo_area.polygonEnd();\\n        bound.point = point;\\n        bound.lineStart = lineStart;\\n        bound.lineEnd = lineEnd;\\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\\n        range[0] = λ0, range[1] = λ1;\\n      }\\n    };\\n    function point(λ, φ) {\\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\\n      if (φ < φ0) φ0 = φ;\\n      if (φ > φ1) φ1 = φ;\\n    }\\n    function linePoint(λ, φ) {\\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\\n      if (p0) {\\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\\n        d3_geo_cartesianNormalize(inflection);\\n        inflection = d3_geo_spherical(inflection);\\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\\n          var φi = inflection[1] * d3_degrees;\\n          if (φi > φ1) φ1 = φi;\\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\\n          var φi = -inflection[1] * d3_degrees;\\n          if (φi < φ0) φ0 = φi;\\n        } else {\\n          if (φ < φ0) φ0 = φ;\\n          if (φ > φ1) φ1 = φ;\\n        }\\n        if (antimeridian) {\\n          if (λ < λ_) {\\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\\n          } else {\\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\\n          }\\n        } else {\\n          if (λ1 >= λ0) {\\n            if (λ < λ0) λ0 = λ;\\n            if (λ > λ1) λ1 = λ;\\n          } else {\\n            if (λ > λ_) {\\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\\n            } else {\\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\\n            }\\n          }\\n        }\\n      } else {\\n        point(λ, φ);\\n      }\\n      p0 = p, λ_ = λ;\\n    }\\n    function lineStart() {\\n      bound.point = linePoint;\\n    }\\n    function lineEnd() {\\n      range[0] = λ0, range[1] = λ1;\\n      bound.point = point;\\n      p0 = null;\\n    }\\n    function ringPoint(λ, φ) {\\n      if (p0) {\\n        var dλ = λ - λ_;\\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\\n      } else λ__ = λ, φ__ = φ;\\n      d3_geo_area.point(λ, φ);\\n      linePoint(λ, φ);\\n    }\\n    function ringStart() {\\n      d3_geo_area.lineStart();\\n    }\\n    function ringEnd() {\\n      ringPoint(λ__, φ__);\\n      d3_geo_area.lineEnd();\\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\\n      range[0] = λ0, range[1] = λ1;\\n      p0 = null;\\n    }\\n    function angle(λ0, λ1) {\\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\\n    }\\n    function compareRanges(a, b) {\\n      return a[0] - b[0];\\n    }\\n    function withinRange(x, range) {\\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\\n    }\\n    return function(feature) {\\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\\n      ranges = [];\\n      d3.geo.stream(feature, bound);\\n      var n = ranges.length;\\n      if (n) {\\n        ranges.sort(compareRanges);\\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\\n          b = ranges[i];\\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\\n          } else {\\n            merged.push(a = b);\\n          }\\n        }\\n        var best = -Infinity, dλ;\\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\\n          b = merged[i];\\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\\n        }\\n      }\\n      ranges = range = null;\\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\\n    };\\n  }();\\n  d3.geo.centroid = function(object) {\\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\\n    d3.geo.stream(object, d3_geo_centroid);\\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\\n    if (m < ε2) {\\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\\n      m = x * x + y * y + z * z;\\n      if (m < ε2) return [ NaN, NaN ];\\n    }\\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\\n  };\\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\\n  var d3_geo_centroid = {\\n    sphere: d3_noop,\\n    point: d3_geo_centroidPoint,\\n    lineStart: d3_geo_centroidLineStart,\\n    lineEnd: d3_geo_centroidLineEnd,\\n    polygonStart: function() {\\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\\n    },\\n    polygonEnd: function() {\\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\\n    }\\n  };\\n  function d3_geo_centroidPoint(λ, φ) {\\n    λ *= d3_radians;\\n    var cosφ = Math.cos(φ *= d3_radians);\\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\\n  }\\n  function d3_geo_centroidPointXYZ(x, y, z) {\\n    ++d3_geo_centroidW0;\\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\\n  }\\n  function d3_geo_centroidLineStart() {\\n    var x0, y0, z0;\\n    d3_geo_centroid.point = function(λ, φ) {\\n      λ *= d3_radians;\\n      var cosφ = Math.cos(φ *= d3_radians);\\n      x0 = cosφ * Math.cos(λ);\\n      y0 = cosφ * Math.sin(λ);\\n      z0 = Math.sin(φ);\\n      d3_geo_centroid.point = nextPoint;\\n      d3_geo_centroidPointXYZ(x0, y0, z0);\\n    };\\n    function nextPoint(λ, φ) {\\n      λ *= d3_radians;\\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\\n      d3_geo_centroidW1 += w;\\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\\n      d3_geo_centroidPointXYZ(x0, y0, z0);\\n    }\\n  }\\n  function d3_geo_centroidLineEnd() {\\n    d3_geo_centroid.point = d3_geo_centroidPoint;\\n  }\\n  function d3_geo_centroidRingStart() {\\n    var λ00, φ00, x0, y0, z0;\\n    d3_geo_centroid.point = function(λ, φ) {\\n      λ00 = λ, φ00 = φ;\\n      d3_geo_centroid.point = nextPoint;\\n      λ *= d3_radians;\\n      var cosφ = Math.cos(φ *= d3_radians);\\n      x0 = cosφ * Math.cos(λ);\\n      y0 = cosφ * Math.sin(λ);\\n      z0 = Math.sin(φ);\\n      d3_geo_centroidPointXYZ(x0, y0, z0);\\n    };\\n    d3_geo_centroid.lineEnd = function() {\\n      nextPoint(λ00, φ00);\\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\\n      d3_geo_centroid.point = d3_geo_centroidPoint;\\n    };\\n    function nextPoint(λ, φ) {\\n      λ *= d3_radians;\\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\\n      d3_geo_centroidX2 += v * cx;\\n      d3_geo_centroidY2 += v * cy;\\n      d3_geo_centroidZ2 += v * cz;\\n      d3_geo_centroidW1 += w;\\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\\n      d3_geo_centroidPointXYZ(x0, y0, z0);\\n    }\\n  }\\n  function d3_geo_compose(a, b) {\\n    function compose(x, y) {\\n      return x = a(x, y), b(x[0], x[1]);\\n    }\\n    if (a.invert && b.invert) compose.invert = function(x, y) {\\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\\n    };\\n    return compose;\\n  }\\n  function d3_true() {\\n    return true;\\n  }\\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\\n    var subject = [], clip = [];\\n    segments.forEach(function(segment) {\\n      if ((n = segment.length - 1) <= 0) return;\\n      var n, p0 = segment[0], p1 = segment[n];\\n      if (d3_geo_sphericalEqual(p0, p1)) {\\n        listener.lineStart();\\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\\n        listener.lineEnd();\\n        return;\\n      }\\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\\n      a.o = b;\\n      subject.push(a);\\n      clip.push(b);\\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\\n      a.o = b;\\n      subject.push(a);\\n      clip.push(b);\\n    });\\n    clip.sort(compare);\\n    d3_geo_clipPolygonLinkCircular(subject);\\n    d3_geo_clipPolygonLinkCircular(clip);\\n    if (!subject.length) return;\\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\\n      clip[i].e = entry = !entry;\\n    }\\n    var start = subject[0], points, point;\\n    while (1) {\\n      var current = start, isSubject = true;\\n      while (current.v) if ((current = current.n) === start) return;\\n      points = current.z;\\n      listener.lineStart();\\n      do {\\n        current.v = current.o.v = true;\\n        if (current.e) {\\n          if (isSubject) {\\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\\n          } else {\\n            interpolate(current.x, current.n.x, 1, listener);\\n          }\\n          current = current.n;\\n        } else {\\n          if (isSubject) {\\n            points = current.p.z;\\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\\n          } else {\\n            interpolate(current.x, current.p.x, -1, listener);\\n          }\\n          current = current.p;\\n        }\\n        current = current.o;\\n        points = current.z;\\n        isSubject = !isSubject;\\n      } while (!current.v);\\n      listener.lineEnd();\\n    }\\n  }\\n  function d3_geo_clipPolygonLinkCircular(array) {\\n    if (!(n = array.length)) return;\\n    var n, i = 0, a = array[0], b;\\n    while (++i < n) {\\n      a.n = b = array[i];\\n      b.p = a;\\n      a = b;\\n    }\\n    a.n = b = array[0];\\n    b.p = a;\\n  }\\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\\n    this.x = point;\\n    this.z = points;\\n    this.o = other;\\n    this.e = entry;\\n    this.v = false;\\n    this.n = this.p = null;\\n  }\\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\\n    return function(rotate, listener) {\\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\\n      var clip = {\\n        point: point,\\n        lineStart: lineStart,\\n        lineEnd: lineEnd,\\n        polygonStart: function() {\\n          clip.point = pointRing;\\n          clip.lineStart = ringStart;\\n          clip.lineEnd = ringEnd;\\n          segments = [];\\n          polygon = [];\\n        },\\n        polygonEnd: function() {\\n          clip.point = point;\\n          clip.lineStart = lineStart;\\n          clip.lineEnd = lineEnd;\\n          segments = d3.merge(segments);\\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\\n          if (segments.length) {\\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\\n          } else if (clipStartInside) {\\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\\n            listener.lineStart();\\n            interpolate(null, null, 1, listener);\\n            listener.lineEnd();\\n          }\\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\\n          segments = polygon = null;\\n        },\\n        sphere: function() {\\n          listener.polygonStart();\\n          listener.lineStart();\\n          interpolate(null, null, 1, listener);\\n          listener.lineEnd();\\n          listener.polygonEnd();\\n        }\\n      };\\n      function point(λ, φ) {\\n        var point = rotate(λ, φ);\\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\\n      }\\n      function pointLine(λ, φ) {\\n        var point = rotate(λ, φ);\\n        line.point(point[0], point[1]);\\n      }\\n      function lineStart() {\\n        clip.point = pointLine;\\n        line.lineStart();\\n      }\\n      function lineEnd() {\\n        clip.point = point;\\n        line.lineEnd();\\n      }\\n      var segments;\\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\\n      function pointRing(λ, φ) {\\n        ring.push([ λ, φ ]);\\n        var point = rotate(λ, φ);\\n        ringListener.point(point[0], point[1]);\\n      }\\n      function ringStart() {\\n        ringListener.lineStart();\\n        ring = [];\\n      }\\n      function ringEnd() {\\n        pointRing(ring[0][0], ring[0][1]);\\n        ringListener.lineEnd();\\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\\n        ring.pop();\\n        polygon.push(ring);\\n        ring = null;\\n        if (!n) return;\\n        if (clean & 1) {\\n          segment = ringSegments[0];\\n          var n = segment.length - 1, i = -1, point;\\n          if (n > 0) {\\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\\n            listener.lineStart();\\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\\n            listener.lineEnd();\\n          }\\n          return;\\n        }\\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\\n      }\\n      return clip;\\n    };\\n  }\\n  function d3_geo_clipSegmentLength1(segment) {\\n    return segment.length > 1;\\n  }\\n  function d3_geo_clipBufferListener() {\\n    var lines = [], line;\\n    return {\\n      lineStart: function() {\\n        lines.push(line = []);\\n      },\\n      point: function(λ, φ) {\\n        line.push([ λ, φ ]);\\n      },\\n      lineEnd: d3_noop,\\n      buffer: function() {\\n        var buffer = lines;\\n        lines = [];\\n        line = null;\\n        return buffer;\\n      },\\n      rejoin: function() {\\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\\n      }\\n    };\\n  }\\n  function d3_geo_clipSort(a, b) {\\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\\n  }\\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\\n  function d3_geo_clipAntimeridianLine(listener) {\\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\\n    return {\\n      lineStart: function() {\\n        listener.lineStart();\\n        clean = 1;\\n      },\\n      point: function(λ1, φ1) {\\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\\n        if (abs(dλ - π) < ε) {\\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\\n          listener.point(sλ0, φ0);\\n          listener.lineEnd();\\n          listener.lineStart();\\n          listener.point(sλ1, φ0);\\n          listener.point(λ1, φ0);\\n          clean = 0;\\n        } else if (sλ0 !== sλ1 && dλ >= π) {\\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\\n          listener.point(sλ0, φ0);\\n          listener.lineEnd();\\n          listener.lineStart();\\n          listener.point(sλ1, φ0);\\n          clean = 0;\\n        }\\n        listener.point(λ0 = λ1, φ0 = φ1);\\n        sλ0 = sλ1;\\n      },\\n      lineEnd: function() {\\n        listener.lineEnd();\\n        λ0 = φ0 = NaN;\\n      },\\n      clean: function() {\\n        return 2 - clean;\\n      }\\n    };\\n  }\\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\\n  }\\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\\n    var φ;\\n    if (from == null) {\\n      φ = direction * halfπ;\\n      listener.point(-π, φ);\\n      listener.point(0, φ);\\n      listener.point(π, φ);\\n      listener.point(π, 0);\\n      listener.point(π, -φ);\\n      listener.point(0, -φ);\\n      listener.point(-π, -φ);\\n      listener.point(-π, 0);\\n      listener.point(-π, φ);\\n    } else if (abs(from[0] - to[0]) > ε) {\\n      var s = from[0] < to[0] ? π : -π;\\n      φ = direction * s / 2;\\n      listener.point(-s, φ);\\n      listener.point(0, φ);\\n      listener.point(s, φ);\\n    } else {\\n      listener.point(to[0], to[1]);\\n    }\\n  }\\n  function d3_geo_pointInPolygon(point, polygon) {\\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\\n    d3_geo_areaRingSum.reset();\\n    for (var i = 0, n = polygon.length; i < n; ++i) {\\n      var ring = polygon[i], m = ring.length;\\n      if (!m) continue;\\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\\n      while (true) {\\n        if (j === m) j = 0;\\n        point = ring[j];\\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\\n          d3_geo_cartesianNormalize(arc);\\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\\n          d3_geo_cartesianNormalize(intersection);\\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\\n          }\\n        }\\n        if (!j++) break;\\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\\n      }\\n    }\\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\\n  }\\n  function d3_geo_clipCircle(radius) {\\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\\n    function visible(λ, φ) {\\n      return Math.cos(λ) * Math.cos(φ) > cr;\\n    }\\n    function clipLine(listener) {\\n      var point0, c0, v0, v00, clean;\\n      return {\\n        lineStart: function() {\\n          v00 = v0 = false;\\n          clean = 1;\\n        },\\n        point: function(λ, φ) {\\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\\n          if (v !== v0) {\\n            point2 = intersect(point0, point1);\\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\\n              point1[0] += ε;\\n              point1[1] += ε;\\n              v = visible(point1[0], point1[1]);\\n            }\\n          }\\n          if (v !== v0) {\\n            clean = 0;\\n            if (v) {\\n              listener.lineStart();\\n              point2 = intersect(point1, point0);\\n              listener.point(point2[0], point2[1]);\\n            } else {\\n              point2 = intersect(point0, point1);\\n              listener.point(point2[0], point2[1]);\\n              listener.lineEnd();\\n            }\\n            point0 = point2;\\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\\n            var t;\\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\\n              clean = 0;\\n              if (smallRadius) {\\n                listener.lineStart();\\n                listener.point(t[0][0], t[0][1]);\\n                listener.point(t[1][0], t[1][1]);\\n                listener.lineEnd();\\n              } else {\\n                listener.point(t[1][0], t[1][1]);\\n                listener.lineEnd();\\n                listener.lineStart();\\n                listener.point(t[0][0], t[0][1]);\\n              }\\n            }\\n          }\\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\\n            listener.point(point1[0], point1[1]);\\n          }\\n          point0 = point1, v0 = v, c0 = c;\\n        },\\n        lineEnd: function() {\\n          if (v0) listener.lineEnd();\\n          point0 = null;\\n        },\\n        clean: function() {\\n          return clean | (v00 && v0) << 1;\\n        }\\n      };\\n    }\\n    function intersect(a, b, two) {\\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\\n      if (!determinant) return !two && a;\\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\\n      d3_geo_cartesianAdd(A, B);\\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\\n      if (t2 < 0) return;\\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\\n      d3_geo_cartesianAdd(q, A);\\n      q = d3_geo_spherical(q);\\n      if (!two) return q;\\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\\n        d3_geo_cartesianAdd(q1, A);\\n        return [ q, d3_geo_spherical(q1) ];\\n      }\\n    }\\n    function code(λ, φ) {\\n      var r = smallRadius ? radius : π - radius, code = 0;\\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\\n      return code;\\n    }\\n  }\\n  function d3_geom_clipLine(x0, y0, x1, y1) {\\n    return function(line) {\\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\\n      r = x0 - ax;\\n      if (!dx && r > 0) return;\\n      r /= dx;\\n      if (dx < 0) {\\n        if (r < t0) return;\\n        if (r < t1) t1 = r;\\n      } else if (dx > 0) {\\n        if (r > t1) return;\\n        if (r > t0) t0 = r;\\n      }\\n      r = x1 - ax;\\n      if (!dx && r < 0) return;\\n      r /= dx;\\n      if (dx < 0) {\\n        if (r > t1) return;\\n        if (r > t0) t0 = r;\\n      } else if (dx > 0) {\\n        if (r < t0) return;\\n        if (r < t1) t1 = r;\\n      }\\n      r = y0 - ay;\\n      if (!dy && r > 0) return;\\n      r /= dy;\\n      if (dy < 0) {\\n        if (r < t0) return;\\n        if (r < t1) t1 = r;\\n      } else if (dy > 0) {\\n        if (r > t1) return;\\n        if (r > t0) t0 = r;\\n      }\\n      r = y1 - ay;\\n      if (!dy && r < 0) return;\\n      r /= dy;\\n      if (dy < 0) {\\n        if (r > t1) return;\\n        if (r > t0) t0 = r;\\n      } else if (dy > 0) {\\n        if (r < t0) return;\\n        if (r < t1) t1 = r;\\n      }\\n      if (t0 > 0) line.a = {\\n        x: ax + t0 * dx,\\n        y: ay + t0 * dy\\n      };\\n      if (t1 < 1) line.b = {\\n        x: ax + t1 * dx,\\n        y: ay + t1 * dy\\n      };\\n      return line;\\n    };\\n  }\\n  var d3_geo_clipExtentMAX = 1e9;\\n  d3.geo.clipExtent = function() {\\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\\n      stream: function(output) {\\n        if (stream) stream.valid = false;\\n        stream = clip(output);\\n        stream.valid = true;\\n        return stream;\\n      },\\n      extent: function(_) {\\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\\n        if (stream) stream.valid = false, stream = null;\\n        return clipExtent;\\n      }\\n    };\\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\\n  };\\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\\n    return function(listener) {\\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\\n      var clip = {\\n        point: point,\\n        lineStart: lineStart,\\n        lineEnd: lineEnd,\\n        polygonStart: function() {\\n          listener = bufferListener;\\n          segments = [];\\n          polygon = [];\\n          clean = true;\\n        },\\n        polygonEnd: function() {\\n          listener = listener_;\\n          segments = d3.merge(segments);\\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\\n          if (inside || visible) {\\n            listener.polygonStart();\\n            if (inside) {\\n              listener.lineStart();\\n              interpolate(null, null, 1, listener);\\n              listener.lineEnd();\\n            }\\n            if (visible) {\\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\\n            }\\n            listener.polygonEnd();\\n          }\\n          segments = polygon = ring = null;\\n        }\\n      };\\n      function insidePolygon(p) {\\n        var wn = 0, n = polygon.length, y = p[1];\\n        for (var i = 0; i < n; ++i) {\\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\\n            b = v[j];\\n            if (a[1] <= y) {\\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\\n            } else {\\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\\n            }\\n            a = b;\\n          }\\n        }\\n        return wn !== 0;\\n      }\\n      function interpolate(from, to, direction, listener) {\\n        var a = 0, a1 = 0;\\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\\n          do {\\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\\n          } while ((a = (a + direction + 4) % 4) !== a1);\\n        } else {\\n          listener.point(to[0], to[1]);\\n        }\\n      }\\n      function pointVisible(x, y) {\\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\\n      }\\n      function point(x, y) {\\n        if (pointVisible(x, y)) listener.point(x, y);\\n      }\\n      var x__, y__, v__, x_, y_, v_, first, clean;\\n      function lineStart() {\\n        clip.point = linePoint;\\n        if (polygon) polygon.push(ring = []);\\n        first = true;\\n        v_ = false;\\n        x_ = y_ = NaN;\\n      }\\n      function lineEnd() {\\n        if (segments) {\\n          linePoint(x__, y__);\\n          if (v__ && v_) bufferListener.rejoin();\\n          segments.push(bufferListener.buffer());\\n        }\\n        clip.point = point;\\n        if (v_) listener.lineEnd();\\n      }\\n      function linePoint(x, y) {\\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\\n        var v = pointVisible(x, y);\\n        if (polygon) ring.push([ x, y ]);\\n        if (first) {\\n          x__ = x, y__ = y, v__ = v;\\n          first = false;\\n          if (v) {\\n            listener.lineStart();\\n            listener.point(x, y);\\n          }\\n        } else {\\n          if (v && v_) listener.point(x, y); else {\\n            var l = {\\n              a: {\\n                x: x_,\\n                y: y_\\n              },\\n              b: {\\n                x: x,\\n                y: y\\n              }\\n            };\\n            if (clipLine(l)) {\\n              if (!v_) {\\n                listener.lineStart();\\n                listener.point(l.a.x, l.a.y);\\n              }\\n              listener.point(l.b.x, l.b.y);\\n              if (!v) listener.lineEnd();\\n              clean = false;\\n            } else if (v) {\\n              listener.lineStart();\\n              listener.point(x, y);\\n              clean = false;\\n            }\\n          }\\n        }\\n        x_ = x, y_ = y, v_ = v;\\n      }\\n      return clip;\\n    };\\n    function corner(p, direction) {\\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\\n    }\\n    function compare(a, b) {\\n      return comparePoints(a.x, b.x);\\n    }\\n    function comparePoints(a, b) {\\n      var ca = corner(a, 1), cb = corner(b, 1);\\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\\n    }\\n  }\\n  function d3_geo_conic(projectAt) {\\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\\n    p.parallels = function(_) {\\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\\n    };\\n    return p;\\n  }\\n  function d3_geo_conicEqualArea(φ0, φ1) {\\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\\n    function forward(λ, φ) {\\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\\n    }\\n    forward.invert = function(x, y) {\\n      var ρ0_y = ρ0 - y;\\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\\n    };\\n    return forward;\\n  }\\n  (d3.geo.conicEqualArea = function() {\\n    return d3_geo_conic(d3_geo_conicEqualArea);\\n  }).raw = d3_geo_conicEqualArea;\\n  d3.geo.albers = function() {\\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\\n  };\\n  d3.geo.albersUsa = function() {\\n    var lower48 = d3.geo.albers();\\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\\n    var point, pointStream = {\\n      point: function(x, y) {\\n        point = [ x, y ];\\n      }\\n    }, lower48Point, alaskaPoint, hawaiiPoint;\\n    function albersUsa(coordinates) {\\n      var x = coordinates[0], y = coordinates[1];\\n      point = null;\\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\\n      return point;\\n    }\\n    albersUsa.invert = function(coordinates) {\\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\\n    };\\n    albersUsa.stream = function(stream) {\\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\\n      return {\\n        point: function(x, y) {\\n          lower48Stream.point(x, y);\\n          alaskaStream.point(x, y);\\n          hawaiiStream.point(x, y);\\n        },\\n        sphere: function() {\\n          lower48Stream.sphere();\\n          alaskaStream.sphere();\\n          hawaiiStream.sphere();\\n        },\\n        lineStart: function() {\\n          lower48Stream.lineStart();\\n          alaskaStream.lineStart();\\n          hawaiiStream.lineStart();\\n        },\\n        lineEnd: function() {\\n          lower48Stream.lineEnd();\\n          alaskaStream.lineEnd();\\n          hawaiiStream.lineEnd();\\n        },\\n        polygonStart: function() {\\n          lower48Stream.polygonStart();\\n          alaskaStream.polygonStart();\\n          hawaiiStream.polygonStart();\\n        },\\n        polygonEnd: function() {\\n          lower48Stream.polygonEnd();\\n          alaskaStream.polygonEnd();\\n          hawaiiStream.polygonEnd();\\n        }\\n      };\\n    };\\n    albersUsa.precision = function(_) {\\n      if (!arguments.length) return lower48.precision();\\n      lower48.precision(_);\\n      alaska.precision(_);\\n      hawaii.precision(_);\\n      return albersUsa;\\n    };\\n    albersUsa.scale = function(_) {\\n      if (!arguments.length) return lower48.scale();\\n      lower48.scale(_);\\n      alaska.scale(_ * .35);\\n      hawaii.scale(_);\\n      return albersUsa.translate(lower48.translate());\\n    };\\n    albersUsa.translate = function(_) {\\n      if (!arguments.length) return lower48.translate();\\n      var k = lower48.scale(), x = +_[0], y = +_[1];\\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\\n      return albersUsa;\\n    };\\n    return albersUsa.scale(1070);\\n  };\\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\\n    point: d3_noop,\\n    lineStart: d3_noop,\\n    lineEnd: d3_noop,\\n    polygonStart: function() {\\n      d3_geo_pathAreaPolygon = 0;\\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\\n    },\\n    polygonEnd: function() {\\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\\n    }\\n  };\\n  function d3_geo_pathAreaRingStart() {\\n    var x00, y00, x0, y0;\\n    d3_geo_pathArea.point = function(x, y) {\\n      d3_geo_pathArea.point = nextPoint;\\n      x00 = x0 = x, y00 = y0 = y;\\n    };\\n    function nextPoint(x, y) {\\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\\n      x0 = x, y0 = y;\\n    }\\n    d3_geo_pathArea.lineEnd = function() {\\n      nextPoint(x00, y00);\\n    };\\n  }\\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\\n  var d3_geo_pathBounds = {\\n    point: d3_geo_pathBoundsPoint,\\n    lineStart: d3_noop,\\n    lineEnd: d3_noop,\\n    polygonStart: d3_noop,\\n    polygonEnd: d3_noop\\n  };\\n  function d3_geo_pathBoundsPoint(x, y) {\\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\\n  }\\n  function d3_geo_pathBuffer() {\\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\\n    var stream = {\\n      point: point,\\n      lineStart: function() {\\n        stream.point = pointLineStart;\\n      },\\n      lineEnd: lineEnd,\\n      polygonStart: function() {\\n        stream.lineEnd = lineEndPolygon;\\n      },\\n      polygonEnd: function() {\\n        stream.lineEnd = lineEnd;\\n        stream.point = point;\\n      },\\n      pointRadius: function(_) {\\n        pointCircle = d3_geo_pathBufferCircle(_);\\n        return stream;\\n      },\\n      result: function() {\\n        if (buffer.length) {\\n          var result = buffer.join(\\\"\\\");\\n          buffer = [];\\n          return result;\\n        }\\n      }\\n    };\\n    function point(x, y) {\\n      buffer.push(\\\"M\\\", x, \\\",\\\", y, pointCircle);\\n    }\\n    function pointLineStart(x, y) {\\n      buffer.push(\\\"M\\\", x, \\\",\\\", y);\\n      stream.point = pointLine;\\n    }\\n    function pointLine(x, y) {\\n      buffer.push(\\\"L\\\", x, \\\",\\\", y);\\n    }\\n    function lineEnd() {\\n      stream.point = point;\\n    }\\n    function lineEndPolygon() {\\n      buffer.push(\\\"Z\\\");\\n    }\\n    return stream;\\n  }\\n  function d3_geo_pathBufferCircle(radius) {\\n    return \\\"m0,\\\" + radius + \\\"a\\\" + radius + \\\",\\\" + radius + \\\" 0 1,1 0,\\\" + -2 * radius + \\\"a\\\" + radius + \\\",\\\" + radius + \\\" 0 1,1 0,\\\" + 2 * radius + \\\"z\\\";\\n  }\\n  var d3_geo_pathCentroid = {\\n    point: d3_geo_pathCentroidPoint,\\n    lineStart: d3_geo_pathCentroidLineStart,\\n    lineEnd: d3_geo_pathCentroidLineEnd,\\n    polygonStart: function() {\\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\\n    },\\n    polygonEnd: function() {\\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\\n    }\\n  };\\n  function d3_geo_pathCentroidPoint(x, y) {\\n    d3_geo_centroidX0 += x;\\n    d3_geo_centroidY0 += y;\\n    ++d3_geo_centroidZ0;\\n  }\\n  function d3_geo_pathCentroidLineStart() {\\n    var x0, y0;\\n    d3_geo_pathCentroid.point = function(x, y) {\\n      d3_geo_pathCentroid.point = nextPoint;\\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\\n    };\\n    function nextPoint(x, y) {\\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\\n      d3_geo_centroidZ1 += z;\\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\\n    }\\n  }\\n  function d3_geo_pathCentroidLineEnd() {\\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\\n  }\\n  function d3_geo_pathCentroidRingStart() {\\n    var x00, y00, x0, y0;\\n    d3_geo_pathCentroid.point = function(x, y) {\\n      d3_geo_pathCentroid.point = nextPoint;\\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\\n    };\\n    function nextPoint(x, y) {\\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\\n      d3_geo_centroidZ1 += z;\\n      z = y0 * x - x0 * y;\\n      d3_geo_centroidX2 += z * (x0 + x);\\n      d3_geo_centroidY2 += z * (y0 + y);\\n      d3_geo_centroidZ2 += z * 3;\\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\\n    }\\n    d3_geo_pathCentroid.lineEnd = function() {\\n      nextPoint(x00, y00);\\n    };\\n  }\\n  function d3_geo_pathContext(context) {\\n    var pointRadius = 4.5;\\n    var stream = {\\n      point: point,\\n      lineStart: function() {\\n        stream.point = pointLineStart;\\n      },\\n      lineEnd: lineEnd,\\n      polygonStart: function() {\\n        stream.lineEnd = lineEndPolygon;\\n      },\\n      polygonEnd: function() {\\n        stream.lineEnd = lineEnd;\\n        stream.point = point;\\n      },\\n      pointRadius: function(_) {\\n        pointRadius = _;\\n        return stream;\\n      },\\n      result: d3_noop\\n    };\\n    function point(x, y) {\\n      context.moveTo(x + pointRadius, y);\\n      context.arc(x, y, pointRadius, 0, τ);\\n    }\\n    function pointLineStart(x, y) {\\n      context.moveTo(x, y);\\n      stream.point = pointLine;\\n    }\\n    function pointLine(x, y) {\\n      context.lineTo(x, y);\\n    }\\n    function lineEnd() {\\n      stream.point = point;\\n    }\\n    function lineEndPolygon() {\\n      context.closePath();\\n    }\\n    return stream;\\n  }\\n  function d3_geo_resample(project) {\\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\\n    function resample(stream) {\\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\\n    }\\n    function resampleNone(stream) {\\n      return d3_geo_transformPoint(stream, function(x, y) {\\n        x = project(x, y);\\n        stream.point(x[0], x[1]);\\n      });\\n    }\\n    function resampleRecursive(stream) {\\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\\n      var resample = {\\n        point: point,\\n        lineStart: lineStart,\\n        lineEnd: lineEnd,\\n        polygonStart: function() {\\n          stream.polygonStart();\\n          resample.lineStart = ringStart;\\n        },\\n        polygonEnd: function() {\\n          stream.polygonEnd();\\n          resample.lineStart = lineStart;\\n        }\\n      };\\n      function point(x, y) {\\n        x = project(x, y);\\n        stream.point(x[0], x[1]);\\n      }\\n      function lineStart() {\\n        x0 = NaN;\\n        resample.point = linePoint;\\n        stream.lineStart();\\n      }\\n      function linePoint(λ, φ) {\\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\\n        stream.point(x0, y0);\\n      }\\n      function lineEnd() {\\n        resample.point = point;\\n        stream.lineEnd();\\n      }\\n      function ringStart() {\\n        lineStart();\\n        resample.point = ringPoint;\\n        resample.lineEnd = ringEnd;\\n      }\\n      function ringPoint(λ, φ) {\\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\\n        resample.point = linePoint;\\n      }\\n      function ringEnd() {\\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\\n        resample.lineEnd = lineEnd;\\n        lineEnd();\\n      }\\n      return resample;\\n    }\\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\\n      if (d2 > 4 * δ2 && depth--) {\\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\\n          stream.point(x2, y2);\\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\\n        }\\n      }\\n    }\\n    resample.precision = function(_) {\\n      if (!arguments.length) return Math.sqrt(δ2);\\n      maxDepth = (δ2 = _ * _) > 0 && 16;\\n      return resample;\\n    };\\n    return resample;\\n  }\\n  d3.geo.path = function() {\\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\\n    function path(object) {\\n      if (object) {\\n        if (typeof pointRadius === \\\"function\\\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\\n        d3.geo.stream(object, cacheStream);\\n      }\\n      return contextStream.result();\\n    }\\n    path.area = function(object) {\\n      d3_geo_pathAreaSum = 0;\\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\\n      return d3_geo_pathAreaSum;\\n    };\\n    path.centroid = function(object) {\\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\\n    };\\n    path.bounds = function(object) {\\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\\n    };\\n    path.projection = function(_) {\\n      if (!arguments.length) return projection;\\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\\n      return reset();\\n    };\\n    path.context = function(_) {\\n      if (!arguments.length) return context;\\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\\n      if (typeof pointRadius !== \\\"function\\\") contextStream.pointRadius(pointRadius);\\n      return reset();\\n    };\\n    path.pointRadius = function(_) {\\n      if (!arguments.length) return pointRadius;\\n      pointRadius = typeof _ === \\\"function\\\" ? _ : (contextStream.pointRadius(+_), +_);\\n      return path;\\n    };\\n    function reset() {\\n      cacheStream = null;\\n      return path;\\n    }\\n    return path.projection(d3.geo.albersUsa()).context(null);\\n  };\\n  function d3_geo_pathProjectStream(project) {\\n    var resample = d3_geo_resample(function(x, y) {\\n      return project([ x * d3_degrees, y * d3_degrees ]);\\n    });\\n    return function(stream) {\\n      return d3_geo_projectionRadians(resample(stream));\\n    };\\n  }\\n  d3.geo.transform = function(methods) {\\n    return {\\n      stream: function(stream) {\\n        var transform = new d3_geo_transform(stream);\\n        for (var k in methods) transform[k] = methods[k];\\n        return transform;\\n      }\\n    };\\n  };\\n  function d3_geo_transform(stream) {\\n    this.stream = stream;\\n  }\\n  d3_geo_transform.prototype = {\\n    point: function(x, y) {\\n      this.stream.point(x, y);\\n    },\\n    sphere: function() {\\n      this.stream.sphere();\\n    },\\n    lineStart: function() {\\n      this.stream.lineStart();\\n    },\\n    lineEnd: function() {\\n      this.stream.lineEnd();\\n    },\\n    polygonStart: function() {\\n      this.stream.polygonStart();\\n    },\\n    polygonEnd: function() {\\n      this.stream.polygonEnd();\\n    }\\n  };\\n  function d3_geo_transformPoint(stream, point) {\\n    return {\\n      point: point,\\n      sphere: function() {\\n        stream.sphere();\\n      },\\n      lineStart: function() {\\n        stream.lineStart();\\n      },\\n      lineEnd: function() {\\n        stream.lineEnd();\\n      },\\n      polygonStart: function() {\\n        stream.polygonStart();\\n      },\\n      polygonEnd: function() {\\n        stream.polygonEnd();\\n      }\\n    };\\n  }\\n  d3.geo.projection = d3_geo_projection;\\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\\n  function d3_geo_projection(project) {\\n    return d3_geo_projectionMutator(function() {\\n      return project;\\n    })();\\n  }\\n  function d3_geo_projectionMutator(projectAt) {\\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\\n      x = project(x, y);\\n      return [ x[0] * k + δx, δy - x[1] * k ];\\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\\n    function projection(point) {\\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\\n      return [ point[0] * k + δx, δy - point[1] * k ];\\n    }\\n    function invert(point) {\\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\\n    }\\n    projection.stream = function(output) {\\n      if (stream) stream.valid = false;\\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\\n      stream.valid = true;\\n      return stream;\\n    };\\n    projection.clipAngle = function(_) {\\n      if (!arguments.length) return clipAngle;\\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\\n      return invalidate();\\n    };\\n    projection.clipExtent = function(_) {\\n      if (!arguments.length) return clipExtent;\\n      clipExtent = _;\\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\\n      return invalidate();\\n    };\\n    projection.scale = function(_) {\\n      if (!arguments.length) return k;\\n      k = +_;\\n      return reset();\\n    };\\n    projection.translate = function(_) {\\n      if (!arguments.length) return [ x, y ];\\n      x = +_[0];\\n      y = +_[1];\\n      return reset();\\n    };\\n    projection.center = function(_) {\\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\\n      λ = _[0] % 360 * d3_radians;\\n      φ = _[1] % 360 * d3_radians;\\n      return reset();\\n    };\\n    projection.rotate = function(_) {\\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\\n      δλ = _[0] % 360 * d3_radians;\\n      δφ = _[1] % 360 * d3_radians;\\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\\n      return reset();\\n    };\\n    d3.rebind(projection, projectResample, \\\"precision\\\");\\n    function reset() {\\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\\n      var center = project(λ, φ);\\n      δx = x - center[0] * k;\\n      δy = y + center[1] * k;\\n      return invalidate();\\n    }\\n    function invalidate() {\\n      if (stream) stream.valid = false, stream = null;\\n      return projection;\\n    }\\n    return function() {\\n      project = projectAt.apply(this, arguments);\\n      projection.invert = project.invert && invert;\\n      return reset();\\n    };\\n  }\\n  function d3_geo_projectionRadians(stream) {\\n    return d3_geo_transformPoint(stream, function(x, y) {\\n      stream.point(x * d3_radians, y * d3_radians);\\n    });\\n  }\\n  function d3_geo_equirectangular(λ, φ) {\\n    return [ λ, φ ];\\n  }\\n  (d3.geo.equirectangular = function() {\\n    return d3_geo_projection(d3_geo_equirectangular);\\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\\n  d3.geo.rotation = function(rotate) {\\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\\n    function forward(coordinates) {\\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\\n    }\\n    forward.invert = function(coordinates) {\\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\\n    };\\n    return forward;\\n  };\\n  function d3_geo_identityRotation(λ, φ) {\\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\\n  }\\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\\n  function d3_geo_rotation(δλ, δφ, δγ) {\\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\\n  }\\n  function d3_geo_forwardRotationλ(δλ) {\\n    return function(λ, φ) {\\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\\n    };\\n  }\\n  function d3_geo_rotationλ(δλ) {\\n    var rotation = d3_geo_forwardRotationλ(δλ);\\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\\n    return rotation;\\n  }\\n  function d3_geo_rotationφγ(δφ, δγ) {\\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\\n    function rotation(λ, φ) {\\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\\n    }\\n    rotation.invert = function(λ, φ) {\\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\\n    };\\n    return rotation;\\n  }\\n  d3.geo.circle = function() {\\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\\n    function circle() {\\n      var center = typeof origin === \\\"function\\\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\\n      interpolate(null, null, 1, {\\n        point: function(x, y) {\\n          ring.push(x = rotate(x, y));\\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\\n        }\\n      });\\n      return {\\n        type: \\\"Polygon\\\",\\n        coordinates: [ ring ]\\n      };\\n    }\\n    circle.origin = function(x) {\\n      if (!arguments.length) return origin;\\n      origin = x;\\n      return circle;\\n    };\\n    circle.angle = function(x) {\\n      if (!arguments.length) return angle;\\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\\n      return circle;\\n    };\\n    circle.precision = function(_) {\\n      if (!arguments.length) return precision;\\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\\n      return circle;\\n    };\\n    return circle.angle(90);\\n  };\\n  function d3_geo_circleInterpolate(radius, precision) {\\n    var cr = Math.cos(radius), sr = Math.sin(radius);\\n    return function(from, to, direction, listener) {\\n      var step = direction * precision;\\n      if (from != null) {\\n        from = d3_geo_circleAngle(cr, from);\\n        to = d3_geo_circleAngle(cr, to);\\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\\n      } else {\\n        from = radius + direction * τ;\\n        to = radius - .5 * step;\\n      }\\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\\n      }\\n    };\\n  }\\n  function d3_geo_circleAngle(cr, point) {\\n    var a = d3_geo_cartesian(point);\\n    a[0] -= cr;\\n    d3_geo_cartesianNormalize(a);\\n    var angle = d3_acos(-a[1]);\\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\\n  }\\n  d3.geo.distance = function(a, b) {\\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\\n  };\\n  d3.geo.graticule = function() {\\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\\n    function graticule() {\\n      return {\\n        type: \\\"MultiLineString\\\",\\n        coordinates: lines()\\n      };\\n    }\\n    function lines() {\\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\\n        return abs(x % DX) > ε;\\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\\n        return abs(y % DY) > ε;\\n      }).map(y));\\n    }\\n    graticule.lines = function() {\\n      return lines().map(function(coordinates) {\\n        return {\\n          type: \\\"LineString\\\",\\n          coordinates: coordinates\\n        };\\n      });\\n    };\\n    graticule.outline = function() {\\n      return {\\n        type: \\\"Polygon\\\",\\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\\n      };\\n    };\\n    graticule.extent = function(_) {\\n      if (!arguments.length) return graticule.minorExtent();\\n      return graticule.majorExtent(_).minorExtent(_);\\n    };\\n    graticule.majorExtent = function(_) {\\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\\n      X0 = +_[0][0], X1 = +_[1][0];\\n      Y0 = +_[0][1], Y1 = +_[1][1];\\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\\n      return graticule.precision(precision);\\n    };\\n    graticule.minorExtent = function(_) {\\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\\n      x0 = +_[0][0], x1 = +_[1][0];\\n      y0 = +_[0][1], y1 = +_[1][1];\\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\\n      return graticule.precision(precision);\\n    };\\n    graticule.step = function(_) {\\n      if (!arguments.length) return graticule.minorStep();\\n      return graticule.majorStep(_).minorStep(_);\\n    };\\n    graticule.majorStep = function(_) {\\n      if (!arguments.length) return [ DX, DY ];\\n      DX = +_[0], DY = +_[1];\\n      return graticule;\\n    };\\n    graticule.minorStep = function(_) {\\n      if (!arguments.length) return [ dx, dy ];\\n      dx = +_[0], dy = +_[1];\\n      return graticule;\\n    };\\n    graticule.precision = function(_) {\\n      if (!arguments.length) return precision;\\n      precision = +_;\\n      x = d3_geo_graticuleX(y0, y1, 90);\\n      y = d3_geo_graticuleY(x0, x1, precision);\\n      X = d3_geo_graticuleX(Y0, Y1, 90);\\n      Y = d3_geo_graticuleY(X0, X1, precision);\\n      return graticule;\\n    };\\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\\n  };\\n  function d3_geo_graticuleX(y0, y1, dy) {\\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\\n    return function(x) {\\n      return y.map(function(y) {\\n        return [ x, y ];\\n      });\\n    };\\n  }\\n  function d3_geo_graticuleY(x0, x1, dx) {\\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\\n    return function(y) {\\n      return x.map(function(x) {\\n        return [ x, y ];\\n      });\\n    };\\n  }\\n  function d3_source(d) {\\n    return d.source;\\n  }\\n  function d3_target(d) {\\n    return d.target;\\n  }\\n  d3.geo.greatArc = function() {\\n    var source = d3_source, source_, target = d3_target, target_;\\n    function greatArc() {\\n      return {\\n        type: \\\"LineString\\\",\\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\\n      };\\n    }\\n    greatArc.distance = function() {\\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\\n    };\\n    greatArc.source = function(_) {\\n      if (!arguments.length) return source;\\n      source = _, source_ = typeof _ === \\\"function\\\" ? null : _;\\n      return greatArc;\\n    };\\n    greatArc.target = function(_) {\\n      if (!arguments.length) return target;\\n      target = _, target_ = typeof _ === \\\"function\\\" ? null : _;\\n      return greatArc;\\n    };\\n    greatArc.precision = function() {\\n      return arguments.length ? greatArc : 0;\\n    };\\n    return greatArc;\\n  };\\n  d3.geo.interpolate = function(source, target) {\\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\\n  };\\n  function d3_geo_interpolate(x0, y0, x1, y1) {\\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\\n    var interpolate = d ? function(t) {\\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\\n    } : function() {\\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\\n    };\\n    interpolate.distance = d;\\n    return interpolate;\\n  }\\n  d3.geo.length = function(object) {\\n    d3_geo_lengthSum = 0;\\n    d3.geo.stream(object, d3_geo_length);\\n    return d3_geo_lengthSum;\\n  };\\n  var d3_geo_lengthSum;\\n  var d3_geo_length = {\\n    sphere: d3_noop,\\n    point: d3_noop,\\n    lineStart: d3_geo_lengthLineStart,\\n    lineEnd: d3_noop,\\n    polygonStart: d3_noop,\\n    polygonEnd: d3_noop\\n  };\\n  function d3_geo_lengthLineStart() {\\n    var λ0, sinφ0, cosφ0;\\n    d3_geo_length.point = function(λ, φ) {\\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\\n      d3_geo_length.point = nextPoint;\\n    };\\n    d3_geo_length.lineEnd = function() {\\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\\n    };\\n    function nextPoint(λ, φ) {\\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\\n    }\\n  }\\n  function d3_geo_azimuthal(scale, angle) {\\n    function azimuthal(λ, φ) {\\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\\n    }\\n    azimuthal.invert = function(x, y) {\\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\\n    };\\n    return azimuthal;\\n  }\\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\\n    return Math.sqrt(2 / (1 + cosλcosφ));\\n  }, function(ρ) {\\n    return 2 * Math.asin(ρ / 2);\\n  });\\n  (d3.geo.azimuthalEqualArea = function() {\\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\\n  }).raw = d3_geo_azimuthalEqualArea;\\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\\n    var c = Math.acos(cosλcosφ);\\n    return c && c / Math.sin(c);\\n  }, d3_identity);\\n  (d3.geo.azimuthalEquidistant = function() {\\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\\n  }).raw = d3_geo_azimuthalEquidistant;\\n  function d3_geo_conicConformal(φ0, φ1) {\\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\\n      return Math.tan(π / 4 + φ / 2);\\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\\n    if (!n) return d3_geo_mercator;\\n    function forward(λ, φ) {\\n      if (F > 0) {\\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\\n      } else {\\n        if (φ > halfπ - ε) φ = halfπ - ε;\\n      }\\n      var ρ = F / Math.pow(t(φ), n);\\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\\n    }\\n    forward.invert = function(x, y) {\\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\\n    };\\n    return forward;\\n  }\\n  (d3.geo.conicConformal = function() {\\n    return d3_geo_conic(d3_geo_conicConformal);\\n  }).raw = d3_geo_conicConformal;\\n  function d3_geo_conicEquidistant(φ0, φ1) {\\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\\n    if (abs(n) < ε) return d3_geo_equirectangular;\\n    function forward(λ, φ) {\\n      var ρ = G - φ;\\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\\n    }\\n    forward.invert = function(x, y) {\\n      var ρ0_y = G - y;\\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\\n    };\\n    return forward;\\n  }\\n  (d3.geo.conicEquidistant = function() {\\n    return d3_geo_conic(d3_geo_conicEquidistant);\\n  }).raw = d3_geo_conicEquidistant;\\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\\n    return 1 / cosλcosφ;\\n  }, Math.atan);\\n  (d3.geo.gnomonic = function() {\\n    return d3_geo_projection(d3_geo_gnomonic);\\n  }).raw = d3_geo_gnomonic;\\n  function d3_geo_mercator(λ, φ) {\\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\\n  }\\n  d3_geo_mercator.invert = function(x, y) {\\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\\n  };\\n  function d3_geo_mercatorProjection(project) {\\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\\n    m.scale = function() {\\n      var v = scale.apply(m, arguments);\\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\\n    };\\n    m.translate = function() {\\n      var v = translate.apply(m, arguments);\\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\\n    };\\n    m.clipExtent = function(_) {\\n      var v = clipExtent.apply(m, arguments);\\n      if (v === m) {\\n        if (clipAuto = _ == null) {\\n          var k = π * scale(), t = translate();\\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\\n        }\\n      } else if (clipAuto) {\\n        v = null;\\n      }\\n      return v;\\n    };\\n    return m.clipExtent(null);\\n  }\\n  (d3.geo.mercator = function() {\\n    return d3_geo_mercatorProjection(d3_geo_mercator);\\n  }).raw = d3_geo_mercator;\\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\\n    return 1;\\n  }, Math.asin);\\n  (d3.geo.orthographic = function() {\\n    return d3_geo_projection(d3_geo_orthographic);\\n  }).raw = d3_geo_orthographic;\\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\\n    return 1 / (1 + cosλcosφ);\\n  }, function(ρ) {\\n    return 2 * Math.atan(ρ);\\n  });\\n  (d3.geo.stereographic = function() {\\n    return d3_geo_projection(d3_geo_stereographic);\\n  }).raw = d3_geo_stereographic;\\n  function d3_geo_transverseMercator(λ, φ) {\\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\\n  }\\n  d3_geo_transverseMercator.invert = function(x, y) {\\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\\n  };\\n  (d3.geo.transverseMercator = function() {\\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\\n    projection.center = function(_) {\\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\\n    };\\n    projection.rotate = function(_) {\\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \\n      [ _[0], _[1], _[2] - 90 ]);\\n    };\\n    return rotate([ 0, 0, 90 ]);\\n  }).raw = d3_geo_transverseMercator;\\n  d3.geom = {};\\n  function d3_geom_pointX(d) {\\n    return d[0];\\n  }\\n  function d3_geom_pointY(d) {\\n    return d[1];\\n  }\\n  d3.geom.hull = function(vertices) {\\n    var x = d3_geom_pointX, y = d3_geom_pointY;\\n    if (arguments.length) return hull(vertices);\\n    function hull(data) {\\n      if (data.length < 3) return [];\\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\\n      for (i = 0; i < n; i++) {\\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\\n      }\\n      points.sort(d3_geom_hullOrder);\\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\\n      return polygon;\\n    }\\n    hull.x = function(_) {\\n      return arguments.length ? (x = _, hull) : x;\\n    };\\n    hull.y = function(_) {\\n      return arguments.length ? (y = _, hull) : y;\\n    };\\n    return hull;\\n  };\\n  function d3_geom_hullUpper(points) {\\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\\n    for (var i = 2; i < n; i++) {\\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\\n      hull[hs++] = i;\\n    }\\n    return hull.slice(0, hs);\\n  }\\n  function d3_geom_hullOrder(a, b) {\\n    return a[0] - b[0] || a[1] - b[1];\\n  }\\n  d3.geom.polygon = function(coordinates) {\\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\\n    return coordinates;\\n  };\\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\\n  d3_geom_polygonPrototype.area = function() {\\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\\n    while (++i < n) {\\n      a = b;\\n      b = this[i];\\n      area += a[1] * b[0] - a[0] * b[1];\\n    }\\n    return area * .5;\\n  };\\n  d3_geom_polygonPrototype.centroid = function(k) {\\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\\n    if (!arguments.length) k = -1 / (6 * this.area());\\n    while (++i < n) {\\n      a = b;\\n      b = this[i];\\n      c = a[0] * b[1] - b[0] * a[1];\\n      x += (a[0] + b[0]) * c;\\n      y += (a[1] + b[1]) * c;\\n    }\\n    return [ x * k, y * k ];\\n  };\\n  d3_geom_polygonPrototype.clip = function(subject) {\\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\\n    while (++i < n) {\\n      input = subject.slice();\\n      subject.length = 0;\\n      b = this[i];\\n      c = input[(m = input.length - closed) - 1];\\n      j = -1;\\n      while (++j < m) {\\n        d = input[j];\\n        if (d3_geom_polygonInside(d, a, b)) {\\n          if (!d3_geom_polygonInside(c, a, b)) {\\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\\n          }\\n          subject.push(d);\\n        } else if (d3_geom_polygonInside(c, a, b)) {\\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\\n        }\\n        c = d;\\n      }\\n      if (closed) subject.push(subject[0]);\\n      a = b;\\n    }\\n    return subject;\\n  };\\n  function d3_geom_polygonInside(p, a, b) {\\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\\n  }\\n  function d3_geom_polygonIntersect(c, d, a, b) {\\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\\n    return [ x1 + ua * x21, y1 + ua * y21 ];\\n  }\\n  function d3_geom_polygonClosed(coordinates) {\\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\\n    return !(a[0] - b[0] || a[1] - b[1]);\\n  }\\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\\n  function d3_geom_voronoiBeach() {\\n    d3_geom_voronoiRedBlackNode(this);\\n    this.edge = this.site = this.circle = null;\\n  }\\n  function d3_geom_voronoiCreateBeach(site) {\\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\\n    beach.site = site;\\n    return beach;\\n  }\\n  function d3_geom_voronoiDetachBeach(beach) {\\n    d3_geom_voronoiDetachCircle(beach);\\n    d3_geom_voronoiBeaches.remove(beach);\\n    d3_geom_voronoiBeachPool.push(beach);\\n    d3_geom_voronoiRedBlackNode(beach);\\n  }\\n  function d3_geom_voronoiRemoveBeach(beach) {\\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\\n      x: x,\\n      y: y\\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\\n    d3_geom_voronoiDetachBeach(beach);\\n    var lArc = previous;\\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\\n      previous = lArc.P;\\n      disappearing.unshift(lArc);\\n      d3_geom_voronoiDetachBeach(lArc);\\n      lArc = previous;\\n    }\\n    disappearing.unshift(lArc);\\n    d3_geom_voronoiDetachCircle(lArc);\\n    var rArc = next;\\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\\n      next = rArc.N;\\n      disappearing.push(rArc);\\n      d3_geom_voronoiDetachBeach(rArc);\\n      rArc = next;\\n    }\\n    disappearing.push(rArc);\\n    d3_geom_voronoiDetachCircle(rArc);\\n    var nArcs = disappearing.length, iArc;\\n    for (iArc = 1; iArc < nArcs; ++iArc) {\\n      rArc = disappearing[iArc];\\n      lArc = disappearing[iArc - 1];\\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\\n    }\\n    lArc = disappearing[0];\\n    rArc = disappearing[nArcs - 1];\\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\\n    d3_geom_voronoiAttachCircle(lArc);\\n    d3_geom_voronoiAttachCircle(rArc);\\n  }\\n  function d3_geom_voronoiAddBeach(site) {\\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\\n    while (node) {\\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\\n      if (dxl > ε) node = node.L; else {\\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\\n        if (dxr > ε) {\\n          if (!node.R) {\\n            lArc = node;\\n            break;\\n          }\\n          node = node.R;\\n        } else {\\n          if (dxl > -ε) {\\n            lArc = node.P;\\n            rArc = node;\\n          } else if (dxr > -ε) {\\n            lArc = node;\\n            rArc = node.N;\\n          } else {\\n            lArc = rArc = node;\\n          }\\n          break;\\n        }\\n      }\\n    }\\n    var newArc = d3_geom_voronoiCreateBeach(site);\\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\\n    if (!lArc && !rArc) return;\\n    if (lArc === rArc) {\\n      d3_geom_voronoiDetachCircle(lArc);\\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\\n      d3_geom_voronoiAttachCircle(lArc);\\n      d3_geom_voronoiAttachCircle(rArc);\\n      return;\\n    }\\n    if (!rArc) {\\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\\n      return;\\n    }\\n    d3_geom_voronoiDetachCircle(lArc);\\n    d3_geom_voronoiDetachCircle(rArc);\\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\\n      x: (cy * hb - by * hc) / d + ax,\\n      y: (bx * hc - cx * hb) / d + ay\\n    };\\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\\n    d3_geom_voronoiAttachCircle(lArc);\\n    d3_geom_voronoiAttachCircle(rArc);\\n  }\\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\\n    if (!pby2) return rfocx;\\n    var lArc = arc.P;\\n    if (!lArc) return -Infinity;\\n    site = lArc.site;\\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\\n    if (!plby2) return lfocx;\\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\\n    return (rfocx + lfocx) / 2;\\n  }\\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\\n    var rArc = arc.N;\\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\\n    var site = arc.site;\\n    return site.y === directrix ? site.x : Infinity;\\n  }\\n  function d3_geom_voronoiCell(site) {\\n    this.site = site;\\n    this.edges = [];\\n  }\\n  d3_geom_voronoiCell.prototype.prepare = function() {\\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\\n    while (iHalfEdge--) {\\n      edge = halfEdges[iHalfEdge].edge;\\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\\n    }\\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\\n    return halfEdges.length;\\n  };\\n  function d3_geom_voronoiCloseCells(extent) {\\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\\n    while (iCell--) {\\n      cell = cells[iCell];\\n      if (!cell || !cell.prepare()) continue;\\n      halfEdges = cell.edges;\\n      nHalfEdges = halfEdges.length;\\n      iHalfEdge = 0;\\n      while (iHalfEdge < nHalfEdges) {\\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\\n            x: x0,\\n            y: abs(x2 - x0) < ε ? y2 : y1\\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\\n            x: abs(y2 - y1) < ε ? x2 : x1,\\n            y: y1\\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\\n            x: x1,\\n            y: abs(x2 - x1) < ε ? y2 : y0\\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\\n            x: abs(y2 - y0) < ε ? x2 : x0,\\n            y: y0\\n          } : null), cell.site, null));\\n          ++nHalfEdges;\\n        }\\n      }\\n    }\\n  }\\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\\n    return b.angle - a.angle;\\n  }\\n  function d3_geom_voronoiCircle() {\\n    d3_geom_voronoiRedBlackNode(this);\\n    this.x = this.y = this.arc = this.site = this.cy = null;\\n  }\\n  function d3_geom_voronoiAttachCircle(arc) {\\n    var lArc = arc.P, rArc = arc.N;\\n    if (!lArc || !rArc) return;\\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\\n    if (lSite === rSite) return;\\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\\n    var d = 2 * (ax * cy - ay * cx);\\n    if (d >= -ε2) return;\\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\\n    circle.arc = arc;\\n    circle.site = cSite;\\n    circle.x = x + bx;\\n    circle.y = cy + Math.sqrt(x * x + y * y);\\n    circle.cy = cy;\\n    arc.circle = circle;\\n    var before = null, node = d3_geom_voronoiCircles._;\\n    while (node) {\\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\\n        if (node.L) node = node.L; else {\\n          before = node.P;\\n          break;\\n        }\\n      } else {\\n        if (node.R) node = node.R; else {\\n          before = node;\\n          break;\\n        }\\n      }\\n    }\\n    d3_geom_voronoiCircles.insert(before, circle);\\n    if (!before) d3_geom_voronoiFirstCircle = circle;\\n  }\\n  function d3_geom_voronoiDetachCircle(arc) {\\n    var circle = arc.circle;\\n    if (circle) {\\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\\n      d3_geom_voronoiCircles.remove(circle);\\n      d3_geom_voronoiCirclePool.push(circle);\\n      d3_geom_voronoiRedBlackNode(circle);\\n      arc.circle = null;\\n    }\\n  }\\n  function d3_geom_voronoiClipEdges(extent) {\\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\\n    while (i--) {\\n      e = edges[i];\\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\\n        e.a = e.b = null;\\n        edges.splice(i, 1);\\n      }\\n    }\\n  }\\n  function d3_geom_voronoiConnectEdge(edge, extent) {\\n    var vb = edge.b;\\n    if (vb) return true;\\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\\n    if (ry === ly) {\\n      if (fx < x0 || fx >= x1) return;\\n      if (lx > rx) {\\n        if (!va) va = {\\n          x: fx,\\n          y: y0\\n        }; else if (va.y >= y1) return;\\n        vb = {\\n          x: fx,\\n          y: y1\\n        };\\n      } else {\\n        if (!va) va = {\\n          x: fx,\\n          y: y1\\n        }; else if (va.y < y0) return;\\n        vb = {\\n          x: fx,\\n          y: y0\\n        };\\n      }\\n    } else {\\n      fm = (lx - rx) / (ry - ly);\\n      fb = fy - fm * fx;\\n      if (fm < -1 || fm > 1) {\\n        if (lx > rx) {\\n          if (!va) va = {\\n            x: (y0 - fb) / fm,\\n            y: y0\\n          }; else if (va.y >= y1) return;\\n          vb = {\\n            x: (y1 - fb) / fm,\\n            y: y1\\n          };\\n        } else {\\n          if (!va) va = {\\n            x: (y1 - fb) / fm,\\n            y: y1\\n          }; else if (va.y < y0) return;\\n          vb = {\\n            x: (y0 - fb) / fm,\\n            y: y0\\n          };\\n        }\\n      } else {\\n        if (ly < ry) {\\n          if (!va) va = {\\n            x: x0,\\n            y: fm * x0 + fb\\n          }; else if (va.x >= x1) return;\\n          vb = {\\n            x: x1,\\n            y: fm * x1 + fb\\n          };\\n        } else {\\n          if (!va) va = {\\n            x: x1,\\n            y: fm * x1 + fb\\n          }; else if (va.x < x0) return;\\n          vb = {\\n            x: x0,\\n            y: fm * x0 + fb\\n          };\\n        }\\n      }\\n    }\\n    edge.a = va;\\n    edge.b = vb;\\n    return true;\\n  }\\n  function d3_geom_voronoiEdge(lSite, rSite) {\\n    this.l = lSite;\\n    this.r = rSite;\\n    this.a = this.b = null;\\n  }\\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\\n    d3_geom_voronoiEdges.push(edge);\\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\\n    return edge;\\n  }\\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\\n    var edge = new d3_geom_voronoiEdge(lSite, null);\\n    edge.a = va;\\n    edge.b = vb;\\n    d3_geom_voronoiEdges.push(edge);\\n    return edge;\\n  }\\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\\n    if (!edge.a && !edge.b) {\\n      edge.a = vertex;\\n      edge.l = lSite;\\n      edge.r = rSite;\\n    } else if (edge.l === rSite) {\\n      edge.b = vertex;\\n    } else {\\n      edge.a = vertex;\\n    }\\n  }\\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\\n    var va = edge.a, vb = edge.b;\\n    this.edge = edge;\\n    this.site = lSite;\\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\\n  }\\n  d3_geom_voronoiHalfEdge.prototype = {\\n    start: function() {\\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\\n    },\\n    end: function() {\\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\\n    }\\n  };\\n  function d3_geom_voronoiRedBlackTree() {\\n    this._ = null;\\n  }\\n  function d3_geom_voronoiRedBlackNode(node) {\\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\\n  }\\n  d3_geom_voronoiRedBlackTree.prototype = {\\n    insert: function(after, node) {\\n      var parent, grandpa, uncle;\\n      if (after) {\\n        node.P = after;\\n        node.N = after.N;\\n        if (after.N) after.N.P = node;\\n        after.N = node;\\n        if (after.R) {\\n          after = after.R;\\n          while (after.L) after = after.L;\\n          after.L = node;\\n        } else {\\n          after.R = node;\\n        }\\n        parent = after;\\n      } else if (this._) {\\n        after = d3_geom_voronoiRedBlackFirst(this._);\\n        node.P = null;\\n        node.N = after;\\n        after.P = after.L = node;\\n        parent = after;\\n      } else {\\n        node.P = node.N = null;\\n        this._ = node;\\n        parent = null;\\n      }\\n      node.L = node.R = null;\\n      node.U = parent;\\n      node.C = true;\\n      after = node;\\n      while (parent && parent.C) {\\n        grandpa = parent.U;\\n        if (parent === grandpa.L) {\\n          uncle = grandpa.R;\\n          if (uncle && uncle.C) {\\n            parent.C = uncle.C = false;\\n            grandpa.C = true;\\n            after = grandpa;\\n          } else {\\n            if (after === parent.R) {\\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\\n              after = parent;\\n              parent = after.U;\\n            }\\n            parent.C = false;\\n            grandpa.C = true;\\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\\n          }\\n        } else {\\n          uncle = grandpa.L;\\n          if (uncle && uncle.C) {\\n            parent.C = uncle.C = false;\\n            grandpa.C = true;\\n            after = grandpa;\\n          } else {\\n            if (after === parent.L) {\\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\\n              after = parent;\\n              parent = after.U;\\n            }\\n            parent.C = false;\\n            grandpa.C = true;\\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\\n          }\\n        }\\n        parent = after.U;\\n      }\\n      this._.C = false;\\n    },\\n    remove: function(node) {\\n      if (node.N) node.N.P = node.P;\\n      if (node.P) node.P.N = node.N;\\n      node.N = node.P = null;\\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\\n      if (parent) {\\n        if (parent.L === node) parent.L = next; else parent.R = next;\\n      } else {\\n        this._ = next;\\n      }\\n      if (left && right) {\\n        red = next.C;\\n        next.C = node.C;\\n        next.L = left;\\n        left.U = next;\\n        if (next !== right) {\\n          parent = next.U;\\n          next.U = node.U;\\n          node = next.R;\\n          parent.L = node;\\n          next.R = right;\\n          right.U = next;\\n        } else {\\n          next.U = parent;\\n          parent = next;\\n          node = next.R;\\n        }\\n      } else {\\n        red = node.C;\\n        node = next;\\n      }\\n      if (node) node.U = parent;\\n      if (red) return;\\n      if (node && node.C) {\\n        node.C = false;\\n        return;\\n      }\\n      do {\\n        if (node === this._) break;\\n        if (node === parent.L) {\\n          sibling = parent.R;\\n          if (sibling.C) {\\n            sibling.C = false;\\n            parent.C = true;\\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\\n            sibling = parent.R;\\n          }\\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\\n            if (!sibling.R || !sibling.R.C) {\\n              sibling.L.C = false;\\n              sibling.C = true;\\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\\n              sibling = parent.R;\\n            }\\n            sibling.C = parent.C;\\n            parent.C = sibling.R.C = false;\\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\\n            node = this._;\\n            break;\\n          }\\n        } else {\\n          sibling = parent.L;\\n          if (sibling.C) {\\n            sibling.C = false;\\n            parent.C = true;\\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\\n            sibling = parent.L;\\n          }\\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\\n            if (!sibling.L || !sibling.L.C) {\\n              sibling.R.C = false;\\n              sibling.C = true;\\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\\n              sibling = parent.L;\\n            }\\n            sibling.C = parent.C;\\n            parent.C = sibling.L.C = false;\\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\\n            node = this._;\\n            break;\\n          }\\n        }\\n        sibling.C = true;\\n        node = parent;\\n        parent = parent.U;\\n      } while (!node.C);\\n      if (node) node.C = false;\\n    }\\n  };\\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\\n    var p = node, q = node.R, parent = p.U;\\n    if (parent) {\\n      if (parent.L === p) parent.L = q; else parent.R = q;\\n    } else {\\n      tree._ = q;\\n    }\\n    q.U = parent;\\n    p.U = q;\\n    p.R = q.L;\\n    if (p.R) p.R.U = p;\\n    q.L = p;\\n  }\\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\\n    var p = node, q = node.L, parent = p.U;\\n    if (parent) {\\n      if (parent.L === p) parent.L = q; else parent.R = q;\\n    } else {\\n      tree._ = q;\\n    }\\n    q.U = parent;\\n    p.U = q;\\n    p.L = q.R;\\n    if (p.L) p.L.U = p;\\n    q.R = p;\\n  }\\n  function d3_geom_voronoiRedBlackFirst(node) {\\n    while (node.L) node = node.L;\\n    return node;\\n  }\\n  function d3_geom_voronoi(sites, bbox) {\\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\\n    d3_geom_voronoiEdges = [];\\n    d3_geom_voronoiCells = new Array(sites.length);\\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\\n    while (true) {\\n      circle = d3_geom_voronoiFirstCircle;\\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\\n        if (site.x !== x0 || site.y !== y0) {\\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\\n          d3_geom_voronoiAddBeach(site);\\n          x0 = site.x, y0 = site.y;\\n        }\\n        site = sites.pop();\\n      } else if (circle) {\\n        d3_geom_voronoiRemoveBeach(circle.arc);\\n      } else {\\n        break;\\n      }\\n    }\\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\\n    var diagram = {\\n      cells: d3_geom_voronoiCells,\\n      edges: d3_geom_voronoiEdges\\n    };\\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\\n    return diagram;\\n  }\\n  function d3_geom_voronoiVertexOrder(a, b) {\\n    return b.y - a.y || b.x - a.x;\\n  }\\n  d3.geom.voronoi = function(points) {\\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\\n    if (points) return voronoi(points);\\n    function voronoi(data) {\\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\\n          var s = e.start();\\n          return [ s.x, s.y ];\\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\\n        polygon.point = data[i];\\n      });\\n      return polygons;\\n    }\\n    function sites(data) {\\n      return data.map(function(d, i) {\\n        return {\\n          x: Math.round(fx(d, i) / ε) * ε,\\n          y: Math.round(fy(d, i) / ε) * ε,\\n          i: i\\n        };\\n      });\\n    }\\n    voronoi.links = function(data) {\\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\\n        return edge.l && edge.r;\\n      }).map(function(edge) {\\n        return {\\n          source: data[edge.l.i],\\n          target: data[edge.r.i]\\n        };\\n      });\\n    };\\n    voronoi.triangles = function(data) {\\n      var triangles = [];\\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\\n        while (++j < m) {\\n          e0 = e1;\\n          s0 = s1;\\n          e1 = edges[j].edge;\\n          s1 = e1.l === site ? e1.r : e1.l;\\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\\n          }\\n        }\\n      });\\n      return triangles;\\n    };\\n    voronoi.x = function(_) {\\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\\n    };\\n    voronoi.y = function(_) {\\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\\n    };\\n    voronoi.clipExtent = function(_) {\\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\\n      return voronoi;\\n    };\\n    voronoi.size = function(_) {\\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\\n    };\\n    return voronoi;\\n  };\\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\\n  function d3_geom_voronoiTriangleArea(a, b, c) {\\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\\n  }\\n  d3.geom.delaunay = function(vertices) {\\n    return d3.geom.voronoi().triangles(vertices);\\n  };\\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\\n    if (compat = arguments.length) {\\n      x = d3_geom_quadtreeCompatX;\\n      y = d3_geom_quadtreeCompatY;\\n      if (compat === 3) {\\n        y2 = y1;\\n        x2 = x1;\\n        y1 = x1 = 0;\\n      }\\n      return quadtree(points);\\n    }\\n    function quadtree(data) {\\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\\n      if (x1 != null) {\\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\\n      } else {\\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\\n        xs = [], ys = [];\\n        n = data.length;\\n        if (compat) for (i = 0; i < n; ++i) {\\n          d = data[i];\\n          if (d.x < x1_) x1_ = d.x;\\n          if (d.y < y1_) y1_ = d.y;\\n          if (d.x > x2_) x2_ = d.x;\\n          if (d.y > y2_) y2_ = d.y;\\n          xs.push(d.x);\\n          ys.push(d.y);\\n        } else for (i = 0; i < n; ++i) {\\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\\n          if (x_ < x1_) x1_ = x_;\\n          if (y_ < y1_) y1_ = y_;\\n          if (x_ > x2_) x2_ = x_;\\n          if (y_ > y2_) y2_ = y_;\\n          xs.push(x_);\\n          ys.push(y_);\\n        }\\n      }\\n      var dx = x2_ - x1_, dy = y2_ - y1_;\\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\\n      function insert(n, d, x, y, x1, y1, x2, y2) {\\n        if (isNaN(x) || isNaN(y)) return;\\n        if (n.leaf) {\\n          var nx = n.x, ny = n.y;\\n          if (nx != null) {\\n            if (abs(nx - x) + abs(ny - y) < .01) {\\n              insertChild(n, d, x, y, x1, y1, x2, y2);\\n            } else {\\n              var nPoint = n.point;\\n              n.x = n.y = n.point = null;\\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\\n              insertChild(n, d, x, y, x1, y1, x2, y2);\\n            }\\n          } else {\\n            n.x = x, n.y = y, n.point = d;\\n          }\\n        } else {\\n          insertChild(n, d, x, y, x1, y1, x2, y2);\\n        }\\n      }\\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\\n        n.leaf = false;\\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\\n        if (right) x1 = xm; else x2 = xm;\\n        if (below) y1 = ym; else y2 = ym;\\n        insert(n, d, x, y, x1, y1, x2, y2);\\n      }\\n      var root = d3_geom_quadtreeNode();\\n      root.add = function(d) {\\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\\n      };\\n      root.visit = function(f) {\\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\\n      };\\n      root.find = function(point) {\\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\\n      };\\n      i = -1;\\n      if (x1 == null) {\\n        while (++i < n) {\\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\\n        }\\n        --i;\\n      } else data.forEach(root.add);\\n      xs = ys = data = d = null;\\n      return root;\\n    }\\n    quadtree.x = function(_) {\\n      return arguments.length ? (x = _, quadtree) : x;\\n    };\\n    quadtree.y = function(_) {\\n      return arguments.length ? (y = _, quadtree) : y;\\n    };\\n    quadtree.extent = function(_) {\\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \\n      y2 = +_[1][1];\\n      return quadtree;\\n    };\\n    quadtree.size = function(_) {\\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\\n      return quadtree;\\n    };\\n    return quadtree;\\n  };\\n  function d3_geom_quadtreeCompatX(d) {\\n    return d.x;\\n  }\\n  function d3_geom_quadtreeCompatY(d) {\\n    return d.y;\\n  }\\n  function d3_geom_quadtreeNode() {\\n    return {\\n      leaf: true,\\n      nodes: [],\\n      point: null,\\n      x: null,\\n      y: null\\n    };\\n  }\\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\\n    if (!f(node, x1, y1, x2, y2)) {\\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\\n    }\\n  }\\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\\n    var minDistance2 = Infinity, closestPoint;\\n    (function find(node, x1, y1, x2, y2) {\\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\\n      if (point = node.point) {\\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\\n        if (distance2 < minDistance2) {\\n          var distance = Math.sqrt(minDistance2 = distance2);\\n          x0 = x - distance, y0 = y - distance;\\n          x3 = x + distance, y3 = y + distance;\\n          closestPoint = point;\\n        }\\n      }\\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\\n        if (node = children[i & 3]) switch (i & 3) {\\n         case 0:\\n          find(node, x1, y1, xm, ym);\\n          break;\\n\\n         case 1:\\n          find(node, xm, y1, x2, ym);\\n          break;\\n\\n         case 2:\\n          find(node, x1, ym, xm, y2);\\n          break;\\n\\n         case 3:\\n          find(node, xm, ym, x2, y2);\\n          break;\\n        }\\n      }\\n    })(root, x0, y0, x3, y3);\\n    return closestPoint;\\n  }\\n  d3.interpolateRgb = d3_interpolateRgb;\\n  function d3_interpolateRgb(a, b) {\\n    a = d3.rgb(a);\\n    b = d3.rgb(b);\\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\\n    return function(t) {\\n      return \\\"#\\\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\\n    };\\n  }\\n  d3.interpolateObject = d3_interpolateObject;\\n  function d3_interpolateObject(a, b) {\\n    var i = {}, c = {}, k;\\n    for (k in a) {\\n      if (k in b) {\\n        i[k] = d3_interpolate(a[k], b[k]);\\n      } else {\\n        c[k] = a[k];\\n      }\\n    }\\n    for (k in b) {\\n      if (!(k in a)) {\\n        c[k] = b[k];\\n      }\\n    }\\n    return function(t) {\\n      for (k in i) c[k] = i[k](t);\\n      return c;\\n    };\\n  }\\n  d3.interpolateNumber = d3_interpolateNumber;\\n  function d3_interpolateNumber(a, b) {\\n    a = +a, b = +b;\\n    return function(t) {\\n      return a * (1 - t) + b * t;\\n    };\\n  }\\n  d3.interpolateString = d3_interpolateString;\\n  function d3_interpolateString(a, b) {\\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\\n    a = a + \\\"\\\", b = b + \\\"\\\";\\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\\n      if ((bs = bm.index) > bi) {\\n        bs = b.slice(bi, bs);\\n        if (s[i]) s[i] += bs; else s[++i] = bs;\\n      }\\n      if ((am = am[0]) === (bm = bm[0])) {\\n        if (s[i]) s[i] += bm; else s[++i] = bm;\\n      } else {\\n        s[++i] = null;\\n        q.push({\\n          i: i,\\n          x: d3_interpolateNumber(am, bm)\\n        });\\n      }\\n      bi = d3_interpolate_numberB.lastIndex;\\n    }\\n    if (bi < b.length) {\\n      bs = b.slice(bi);\\n      if (s[i]) s[i] += bs; else s[++i] = bs;\\n    }\\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\\n      return b(t) + \\\"\\\";\\n    }) : function() {\\n      return b;\\n    } : (b = q.length, function(t) {\\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\\n      return s.join(\\\"\\\");\\n    });\\n  }\\n  var d3_interpolate_numberA = /[-+]?(?:\\\\d+\\\\.?\\\\d*|\\\\.?\\\\d+)(?:[eE][-+]?\\\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \\\"g\\\");\\n  d3.interpolate = d3_interpolate;\\n  function d3_interpolate(a, b) {\\n    var i = d3.interpolators.length, f;\\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\\n    return f;\\n  }\\n  d3.interpolators = [ function(a, b) {\\n    var t = typeof b;\\n    return (t === \\\"string\\\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\\\(|hsl\\\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \\\"object\\\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\\n  } ];\\n  d3.interpolateArray = d3_interpolateArray;\\n  function d3_interpolateArray(a, b) {\\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\\n    for (;i < na; ++i) c[i] = a[i];\\n    for (;i < nb; ++i) c[i] = b[i];\\n    return function(t) {\\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\\n      return c;\\n    };\\n  }\\n  var d3_ease_default = function() {\\n    return d3_identity;\\n  };\\n  var d3_ease = d3.map({\\n    linear: d3_ease_default,\\n    poly: d3_ease_poly,\\n    quad: function() {\\n      return d3_ease_quad;\\n    },\\n    cubic: function() {\\n      return d3_ease_cubic;\\n    },\\n    sin: function() {\\n      return d3_ease_sin;\\n    },\\n    exp: function() {\\n      return d3_ease_exp;\\n    },\\n    circle: function() {\\n      return d3_ease_circle;\\n    },\\n    elastic: d3_ease_elastic,\\n    back: d3_ease_back,\\n    bounce: function() {\\n      return d3_ease_bounce;\\n    }\\n  });\\n  var d3_ease_mode = d3.map({\\n    \\\"in\\\": d3_identity,\\n    out: d3_ease_reverse,\\n    \\\"in-out\\\": d3_ease_reflect,\\n    \\\"out-in\\\": function(f) {\\n      return d3_ease_reflect(d3_ease_reverse(f));\\n    }\\n  });\\n  d3.ease = function(name) {\\n    var i = name.indexOf(\\\"-\\\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \\\"in\\\";\\n    t = d3_ease.get(t) || d3_ease_default;\\n    m = d3_ease_mode.get(m) || d3_identity;\\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\\n  };\\n  function d3_ease_clamp(f) {\\n    return function(t) {\\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\\n    };\\n  }\\n  function d3_ease_reverse(f) {\\n    return function(t) {\\n      return 1 - f(1 - t);\\n    };\\n  }\\n  function d3_ease_reflect(f) {\\n    return function(t) {\\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\\n    };\\n  }\\n  function d3_ease_quad(t) {\\n    return t * t;\\n  }\\n  function d3_ease_cubic(t) {\\n    return t * t * t;\\n  }\\n  function d3_ease_cubicInOut(t) {\\n    if (t <= 0) return 0;\\n    if (t >= 1) return 1;\\n    var t2 = t * t, t3 = t2 * t;\\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\\n  }\\n  function d3_ease_poly(e) {\\n    return function(t) {\\n      return Math.pow(t, e);\\n    };\\n  }\\n  function d3_ease_sin(t) {\\n    return 1 - Math.cos(t * halfπ);\\n  }\\n  function d3_ease_exp(t) {\\n    return Math.pow(2, 10 * (t - 1));\\n  }\\n  function d3_ease_circle(t) {\\n    return 1 - Math.sqrt(1 - t * t);\\n  }\\n  function d3_ease_elastic(a, p) {\\n    var s;\\n    if (arguments.length < 2) p = .45;\\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\\n    return function(t) {\\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\\n    };\\n  }\\n  function d3_ease_back(s) {\\n    if (!s) s = 1.70158;\\n    return function(t) {\\n      return t * t * ((s + 1) * t - s);\\n    };\\n  }\\n  function d3_ease_bounce(t) {\\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\\n  }\\n  d3.interpolateHcl = d3_interpolateHcl;\\n  function d3_interpolateHcl(a, b) {\\n    a = d3.hcl(a);\\n    b = d3.hcl(b);\\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\\n    return function(t) {\\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \\\"\\\";\\n    };\\n  }\\n  d3.interpolateHsl = d3_interpolateHsl;\\n  function d3_interpolateHsl(a, b) {\\n    a = d3.hsl(a);\\n    b = d3.hsl(b);\\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\\n    return function(t) {\\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \\\"\\\";\\n    };\\n  }\\n  d3.interpolateLab = d3_interpolateLab;\\n  function d3_interpolateLab(a, b) {\\n    a = d3.lab(a);\\n    b = d3.lab(b);\\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\\n    return function(t) {\\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \\\"\\\";\\n    };\\n  }\\n  d3.interpolateRound = d3_interpolateRound;\\n  function d3_interpolateRound(a, b) {\\n    b -= a;\\n    return function(t) {\\n      return Math.round(a + b * t);\\n    };\\n  }\\n  d3.transform = function(string) {\\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \\\"g\\\");\\n    return (d3.transform = function(string) {\\n      if (string != null) {\\n        g.setAttribute(\\\"transform\\\", string);\\n        var t = g.transform.baseVal.consolidate();\\n      }\\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\\n    })(string);\\n  };\\n  function d3_transform(m) {\\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\\n      r0[0] *= -1;\\n      r0[1] *= -1;\\n      kx *= -1;\\n      kz *= -1;\\n    }\\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\\n    this.translate = [ m.e, m.f ];\\n    this.scale = [ kx, ky ];\\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\\n  }\\n  d3_transform.prototype.toString = function() {\\n    return \\\"translate(\\\" + this.translate + \\\")rotate(\\\" + this.rotate + \\\")skewX(\\\" + this.skew + \\\")scale(\\\" + this.scale + \\\")\\\";\\n  };\\n  function d3_transformDot(a, b) {\\n    return a[0] * b[0] + a[1] * b[1];\\n  }\\n  function d3_transformNormalize(a) {\\n    var k = Math.sqrt(d3_transformDot(a, a));\\n    if (k) {\\n      a[0] /= k;\\n      a[1] /= k;\\n    }\\n    return k;\\n  }\\n  function d3_transformCombine(a, b, k) {\\n    a[0] += k * b[0];\\n    a[1] += k * b[1];\\n    return a;\\n  }\\n  var d3_transformIdentity = {\\n    a: 1,\\n    b: 0,\\n    c: 0,\\n    d: 1,\\n    e: 0,\\n    f: 0\\n  };\\n  d3.interpolateTransform = d3_interpolateTransform;\\n  function d3_interpolateTransformPop(s) {\\n    return s.length ? s.pop() + \\\",\\\" : \\\"\\\";\\n  }\\n  function d3_interpolateTranslate(ta, tb, s, q) {\\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\\n      var i = s.push(\\\"translate(\\\", null, \\\",\\\", null, \\\")\\\");\\n      q.push({\\n        i: i - 4,\\n        x: d3_interpolateNumber(ta[0], tb[0])\\n      }, {\\n        i: i - 2,\\n        x: d3_interpolateNumber(ta[1], tb[1])\\n      });\\n    } else if (tb[0] || tb[1]) {\\n      s.push(\\\"translate(\\\" + tb + \\\")\\\");\\n    }\\n  }\\n  function d3_interpolateRotate(ra, rb, s, q) {\\n    if (ra !== rb) {\\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\\n      q.push({\\n        i: s.push(d3_interpolateTransformPop(s) + \\\"rotate(\\\", null, \\\")\\\") - 2,\\n        x: d3_interpolateNumber(ra, rb)\\n      });\\n    } else if (rb) {\\n      s.push(d3_interpolateTransformPop(s) + \\\"rotate(\\\" + rb + \\\")\\\");\\n    }\\n  }\\n  function d3_interpolateSkew(wa, wb, s, q) {\\n    if (wa !== wb) {\\n      q.push({\\n        i: s.push(d3_interpolateTransformPop(s) + \\\"skewX(\\\", null, \\\")\\\") - 2,\\n        x: d3_interpolateNumber(wa, wb)\\n      });\\n    } else if (wb) {\\n      s.push(d3_interpolateTransformPop(s) + \\\"skewX(\\\" + wb + \\\")\\\");\\n    }\\n  }\\n  function d3_interpolateScale(ka, kb, s, q) {\\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\\n      var i = s.push(d3_interpolateTransformPop(s) + \\\"scale(\\\", null, \\\",\\\", null, \\\")\\\");\\n      q.push({\\n        i: i - 4,\\n        x: d3_interpolateNumber(ka[0], kb[0])\\n      }, {\\n        i: i - 2,\\n        x: d3_interpolateNumber(ka[1], kb[1])\\n      });\\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\\n      s.push(d3_interpolateTransformPop(s) + \\\"scale(\\\" + kb + \\\")\\\");\\n    }\\n  }\\n  function d3_interpolateTransform(a, b) {\\n    var s = [], q = [];\\n    a = d3.transform(a), b = d3.transform(b);\\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\\n    d3_interpolateSkew(a.skew, b.skew, s, q);\\n    d3_interpolateScale(a.scale, b.scale, s, q);\\n    a = b = null;\\n    return function(t) {\\n      var i = -1, n = q.length, o;\\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\\n      return s.join(\\\"\\\");\\n    };\\n  }\\n  function d3_uninterpolateNumber(a, b) {\\n    b = (b -= a = +a) || 1 / b;\\n    return function(x) {\\n      return (x - a) / b;\\n    };\\n  }\\n  function d3_uninterpolateClamp(a, b) {\\n    b = (b -= a = +a) || 1 / b;\\n    return function(x) {\\n      return Math.max(0, Math.min(1, (x - a) / b));\\n    };\\n  }\\n  d3.layout = {};\\n  d3.layout.bundle = function() {\\n    return function(links) {\\n      var paths = [], i = -1, n = links.length;\\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\\n      return paths;\\n    };\\n  };\\n  function d3_layout_bundlePath(link) {\\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\\n    while (start !== lca) {\\n      start = start.parent;\\n      points.push(start);\\n    }\\n    var k = points.length;\\n    while (end !== lca) {\\n      points.splice(k, 0, end);\\n      end = end.parent;\\n    }\\n    return points;\\n  }\\n  function d3_layout_bundleAncestors(node) {\\n    var ancestors = [], parent = node.parent;\\n    while (parent != null) {\\n      ancestors.push(node);\\n      node = parent;\\n      parent = parent.parent;\\n    }\\n    ancestors.push(node);\\n    return ancestors;\\n  }\\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\\n    if (a === b) return a;\\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\\n    while (aNode === bNode) {\\n      sharedNode = aNode;\\n      aNode = aNodes.pop();\\n      bNode = bNodes.pop();\\n    }\\n    return sharedNode;\\n  }\\n  d3.layout.chord = function() {\\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\\n    function relayout() {\\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\\n      chords = [];\\n      groups = [];\\n      k = 0, i = -1;\\n      while (++i < n) {\\n        x = 0, j = -1;\\n        while (++j < n) {\\n          x += matrix[i][j];\\n        }\\n        groupSums.push(x);\\n        subgroupIndex.push(d3.range(n));\\n        k += x;\\n      }\\n      if (sortGroups) {\\n        groupIndex.sort(function(a, b) {\\n          return sortGroups(groupSums[a], groupSums[b]);\\n        });\\n      }\\n      if (sortSubgroups) {\\n        subgroupIndex.forEach(function(d, i) {\\n          d.sort(function(a, b) {\\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\\n          });\\n        });\\n      }\\n      k = (τ - padding * n) / k;\\n      x = 0, i = -1;\\n      while (++i < n) {\\n        x0 = x, j = -1;\\n        while (++j < n) {\\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\\n          subgroups[di + \\\"-\\\" + dj] = {\\n            index: di,\\n            subindex: dj,\\n            startAngle: a0,\\n            endAngle: a1,\\n            value: v\\n          };\\n        }\\n        groups[di] = {\\n          index: di,\\n          startAngle: x0,\\n          endAngle: x,\\n          value: groupSums[di]\\n        };\\n        x += padding;\\n      }\\n      i = -1;\\n      while (++i < n) {\\n        j = i - 1;\\n        while (++j < n) {\\n          var source = subgroups[i + \\\"-\\\" + j], target = subgroups[j + \\\"-\\\" + i];\\n          if (source.value || target.value) {\\n            chords.push(source.value < target.value ? {\\n              source: target,\\n              target: source\\n            } : {\\n              source: source,\\n              target: target\\n            });\\n          }\\n        }\\n      }\\n      if (sortChords) resort();\\n    }\\n    function resort() {\\n      chords.sort(function(a, b) {\\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\\n      });\\n    }\\n    chord.matrix = function(x) {\\n      if (!arguments.length) return matrix;\\n      n = (matrix = x) && matrix.length;\\n      chords = groups = null;\\n      return chord;\\n    };\\n    chord.padding = function(x) {\\n      if (!arguments.length) return padding;\\n      padding = x;\\n      chords = groups = null;\\n      return chord;\\n    };\\n    chord.sortGroups = function(x) {\\n      if (!arguments.length) return sortGroups;\\n      sortGroups = x;\\n      chords = groups = null;\\n      return chord;\\n    };\\n    chord.sortSubgroups = function(x) {\\n      if (!arguments.length) return sortSubgroups;\\n      sortSubgroups = x;\\n      chords = null;\\n      return chord;\\n    };\\n    chord.sortChords = function(x) {\\n      if (!arguments.length) return sortChords;\\n      sortChords = x;\\n      if (chords) resort();\\n      return chord;\\n    };\\n    chord.chords = function() {\\n      if (!chords) relayout();\\n      return chords;\\n    };\\n    chord.groups = function() {\\n      if (!groups) relayout();\\n      return groups;\\n    };\\n    return chord;\\n  };\\n  d3.layout.force = function() {\\n    var force = {}, event = d3.dispatch(\\\"start\\\", \\\"tick\\\", \\\"end\\\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\\n    function repulse(node) {\\n      return function(quad, x1, _, x2) {\\n        if (quad.point !== node) {\\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\\n          if (dw * dw / theta2 < dn) {\\n            if (dn < chargeDistance2) {\\n              var k = quad.charge / dn;\\n              node.px -= dx * k;\\n              node.py -= dy * k;\\n            }\\n            return true;\\n          }\\n          if (quad.point && dn && dn < chargeDistance2) {\\n            var k = quad.pointCharge / dn;\\n            node.px -= dx * k;\\n            node.py -= dy * k;\\n          }\\n        }\\n        return !quad.charge;\\n      };\\n    }\\n    force.tick = function() {\\n      if ((alpha *= .99) < .005) {\\n        timer = null;\\n        event.end({\\n          type: \\\"end\\\",\\n          alpha: alpha = 0\\n        });\\n        return true;\\n      }\\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\\n      for (i = 0; i < m; ++i) {\\n        o = links[i];\\n        s = o.source;\\n        t = o.target;\\n        x = t.x - s.x;\\n        y = t.y - s.y;\\n        if (l = x * x + y * y) {\\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\\n          x *= l;\\n          y *= l;\\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\\n          t.y -= y * k;\\n          s.x += x * (k = 1 - k);\\n          s.y += y * k;\\n        }\\n      }\\n      if (k = alpha * gravity) {\\n        x = size[0] / 2;\\n        y = size[1] / 2;\\n        i = -1;\\n        if (k) while (++i < n) {\\n          o = nodes[i];\\n          o.x += (x - o.x) * k;\\n          o.y += (y - o.y) * k;\\n        }\\n      }\\n      if (charge) {\\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\\n        i = -1;\\n        while (++i < n) {\\n          if (!(o = nodes[i]).fixed) {\\n            q.visit(repulse(o));\\n          }\\n        }\\n      }\\n      i = -1;\\n      while (++i < n) {\\n        o = nodes[i];\\n        if (o.fixed) {\\n          o.x = o.px;\\n          o.y = o.py;\\n        } else {\\n          o.x -= (o.px - (o.px = o.x)) * friction;\\n          o.y -= (o.py - (o.py = o.y)) * friction;\\n        }\\n      }\\n      event.tick({\\n        type: \\\"tick\\\",\\n        alpha: alpha\\n      });\\n    };\\n    force.nodes = function(x) {\\n      if (!arguments.length) return nodes;\\n      nodes = x;\\n      return force;\\n    };\\n    force.links = function(x) {\\n      if (!arguments.length) return links;\\n      links = x;\\n      return force;\\n    };\\n    force.size = function(x) {\\n      if (!arguments.length) return size;\\n      size = x;\\n      return force;\\n    };\\n    force.linkDistance = function(x) {\\n      if (!arguments.length) return linkDistance;\\n      linkDistance = typeof x === \\\"function\\\" ? x : +x;\\n      return force;\\n    };\\n    force.distance = force.linkDistance;\\n    force.linkStrength = function(x) {\\n      if (!arguments.length) return linkStrength;\\n      linkStrength = typeof x === \\\"function\\\" ? x : +x;\\n      return force;\\n    };\\n    force.friction = function(x) {\\n      if (!arguments.length) return friction;\\n      friction = +x;\\n      return force;\\n    };\\n    force.charge = function(x) {\\n      if (!arguments.length) return charge;\\n      charge = typeof x === \\\"function\\\" ? x : +x;\\n      return force;\\n    };\\n    force.chargeDistance = function(x) {\\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\\n      chargeDistance2 = x * x;\\n      return force;\\n    };\\n    force.gravity = function(x) {\\n      if (!arguments.length) return gravity;\\n      gravity = +x;\\n      return force;\\n    };\\n    force.theta = function(x) {\\n      if (!arguments.length) return Math.sqrt(theta2);\\n      theta2 = x * x;\\n      return force;\\n    };\\n    force.alpha = function(x) {\\n      if (!arguments.length) return alpha;\\n      x = +x;\\n      if (alpha) {\\n        if (x > 0) {\\n          alpha = x;\\n        } else {\\n          timer.c = null, timer.t = NaN, timer = null;\\n          event.end({\\n            type: \\\"end\\\",\\n            alpha: alpha = 0\\n          });\\n        }\\n      } else if (x > 0) {\\n        event.start({\\n          type: \\\"start\\\",\\n          alpha: alpha = x\\n        });\\n        timer = d3_timer(force.tick);\\n      }\\n      return force;\\n    };\\n    force.start = function() {\\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\\n      for (i = 0; i < n; ++i) {\\n        (o = nodes[i]).index = i;\\n        o.weight = 0;\\n      }\\n      for (i = 0; i < m; ++i) {\\n        o = links[i];\\n        if (typeof o.source == \\\"number\\\") o.source = nodes[o.source];\\n        if (typeof o.target == \\\"number\\\") o.target = nodes[o.target];\\n        ++o.source.weight;\\n        ++o.target.weight;\\n      }\\n      for (i = 0; i < n; ++i) {\\n        o = nodes[i];\\n        if (isNaN(o.x)) o.x = position(\\\"x\\\", w);\\n        if (isNaN(o.y)) o.y = position(\\\"y\\\", h);\\n        if (isNaN(o.px)) o.px = o.x;\\n        if (isNaN(o.py)) o.py = o.y;\\n      }\\n      distances = [];\\n      if (typeof linkDistance === \\\"function\\\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\\n      strengths = [];\\n      if (typeof linkStrength === \\\"function\\\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\\n      charges = [];\\n      if (typeof charge === \\\"function\\\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\\n      function position(dimension, size) {\\n        if (!neighbors) {\\n          neighbors = new Array(n);\\n          for (j = 0; j < n; ++j) {\\n            neighbors[j] = [];\\n          }\\n          for (j = 0; j < m; ++j) {\\n            var o = links[j];\\n            neighbors[o.source.index].push(o.target);\\n            neighbors[o.target.index].push(o.source);\\n          }\\n        }\\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\\n        return Math.random() * size;\\n      }\\n      return force.resume();\\n    };\\n    force.resume = function() {\\n      return force.alpha(.1);\\n    };\\n    force.stop = function() {\\n      return force.alpha(0);\\n    };\\n    force.drag = function() {\\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\\\"dragstart.force\\\", d3_layout_forceDragstart).on(\\\"drag.force\\\", dragmove).on(\\\"dragend.force\\\", d3_layout_forceDragend);\\n      if (!arguments.length) return drag;\\n      this.on(\\\"mouseover.force\\\", d3_layout_forceMouseover).on(\\\"mouseout.force\\\", d3_layout_forceMouseout).call(drag);\\n    };\\n    function dragmove(d) {\\n      d.px = d3.event.x, d.py = d3.event.y;\\n      force.resume();\\n    }\\n    return d3.rebind(force, event, \\\"on\\\");\\n  };\\n  function d3_layout_forceDragstart(d) {\\n    d.fixed |= 2;\\n  }\\n  function d3_layout_forceDragend(d) {\\n    d.fixed &= ~6;\\n  }\\n  function d3_layout_forceMouseover(d) {\\n    d.fixed |= 4;\\n    d.px = d.x, d.py = d.y;\\n  }\\n  function d3_layout_forceMouseout(d) {\\n    d.fixed &= ~4;\\n  }\\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\\n    var cx = 0, cy = 0;\\n    quad.charge = 0;\\n    if (!quad.leaf) {\\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\\n      while (++i < n) {\\n        c = nodes[i];\\n        if (c == null) continue;\\n        d3_layout_forceAccumulate(c, alpha, charges);\\n        quad.charge += c.charge;\\n        cx += c.charge * c.cx;\\n        cy += c.charge * c.cy;\\n      }\\n    }\\n    if (quad.point) {\\n      if (!quad.leaf) {\\n        quad.point.x += Math.random() - .5;\\n        quad.point.y += Math.random() - .5;\\n      }\\n      var k = alpha * charges[quad.point.index];\\n      quad.charge += quad.pointCharge = k;\\n      cx += k * quad.point.x;\\n      cy += k * quad.point.y;\\n    }\\n    quad.cx = cx / quad.charge;\\n    quad.cy = cy / quad.charge;\\n  }\\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\\n  d3.layout.hierarchy = function() {\\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\\n    function hierarchy(root) {\\n      var stack = [ root ], nodes = [], node;\\n      root.depth = 0;\\n      while ((node = stack.pop()) != null) {\\n        nodes.push(node);\\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\\n          var n, childs, child;\\n          while (--n >= 0) {\\n            stack.push(child = childs[n]);\\n            child.parent = node;\\n            child.depth = node.depth + 1;\\n          }\\n          if (value) node.value = 0;\\n          node.children = childs;\\n        } else {\\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\\n          delete node.children;\\n        }\\n      }\\n      d3_layout_hierarchyVisitAfter(root, function(node) {\\n        var childs, parent;\\n        if (sort && (childs = node.children)) childs.sort(sort);\\n        if (value && (parent = node.parent)) parent.value += node.value;\\n      });\\n      return nodes;\\n    }\\n    hierarchy.sort = function(x) {\\n      if (!arguments.length) return sort;\\n      sort = x;\\n      return hierarchy;\\n    };\\n    hierarchy.children = function(x) {\\n      if (!arguments.length) return children;\\n      children = x;\\n      return hierarchy;\\n    };\\n    hierarchy.value = function(x) {\\n      if (!arguments.length) return value;\\n      value = x;\\n      return hierarchy;\\n    };\\n    hierarchy.revalue = function(root) {\\n      if (value) {\\n        d3_layout_hierarchyVisitBefore(root, function(node) {\\n          if (node.children) node.value = 0;\\n        });\\n        d3_layout_hierarchyVisitAfter(root, function(node) {\\n          var parent;\\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\\n          if (parent = node.parent) parent.value += node.value;\\n        });\\n      }\\n      return root;\\n    };\\n    return hierarchy;\\n  };\\n  function d3_layout_hierarchyRebind(object, hierarchy) {\\n    d3.rebind(object, hierarchy, \\\"sort\\\", \\\"children\\\", \\\"value\\\");\\n    object.nodes = object;\\n    object.links = d3_layout_hierarchyLinks;\\n    return object;\\n  }\\n  function d3_layout_hierarchyVisitBefore(node, callback) {\\n    var nodes = [ node ];\\n    while ((node = nodes.pop()) != null) {\\n      callback(node);\\n      if ((children = node.children) && (n = children.length)) {\\n        var n, children;\\n        while (--n >= 0) nodes.push(children[n]);\\n      }\\n    }\\n  }\\n  function d3_layout_hierarchyVisitAfter(node, callback) {\\n    var nodes = [ node ], nodes2 = [];\\n    while ((node = nodes.pop()) != null) {\\n      nodes2.push(node);\\n      if ((children = node.children) && (n = children.length)) {\\n        var i = -1, n, children;\\n        while (++i < n) nodes.push(children[i]);\\n      }\\n    }\\n    while ((node = nodes2.pop()) != null) {\\n      callback(node);\\n    }\\n  }\\n  function d3_layout_hierarchyChildren(d) {\\n    return d.children;\\n  }\\n  function d3_layout_hierarchyValue(d) {\\n    return d.value;\\n  }\\n  function d3_layout_hierarchySort(a, b) {\\n    return b.value - a.value;\\n  }\\n  function d3_layout_hierarchyLinks(nodes) {\\n    return d3.merge(nodes.map(function(parent) {\\n      return (parent.children || []).map(function(child) {\\n        return {\\n          source: parent,\\n          target: child\\n        };\\n      });\\n    }));\\n  }\\n  d3.layout.partition = function() {\\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\\n    function position(node, x, dx, dy) {\\n      var children = node.children;\\n      node.x = x;\\n      node.y = node.depth * dy;\\n      node.dx = dx;\\n      node.dy = dy;\\n      if (children && (n = children.length)) {\\n        var i = -1, n, c, d;\\n        dx = node.value ? dx / node.value : 0;\\n        while (++i < n) {\\n          position(c = children[i], x, d = c.value * dx, dy);\\n          x += d;\\n        }\\n      }\\n    }\\n    function depth(node) {\\n      var children = node.children, d = 0;\\n      if (children && (n = children.length)) {\\n        var i = -1, n;\\n        while (++i < n) d = Math.max(d, depth(children[i]));\\n      }\\n      return 1 + d;\\n    }\\n    function partition(d, i) {\\n      var nodes = hierarchy.call(this, d, i);\\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\\n      return nodes;\\n    }\\n    partition.size = function(x) {\\n      if (!arguments.length) return size;\\n      size = x;\\n      return partition;\\n    };\\n    return d3_layout_hierarchyRebind(partition, hierarchy);\\n  };\\n  d3.layout.pie = function() {\\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\\n    function pie(data) {\\n      var n = data.length, values = data.map(function(d, i) {\\n        return +value.call(pie, d, i);\\n      }), a = +(typeof startAngle === \\\"function\\\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \\\"function\\\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \\\"function\\\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\\n        return values[j] - values[i];\\n      } : function(i, j) {\\n        return sort(data[i], data[j]);\\n      });\\n      index.forEach(function(i) {\\n        arcs[i] = {\\n          data: data[i],\\n          value: v = values[i],\\n          startAngle: a,\\n          endAngle: a += v * k + pa,\\n          padAngle: p\\n        };\\n      });\\n      return arcs;\\n    }\\n    pie.value = function(_) {\\n      if (!arguments.length) return value;\\n      value = _;\\n      return pie;\\n    };\\n    pie.sort = function(_) {\\n      if (!arguments.length) return sort;\\n      sort = _;\\n      return pie;\\n    };\\n    pie.startAngle = function(_) {\\n      if (!arguments.length) return startAngle;\\n      startAngle = _;\\n      return pie;\\n    };\\n    pie.endAngle = function(_) {\\n      if (!arguments.length) return endAngle;\\n      endAngle = _;\\n      return pie;\\n    };\\n    pie.padAngle = function(_) {\\n      if (!arguments.length) return padAngle;\\n      padAngle = _;\\n      return pie;\\n    };\\n    return pie;\\n  };\\n  var d3_layout_pieSortByValue = {};\\n  d3.layout.stack = function() {\\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\\n    function stack(data, index) {\\n      if (!(n = data.length)) return data;\\n      var series = data.map(function(d, i) {\\n        return values.call(stack, d, i);\\n      });\\n      var points = series.map(function(d) {\\n        return d.map(function(v, i) {\\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\\n        });\\n      });\\n      var orders = order.call(stack, points, index);\\n      series = d3.permute(series, orders);\\n      points = d3.permute(points, orders);\\n      var offsets = offset.call(stack, points, index);\\n      var m = series[0].length, n, i, j, o;\\n      for (j = 0; j < m; ++j) {\\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\\n        for (i = 1; i < n; ++i) {\\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\\n        }\\n      }\\n      return data;\\n    }\\n    stack.values = function(x) {\\n      if (!arguments.length) return values;\\n      values = x;\\n      return stack;\\n    };\\n    stack.order = function(x) {\\n      if (!arguments.length) return order;\\n      order = typeof x === \\\"function\\\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\\n      return stack;\\n    };\\n    stack.offset = function(x) {\\n      if (!arguments.length) return offset;\\n      offset = typeof x === \\\"function\\\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\\n      return stack;\\n    };\\n    stack.x = function(z) {\\n      if (!arguments.length) return x;\\n      x = z;\\n      return stack;\\n    };\\n    stack.y = function(z) {\\n      if (!arguments.length) return y;\\n      y = z;\\n      return stack;\\n    };\\n    stack.out = function(z) {\\n      if (!arguments.length) return out;\\n      out = z;\\n      return stack;\\n    };\\n    return stack;\\n  };\\n  function d3_layout_stackX(d) {\\n    return d.x;\\n  }\\n  function d3_layout_stackY(d) {\\n    return d.y;\\n  }\\n  function d3_layout_stackOut(d, y0, y) {\\n    d.y0 = y0;\\n    d.y = y;\\n  }\\n  var d3_layout_stackOrders = d3.map({\\n    \\\"inside-out\\\": function(data) {\\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\\n        return max[a] - max[b];\\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\\n      for (i = 0; i < n; ++i) {\\n        j = index[i];\\n        if (top < bottom) {\\n          top += sums[j];\\n          tops.push(j);\\n        } else {\\n          bottom += sums[j];\\n          bottoms.push(j);\\n        }\\n      }\\n      return bottoms.reverse().concat(tops);\\n    },\\n    reverse: function(data) {\\n      return d3.range(data.length).reverse();\\n    },\\n    \\\"default\\\": d3_layout_stackOrderDefault\\n  });\\n  var d3_layout_stackOffsets = d3.map({\\n    silhouette: function(data) {\\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\\n      for (j = 0; j < m; ++j) {\\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\\n        if (o > max) max = o;\\n        sums.push(o);\\n      }\\n      for (j = 0; j < m; ++j) {\\n        y0[j] = (max - sums[j]) / 2;\\n      }\\n      return y0;\\n    },\\n    wiggle: function(data) {\\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\\n      y0[0] = o = o0 = 0;\\n      for (j = 1; j < m; ++j) {\\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\\n          }\\n          s2 += s3 * data[i][j][1];\\n        }\\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\\n        if (o < o0) o0 = o;\\n      }\\n      for (j = 0; j < m; ++j) y0[j] -= o0;\\n      return y0;\\n    },\\n    expand: function(data) {\\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\\n      for (j = 0; j < m; ++j) {\\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\\n      }\\n      for (j = 0; j < m; ++j) y0[j] = 0;\\n      return y0;\\n    },\\n    zero: d3_layout_stackOffsetZero\\n  });\\n  function d3_layout_stackOrderDefault(data) {\\n    return d3.range(data.length);\\n  }\\n  function d3_layout_stackOffsetZero(data) {\\n    var j = -1, m = data[0].length, y0 = [];\\n    while (++j < m) y0[j] = 0;\\n    return y0;\\n  }\\n  function d3_layout_stackMaxIndex(array) {\\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\\n    for (;i < n; ++i) {\\n      if ((k = array[i][1]) > v) {\\n        j = i;\\n        v = k;\\n      }\\n    }\\n    return j;\\n  }\\n  function d3_layout_stackReduceSum(d) {\\n    return d.reduce(d3_layout_stackSum, 0);\\n  }\\n  function d3_layout_stackSum(p, d) {\\n    return p + d[1];\\n  }\\n  d3.layout.histogram = function() {\\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\\n    function histogram(data, i) {\\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\\n      while (++i < m) {\\n        bin = bins[i] = [];\\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\\n        bin.y = 0;\\n      }\\n      if (m > 0) {\\n        i = -1;\\n        while (++i < n) {\\n          x = values[i];\\n          if (x >= range[0] && x <= range[1]) {\\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\\n            bin.y += k;\\n            bin.push(data[i]);\\n          }\\n        }\\n      }\\n      return bins;\\n    }\\n    histogram.value = function(x) {\\n      if (!arguments.length) return valuer;\\n      valuer = x;\\n      return histogram;\\n    };\\n    histogram.range = function(x) {\\n      if (!arguments.length) return ranger;\\n      ranger = d3_functor(x);\\n      return histogram;\\n    };\\n    histogram.bins = function(x) {\\n      if (!arguments.length) return binner;\\n      binner = typeof x === \\\"number\\\" ? function(range) {\\n        return d3_layout_histogramBinFixed(range, x);\\n      } : d3_functor(x);\\n      return histogram;\\n    };\\n    histogram.frequency = function(x) {\\n      if (!arguments.length) return frequency;\\n      frequency = !!x;\\n      return histogram;\\n    };\\n    return histogram;\\n  };\\n  function d3_layout_histogramBinSturges(range, values) {\\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\\n  }\\n  function d3_layout_histogramBinFixed(range, n) {\\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\\n    while (++x <= n) f[x] = m * x + b;\\n    return f;\\n  }\\n  function d3_layout_histogramRange(values) {\\n    return [ d3.min(values), d3.max(values) ];\\n  }\\n  d3.layout.pack = function() {\\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\\n    function pack(d, i) {\\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \\\"function\\\" ? radius : function() {\\n        return radius;\\n      };\\n      root.x = root.y = 0;\\n      d3_layout_hierarchyVisitAfter(root, function(d) {\\n        d.r = +r(d.value);\\n      });\\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\\n      if (padding) {\\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\\n        d3_layout_hierarchyVisitAfter(root, function(d) {\\n          d.r += dr;\\n        });\\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\\n        d3_layout_hierarchyVisitAfter(root, function(d) {\\n          d.r -= dr;\\n        });\\n      }\\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\\n      return nodes;\\n    }\\n    pack.size = function(_) {\\n      if (!arguments.length) return size;\\n      size = _;\\n      return pack;\\n    };\\n    pack.radius = function(_) {\\n      if (!arguments.length) return radius;\\n      radius = _ == null || typeof _ === \\\"function\\\" ? _ : +_;\\n      return pack;\\n    };\\n    pack.padding = function(_) {\\n      if (!arguments.length) return padding;\\n      padding = +_;\\n      return pack;\\n    };\\n    return d3_layout_hierarchyRebind(pack, hierarchy);\\n  };\\n  function d3_layout_packSort(a, b) {\\n    return a.value - b.value;\\n  }\\n  function d3_layout_packInsert(a, b) {\\n    var c = a._pack_next;\\n    a._pack_next = b;\\n    b._pack_prev = a;\\n    b._pack_next = c;\\n    c._pack_prev = b;\\n  }\\n  function d3_layout_packSplice(a, b) {\\n    a._pack_next = b;\\n    b._pack_prev = a;\\n  }\\n  function d3_layout_packIntersects(a, b) {\\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\\n    return .999 * dr * dr > dx * dx + dy * dy;\\n  }\\n  function d3_layout_packSiblings(node) {\\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\\n    function bound(node) {\\n      xMin = Math.min(node.x - node.r, xMin);\\n      xMax = Math.max(node.x + node.r, xMax);\\n      yMin = Math.min(node.y - node.r, yMin);\\n      yMax = Math.max(node.y + node.r, yMax);\\n    }\\n    nodes.forEach(d3_layout_packLink);\\n    a = nodes[0];\\n    a.x = -a.r;\\n    a.y = 0;\\n    bound(a);\\n    if (n > 1) {\\n      b = nodes[1];\\n      b.x = b.r;\\n      b.y = 0;\\n      bound(b);\\n      if (n > 2) {\\n        c = nodes[2];\\n        d3_layout_packPlace(a, b, c);\\n        bound(c);\\n        d3_layout_packInsert(a, c);\\n        a._pack_prev = c;\\n        d3_layout_packInsert(c, b);\\n        b = a._pack_next;\\n        for (i = 3; i < n; i++) {\\n          d3_layout_packPlace(a, b, c = nodes[i]);\\n          var isect = 0, s1 = 1, s2 = 1;\\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\\n            if (d3_layout_packIntersects(j, c)) {\\n              isect = 1;\\n              break;\\n            }\\n          }\\n          if (isect == 1) {\\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\\n              if (d3_layout_packIntersects(k, c)) {\\n                break;\\n              }\\n            }\\n          }\\n          if (isect) {\\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\\n            i--;\\n          } else {\\n            d3_layout_packInsert(a, c);\\n            b = c;\\n            bound(c);\\n          }\\n        }\\n      }\\n    }\\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\\n    for (i = 0; i < n; i++) {\\n      c = nodes[i];\\n      c.x -= cx;\\n      c.y -= cy;\\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\\n    }\\n    node.r = cr;\\n    nodes.forEach(d3_layout_packUnlink);\\n  }\\n  function d3_layout_packLink(node) {\\n    node._pack_next = node._pack_prev = node;\\n  }\\n  function d3_layout_packUnlink(node) {\\n    delete node._pack_next;\\n    delete node._pack_prev;\\n  }\\n  function d3_layout_packTransform(node, x, y, k) {\\n    var children = node.children;\\n    node.x = x += k * node.x;\\n    node.y = y += k * node.y;\\n    node.r *= k;\\n    if (children) {\\n      var i = -1, n = children.length;\\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\\n    }\\n  }\\n  function d3_layout_packPlace(a, b, c) {\\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\\n    if (db && (dx || dy)) {\\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\\n      da *= da;\\n      db *= db;\\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\\n      c.x = a.x + x * dx + y * dy;\\n      c.y = a.y + x * dy - y * dx;\\n    } else {\\n      c.x = a.x + db;\\n      c.y = a.y;\\n    }\\n  }\\n  d3.layout.tree = function() {\\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\\n    function tree(d, i) {\\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\\n        var left = root0, right = root0, bottom = root0;\\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\\n          if (node.x < left.x) left = node;\\n          if (node.x > right.x) right = node;\\n          if (node.depth > bottom.depth) bottom = node;\\n        });\\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\\n          node.x = (node.x + tx) * kx;\\n          node.y = node.depth * ky;\\n        });\\n      }\\n      return nodes;\\n    }\\n    function wrapTree(root0) {\\n      var root1 = {\\n        A: null,\\n        children: [ root0 ]\\n      }, queue = [ root1 ], node1;\\n      while ((node1 = queue.pop()) != null) {\\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\\n          queue.push((children[i] = child = {\\n            _: children[i],\\n            parent: node1,\\n            children: (child = children[i].children) && child.slice() || [],\\n            A: null,\\n            a: null,\\n            z: 0,\\n            m: 0,\\n            c: 0,\\n            s: 0,\\n            t: null,\\n            i: i\\n          }).a = child);\\n        }\\n      }\\n      return root1.children[0];\\n    }\\n    function firstWalk(v) {\\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\\n      if (children.length) {\\n        d3_layout_treeShift(v);\\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\\n        if (w) {\\n          v.z = w.z + separation(v._, w._);\\n          v.m = v.z - midpoint;\\n        } else {\\n          v.z = midpoint;\\n        }\\n      } else if (w) {\\n        v.z = w.z + separation(v._, w._);\\n      }\\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\\n    }\\n    function secondWalk(v) {\\n      v._.x = v.z + v.parent.m;\\n      v.m += v.parent.m;\\n    }\\n    function apportion(v, w, ancestor) {\\n      if (w) {\\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\\n          vom = d3_layout_treeLeft(vom);\\n          vop = d3_layout_treeRight(vop);\\n          vop.a = v;\\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\\n          if (shift > 0) {\\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\\n            sip += shift;\\n            sop += shift;\\n          }\\n          sim += vim.m;\\n          sip += vip.m;\\n          som += vom.m;\\n          sop += vop.m;\\n        }\\n        if (vim && !d3_layout_treeRight(vop)) {\\n          vop.t = vim;\\n          vop.m += sim - sop;\\n        }\\n        if (vip && !d3_layout_treeLeft(vom)) {\\n          vom.t = vip;\\n          vom.m += sip - som;\\n          ancestor = v;\\n        }\\n      }\\n      return ancestor;\\n    }\\n    function sizeNode(node) {\\n      node.x *= size[0];\\n      node.y = node.depth * size[1];\\n    }\\n    tree.separation = function(x) {\\n      if (!arguments.length) return separation;\\n      separation = x;\\n      return tree;\\n    };\\n    tree.size = function(x) {\\n      if (!arguments.length) return nodeSize ? null : size;\\n      nodeSize = (size = x) == null ? sizeNode : null;\\n      return tree;\\n    };\\n    tree.nodeSize = function(x) {\\n      if (!arguments.length) return nodeSize ? size : null;\\n      nodeSize = (size = x) == null ? null : sizeNode;\\n      return tree;\\n    };\\n    return d3_layout_hierarchyRebind(tree, hierarchy);\\n  };\\n  function d3_layout_treeSeparation(a, b) {\\n    return a.parent == b.parent ? 1 : 2;\\n  }\\n  function d3_layout_treeLeft(v) {\\n    var children = v.children;\\n    return children.length ? children[0] : v.t;\\n  }\\n  function d3_layout_treeRight(v) {\\n    var children = v.children, n;\\n    return (n = children.length) ? children[n - 1] : v.t;\\n  }\\n  function d3_layout_treeMove(wm, wp, shift) {\\n    var change = shift / (wp.i - wm.i);\\n    wp.c -= change;\\n    wp.s += shift;\\n    wm.c += change;\\n    wp.z += shift;\\n    wp.m += shift;\\n  }\\n  function d3_layout_treeShift(v) {\\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\\n    while (--i >= 0) {\\n      w = children[i];\\n      w.z += shift;\\n      w.m += shift;\\n      shift += w.s + (change += w.c);\\n    }\\n  }\\n  function d3_layout_treeAncestor(vim, v, ancestor) {\\n    return vim.a.parent === v.parent ? vim.a : ancestor;\\n  }\\n  d3.layout.cluster = function() {\\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\\n    function cluster(d, i) {\\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\\n      d3_layout_hierarchyVisitAfter(root, function(node) {\\n        var children = node.children;\\n        if (children && children.length) {\\n          node.x = d3_layout_clusterX(children);\\n          node.y = d3_layout_clusterY(children);\\n        } else {\\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\\n          node.y = 0;\\n          previousNode = node;\\n        }\\n      });\\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\\n        node.x = (node.x - root.x) * size[0];\\n        node.y = (root.y - node.y) * size[1];\\n      } : function(node) {\\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\\n      });\\n      return nodes;\\n    }\\n    cluster.separation = function(x) {\\n      if (!arguments.length) return separation;\\n      separation = x;\\n      return cluster;\\n    };\\n    cluster.size = function(x) {\\n      if (!arguments.length) return nodeSize ? null : size;\\n      nodeSize = (size = x) == null;\\n      return cluster;\\n    };\\n    cluster.nodeSize = function(x) {\\n      if (!arguments.length) return nodeSize ? size : null;\\n      nodeSize = (size = x) != null;\\n      return cluster;\\n    };\\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\\n  };\\n  function d3_layout_clusterY(children) {\\n    return 1 + d3.max(children, function(child) {\\n      return child.y;\\n    });\\n  }\\n  function d3_layout_clusterX(children) {\\n    return children.reduce(function(x, child) {\\n      return x + child.x;\\n    }, 0) / children.length;\\n  }\\n  function d3_layout_clusterLeft(node) {\\n    var children = node.children;\\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\\n  }\\n  function d3_layout_clusterRight(node) {\\n    var children = node.children, n;\\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\\n  }\\n  d3.layout.treemap = function() {\\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \\\"squarify\\\", ratio = .5 * (1 + Math.sqrt(5));\\n    function scale(children, k) {\\n      var i = -1, n = children.length, child, area;\\n      while (++i < n) {\\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\\n      }\\n    }\\n    function squarify(node) {\\n      var children = node.children;\\n      if (children && children.length) {\\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \\\"slice\\\" ? rect.dx : mode === \\\"dice\\\" ? rect.dy : mode === \\\"slice-dice\\\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\\n        scale(remaining, rect.dx * rect.dy / node.value);\\n        row.area = 0;\\n        while ((n = remaining.length) > 0) {\\n          row.push(child = remaining[n - 1]);\\n          row.area += child.area;\\n          if (mode !== \\\"squarify\\\" || (score = worst(row, u)) <= best) {\\n            remaining.pop();\\n            best = score;\\n          } else {\\n            row.area -= row.pop().area;\\n            position(row, u, rect, false);\\n            u = Math.min(rect.dx, rect.dy);\\n            row.length = row.area = 0;\\n            best = Infinity;\\n          }\\n        }\\n        if (row.length) {\\n          position(row, u, rect, true);\\n          row.length = row.area = 0;\\n        }\\n        children.forEach(squarify);\\n      }\\n    }\\n    function stickify(node) {\\n      var children = node.children;\\n      if (children && children.length) {\\n        var rect = pad(node), remaining = children.slice(), child, row = [];\\n        scale(remaining, rect.dx * rect.dy / node.value);\\n        row.area = 0;\\n        while (child = remaining.pop()) {\\n          row.push(child);\\n          row.area += child.area;\\n          if (child.z != null) {\\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\\n            row.length = row.area = 0;\\n          }\\n        }\\n        children.forEach(stickify);\\n      }\\n    }\\n    function worst(row, u) {\\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\\n      while (++i < n) {\\n        if (!(r = row[i].area)) continue;\\n        if (r < rmin) rmin = r;\\n        if (r > rmax) rmax = r;\\n      }\\n      s *= s;\\n      u *= u;\\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\\n    }\\n    function position(row, u, rect, flush) {\\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\\n      if (u == rect.dx) {\\n        if (flush || v > rect.dy) v = rect.dy;\\n        while (++i < n) {\\n          o = row[i];\\n          o.x = x;\\n          o.y = y;\\n          o.dy = v;\\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\\n        }\\n        o.z = true;\\n        o.dx += rect.x + rect.dx - x;\\n        rect.y += v;\\n        rect.dy -= v;\\n      } else {\\n        if (flush || v > rect.dx) v = rect.dx;\\n        while (++i < n) {\\n          o = row[i];\\n          o.x = x;\\n          o.y = y;\\n          o.dx = v;\\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\\n        }\\n        o.z = false;\\n        o.dy += rect.y + rect.dy - y;\\n        rect.x += v;\\n        rect.dx -= v;\\n      }\\n    }\\n    function treemap(d) {\\n      var nodes = stickies || hierarchy(d), root = nodes[0];\\n      root.x = root.y = 0;\\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\\n      if (stickies) hierarchy.revalue(root);\\n      scale([ root ], root.dx * root.dy / root.value);\\n      (stickies ? stickify : squarify)(root);\\n      if (sticky) stickies = nodes;\\n      return nodes;\\n    }\\n    treemap.size = function(x) {\\n      if (!arguments.length) return size;\\n      size = x;\\n      return treemap;\\n    };\\n    treemap.padding = function(x) {\\n      if (!arguments.length) return padding;\\n      function padFunction(node) {\\n        var p = x.call(treemap, node, node.depth);\\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \\\"number\\\" ? [ p, p, p, p ] : p);\\n      }\\n      function padConstant(node) {\\n        return d3_layout_treemapPad(node, x);\\n      }\\n      var type;\\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \\\"function\\\" ? padFunction : type === \\\"number\\\" ? (x = [ x, x, x, x ], \\n      padConstant) : padConstant;\\n      return treemap;\\n    };\\n    treemap.round = function(x) {\\n      if (!arguments.length) return round != Number;\\n      round = x ? Math.round : Number;\\n      return treemap;\\n    };\\n    treemap.sticky = function(x) {\\n      if (!arguments.length) return sticky;\\n      sticky = x;\\n      stickies = null;\\n      return treemap;\\n    };\\n    treemap.ratio = function(x) {\\n      if (!arguments.length) return ratio;\\n      ratio = x;\\n      return treemap;\\n    };\\n    treemap.mode = function(x) {\\n      if (!arguments.length) return mode;\\n      mode = x + \\\"\\\";\\n      return treemap;\\n    };\\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\\n  };\\n  function d3_layout_treemapPadNull(node) {\\n    return {\\n      x: node.x,\\n      y: node.y,\\n      dx: node.dx,\\n      dy: node.dy\\n    };\\n  }\\n  function d3_layout_treemapPad(node, padding) {\\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\\n    if (dx < 0) {\\n      x += dx / 2;\\n      dx = 0;\\n    }\\n    if (dy < 0) {\\n      y += dy / 2;\\n      dy = 0;\\n    }\\n    return {\\n      x: x,\\n      y: y,\\n      dx: dx,\\n      dy: dy\\n    };\\n  }\\n  d3.random = {\\n    normal: function(µ, σ) {\\n      var n = arguments.length;\\n      if (n < 2) σ = 1;\\n      if (n < 1) µ = 0;\\n      return function() {\\n        var x, y, r;\\n        do {\\n          x = Math.random() * 2 - 1;\\n          y = Math.random() * 2 - 1;\\n          r = x * x + y * y;\\n        } while (!r || r > 1);\\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\\n      };\\n    },\\n    logNormal: function() {\\n      var random = d3.random.normal.apply(d3, arguments);\\n      return function() {\\n        return Math.exp(random());\\n      };\\n    },\\n    bates: function(m) {\\n      var random = d3.random.irwinHall(m);\\n      return function() {\\n        return random() / m;\\n      };\\n    },\\n    irwinHall: function(m) {\\n      return function() {\\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\\n        return s;\\n      };\\n    }\\n  };\\n  d3.scale = {};\\n  function d3_scaleExtent(domain) {\\n    var start = domain[0], stop = domain[domain.length - 1];\\n    return start < stop ? [ start, stop ] : [ stop, start ];\\n  }\\n  function d3_scaleRange(scale) {\\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\\n  }\\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\\n    return function(x) {\\n      return i(u(x));\\n    };\\n  }\\n  function d3_scale_nice(domain, nice) {\\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\\n    if (x1 < x0) {\\n      dx = i0, i0 = i1, i1 = dx;\\n      dx = x0, x0 = x1, x1 = dx;\\n    }\\n    domain[i0] = nice.floor(x0);\\n    domain[i1] = nice.ceil(x1);\\n    return domain;\\n  }\\n  function d3_scale_niceStep(step) {\\n    return step ? {\\n      floor: function(x) {\\n        return Math.floor(x / step) * step;\\n      },\\n      ceil: function(x) {\\n        return Math.ceil(x / step) * step;\\n      }\\n    } : d3_scale_niceIdentity;\\n  }\\n  var d3_scale_niceIdentity = {\\n    floor: d3_identity,\\n    ceil: d3_identity\\n  };\\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\\n    if (domain[k] < domain[0]) {\\n      domain = domain.slice().reverse();\\n      range = range.slice().reverse();\\n    }\\n    while (++j <= k) {\\n      u.push(uninterpolate(domain[j - 1], domain[j]));\\n      i.push(interpolate(range[j - 1], range[j]));\\n    }\\n    return function(x) {\\n      var j = d3.bisect(domain, x, 1, k) - 1;\\n      return i[j](u[j](x));\\n    };\\n  }\\n  d3.scale.linear = function() {\\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\\n  };\\n  function d3_scale_linear(domain, range, interpolate, clamp) {\\n    var output, input;\\n    function rescale() {\\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\\n      output = linear(domain, range, uninterpolate, interpolate);\\n      input = linear(range, domain, uninterpolate, d3_interpolate);\\n      return scale;\\n    }\\n    function scale(x) {\\n      return output(x);\\n    }\\n    scale.invert = function(y) {\\n      return input(y);\\n    };\\n    scale.domain = function(x) {\\n      if (!arguments.length) return domain;\\n      domain = x.map(Number);\\n      return rescale();\\n    };\\n    scale.range = function(x) {\\n      if (!arguments.length) return range;\\n      range = x;\\n      return rescale();\\n    };\\n    scale.rangeRound = function(x) {\\n      return scale.range(x).interpolate(d3_interpolateRound);\\n    };\\n    scale.clamp = function(x) {\\n      if (!arguments.length) return clamp;\\n      clamp = x;\\n      return rescale();\\n    };\\n    scale.interpolate = function(x) {\\n      if (!arguments.length) return interpolate;\\n      interpolate = x;\\n      return rescale();\\n    };\\n    scale.ticks = function(m) {\\n      return d3_scale_linearTicks(domain, m);\\n    };\\n    scale.tickFormat = function(m, format) {\\n      return d3_scale_linearTickFormat(domain, m, format);\\n    };\\n    scale.nice = function(m) {\\n      d3_scale_linearNice(domain, m);\\n      return rescale();\\n    };\\n    scale.copy = function() {\\n      return d3_scale_linear(domain, range, interpolate, clamp);\\n    };\\n    return rescale();\\n  }\\n  function d3_scale_linearRebind(scale, linear) {\\n    return d3.rebind(scale, linear, \\\"range\\\", \\\"rangeRound\\\", \\\"interpolate\\\", \\\"clamp\\\");\\n  }\\n  function d3_scale_linearNice(domain, m) {\\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\\n    return domain;\\n  }\\n  function d3_scale_linearTickRange(domain, m) {\\n    if (m == null) m = 10;\\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\\n    extent[0] = Math.ceil(extent[0] / step) * step;\\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\\n    extent[2] = step;\\n    return extent;\\n  }\\n  function d3_scale_linearTicks(domain, m) {\\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\\n  }\\n  function d3_scale_linearTickFormat(domain, m, format) {\\n    var range = d3_scale_linearTickRange(domain, m);\\n    if (format) {\\n      var match = d3_format_re.exec(format);\\n      match.shift();\\n      if (match[8] === \\\"s\\\") {\\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\\n        if (!match[7]) match[7] = \\\".\\\" + d3_scale_linearPrecision(prefix.scale(range[2]));\\n        match[8] = \\\"f\\\";\\n        format = d3.format(match.join(\\\"\\\"));\\n        return function(d) {\\n          return format(prefix.scale(d)) + prefix.symbol;\\n        };\\n      }\\n      if (!match[7]) match[7] = \\\".\\\" + d3_scale_linearFormatPrecision(match[8], range);\\n      format = match.join(\\\"\\\");\\n    } else {\\n      format = \\\",.\\\" + d3_scale_linearPrecision(range[2]) + \\\"f\\\";\\n    }\\n    return d3.format(format);\\n  }\\n  var d3_scale_linearFormatSignificant = {\\n    s: 1,\\n    g: 1,\\n    p: 1,\\n    r: 1,\\n    e: 1\\n  };\\n  function d3_scale_linearPrecision(value) {\\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\\n  }\\n  function d3_scale_linearFormatPrecision(type, range) {\\n    var p = d3_scale_linearPrecision(range[2]);\\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \\\"e\\\") : p - (type === \\\"%\\\") * 2;\\n  }\\n  d3.scale.log = function() {\\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\\n  };\\n  function d3_scale_log(linear, base, positive, domain) {\\n    function log(x) {\\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\\n    }\\n    function pow(x) {\\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\\n    }\\n    function scale(x) {\\n      return linear(log(x));\\n    }\\n    scale.invert = function(x) {\\n      return pow(linear.invert(x));\\n    };\\n    scale.domain = function(x) {\\n      if (!arguments.length) return domain;\\n      positive = x[0] >= 0;\\n      linear.domain((domain = x.map(Number)).map(log));\\n      return scale;\\n    };\\n    scale.base = function(_) {\\n      if (!arguments.length) return base;\\n      base = +_;\\n      linear.domain(domain.map(log));\\n      return scale;\\n    };\\n    scale.nice = function() {\\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\\n      linear.domain(niced);\\n      domain = niced.map(pow);\\n      return scale;\\n    };\\n    scale.ticks = function() {\\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\\n      if (isFinite(j - i)) {\\n        if (positive) {\\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\\n          ticks.push(pow(i));\\n        } else {\\n          ticks.push(pow(i));\\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\\n        }\\n        for (i = 0; ticks[i] < u; i++) {}\\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\\n        ticks = ticks.slice(i, j);\\n      }\\n      return ticks;\\n    };\\n    scale.tickFormat = function(n, format) {\\n      if (!arguments.length) return d3_scale_logFormat;\\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \\\"function\\\") format = d3.format(format);\\n      var k = Math.max(1, base * n / scale.ticks().length);\\n      return function(d) {\\n        var i = d / pow(Math.round(log(d)));\\n        if (i * base < base - .5) i *= base;\\n        return i <= k ? format(d) : \\\"\\\";\\n      };\\n    };\\n    scale.copy = function() {\\n      return d3_scale_log(linear.copy(), base, positive, domain);\\n    };\\n    return d3_scale_linearRebind(scale, linear);\\n  }\\n  var d3_scale_logFormat = d3.format(\\\".0e\\\"), d3_scale_logNiceNegative = {\\n    floor: function(x) {\\n      return -Math.ceil(-x);\\n    },\\n    ceil: function(x) {\\n      return -Math.floor(-x);\\n    }\\n  };\\n  d3.scale.pow = function() {\\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\\n  };\\n  function d3_scale_pow(linear, exponent, domain) {\\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\\n    function scale(x) {\\n      return linear(powp(x));\\n    }\\n    scale.invert = function(x) {\\n      return powb(linear.invert(x));\\n    };\\n    scale.domain = function(x) {\\n      if (!arguments.length) return domain;\\n      linear.domain((domain = x.map(Number)).map(powp));\\n      return scale;\\n    };\\n    scale.ticks = function(m) {\\n      return d3_scale_linearTicks(domain, m);\\n    };\\n    scale.tickFormat = function(m, format) {\\n      return d3_scale_linearTickFormat(domain, m, format);\\n    };\\n    scale.nice = function(m) {\\n      return scale.domain(d3_scale_linearNice(domain, m));\\n    };\\n    scale.exponent = function(x) {\\n      if (!arguments.length) return exponent;\\n      powp = d3_scale_powPow(exponent = x);\\n      powb = d3_scale_powPow(1 / exponent);\\n      linear.domain(domain.map(powp));\\n      return scale;\\n    };\\n    scale.copy = function() {\\n      return d3_scale_pow(linear.copy(), exponent, domain);\\n    };\\n    return d3_scale_linearRebind(scale, linear);\\n  }\\n  function d3_scale_powPow(e) {\\n    return function(x) {\\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\\n    };\\n  }\\n  d3.scale.sqrt = function() {\\n    return d3.scale.pow().exponent(.5);\\n  };\\n  d3.scale.ordinal = function() {\\n    return d3_scale_ordinal([], {\\n      t: \\\"range\\\",\\n      a: [ [] ]\\n    });\\n  };\\n  function d3_scale_ordinal(domain, ranger) {\\n    var index, range, rangeBand;\\n    function scale(x) {\\n      return range[((index.get(x) || (ranger.t === \\\"range\\\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\\n    }\\n    function steps(start, step) {\\n      return d3.range(domain.length).map(function(i) {\\n        return start + step * i;\\n      });\\n    }\\n    scale.domain = function(x) {\\n      if (!arguments.length) return domain;\\n      domain = [];\\n      index = new d3_Map();\\n      var i = -1, n = x.length, xi;\\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\\n      return scale[ranger.t].apply(scale, ranger.a);\\n    };\\n    scale.range = function(x) {\\n      if (!arguments.length) return range;\\n      range = x;\\n      rangeBand = 0;\\n      ranger = {\\n        t: \\\"range\\\",\\n        a: arguments\\n      };\\n      return scale;\\n    };\\n    scale.rangePoints = function(x, padding) {\\n      if (arguments.length < 2) padding = 0;\\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \\n      0) : (stop - start) / (domain.length - 1 + padding);\\n      range = steps(start + step * padding / 2, step);\\n      rangeBand = 0;\\n      ranger = {\\n        t: \\\"rangePoints\\\",\\n        a: arguments\\n      };\\n      return scale;\\n    };\\n    scale.rangeRoundPoints = function(x, padding) {\\n      if (arguments.length < 2) padding = 0;\\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \\n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\\n      rangeBand = 0;\\n      ranger = {\\n        t: \\\"rangeRoundPoints\\\",\\n        a: arguments\\n      };\\n      return scale;\\n    };\\n    scale.rangeBands = function(x, padding, outerPadding) {\\n      if (arguments.length < 2) padding = 0;\\n      if (arguments.length < 3) outerPadding = padding;\\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\\n      range = steps(start + step * outerPadding, step);\\n      if (reverse) range.reverse();\\n      rangeBand = step * (1 - padding);\\n      ranger = {\\n        t: \\\"rangeBands\\\",\\n        a: arguments\\n      };\\n      return scale;\\n    };\\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\\n      if (arguments.length < 2) padding = 0;\\n      if (arguments.length < 3) outerPadding = padding;\\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\\n      if (reverse) range.reverse();\\n      rangeBand = Math.round(step * (1 - padding));\\n      ranger = {\\n        t: \\\"rangeRoundBands\\\",\\n        a: arguments\\n      };\\n      return scale;\\n    };\\n    scale.rangeBand = function() {\\n      return rangeBand;\\n    };\\n    scale.rangeExtent = function() {\\n      return d3_scaleExtent(ranger.a[0]);\\n    };\\n    scale.copy = function() {\\n      return d3_scale_ordinal(domain, ranger);\\n    };\\n    return scale.domain(domain);\\n  }\\n  d3.scale.category10 = function() {\\n    return d3.scale.ordinal().range(d3_category10);\\n  };\\n  d3.scale.category20 = function() {\\n    return d3.scale.ordinal().range(d3_category20);\\n  };\\n  d3.scale.category20b = function() {\\n    return d3.scale.ordinal().range(d3_category20b);\\n  };\\n  d3.scale.category20c = function() {\\n    return d3.scale.ordinal().range(d3_category20c);\\n  };\\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\\n  d3.scale.quantile = function() {\\n    return d3_scale_quantile([], []);\\n  };\\n  function d3_scale_quantile(domain, range) {\\n    var thresholds;\\n    function rescale() {\\n      var k = 0, q = range.length;\\n      thresholds = [];\\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\\n      return scale;\\n    }\\n    function scale(x) {\\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\\n    }\\n    scale.domain = function(x) {\\n      if (!arguments.length) return domain;\\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\\n      return rescale();\\n    };\\n    scale.range = function(x) {\\n      if (!arguments.length) return range;\\n      range = x;\\n      return rescale();\\n    };\\n    scale.quantiles = function() {\\n      return thresholds;\\n    };\\n    scale.invertExtent = function(y) {\\n      y = range.indexOf(y);\\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\\n    };\\n    scale.copy = function() {\\n      return d3_scale_quantile(domain, range);\\n    };\\n    return rescale();\\n  }\\n  d3.scale.quantize = function() {\\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\\n  };\\n  function d3_scale_quantize(x0, x1, range) {\\n    var kx, i;\\n    function scale(x) {\\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\\n    }\\n    function rescale() {\\n      kx = range.length / (x1 - x0);\\n      i = range.length - 1;\\n      return scale;\\n    }\\n    scale.domain = function(x) {\\n      if (!arguments.length) return [ x0, x1 ];\\n      x0 = +x[0];\\n      x1 = +x[x.length - 1];\\n      return rescale();\\n    };\\n    scale.range = function(x) {\\n      if (!arguments.length) return range;\\n      range = x;\\n      return rescale();\\n    };\\n    scale.invertExtent = function(y) {\\n      y = range.indexOf(y);\\n      y = y < 0 ? NaN : y / kx + x0;\\n      return [ y, y + 1 / kx ];\\n    };\\n    scale.copy = function() {\\n      return d3_scale_quantize(x0, x1, range);\\n    };\\n    return rescale();\\n  }\\n  d3.scale.threshold = function() {\\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\\n  };\\n  function d3_scale_threshold(domain, range) {\\n    function scale(x) {\\n      if (x <= x) return range[d3.bisect(domain, x)];\\n    }\\n    scale.domain = function(_) {\\n      if (!arguments.length) return domain;\\n      domain = _;\\n      return scale;\\n    };\\n    scale.range = function(_) {\\n      if (!arguments.length) return range;\\n      range = _;\\n      return scale;\\n    };\\n    scale.invertExtent = function(y) {\\n      y = range.indexOf(y);\\n      return [ domain[y - 1], domain[y] ];\\n    };\\n    scale.copy = function() {\\n      return d3_scale_threshold(domain, range);\\n    };\\n    return scale;\\n  }\\n  d3.scale.identity = function() {\\n    return d3_scale_identity([ 0, 1 ]);\\n  };\\n  function d3_scale_identity(domain) {\\n    function identity(x) {\\n      return +x;\\n    }\\n    identity.invert = identity;\\n    identity.domain = identity.range = function(x) {\\n      if (!arguments.length) return domain;\\n      domain = x.map(identity);\\n      return identity;\\n    };\\n    identity.ticks = function(m) {\\n      return d3_scale_linearTicks(domain, m);\\n    };\\n    identity.tickFormat = function(m, format) {\\n      return d3_scale_linearTickFormat(domain, m, format);\\n    };\\n    identity.copy = function() {\\n      return d3_scale_identity(domain);\\n    };\\n    return identity;\\n  }\\n  d3.svg = {};\\n  function d3_zero() {\\n    return 0;\\n  }\\n  d3.svg.arc = function() {\\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\\n    function arc() {\\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \\\"\\\") + \\\"Z\\\";\\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\\n        if (!cw) p1 *= -1;\\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\\n      }\\n      if (r1) {\\n        x0 = r1 * Math.cos(a0 + p1);\\n        y0 = r1 * Math.sin(a0 + p1);\\n        x1 = r1 * Math.cos(a1 - p1);\\n        y1 = r1 * Math.sin(a1 - p1);\\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\\n          var h1 = (a0 + a1) / 2;\\n          x0 = r1 * Math.cos(h1);\\n          y0 = r1 * Math.sin(h1);\\n          x1 = y1 = null;\\n        }\\n      } else {\\n        x0 = y0 = 0;\\n      }\\n      if (r0) {\\n        x2 = r0 * Math.cos(a1 - p0);\\n        y2 = r0 * Math.sin(a1 - p0);\\n        x3 = r0 * Math.cos(a0 + p0);\\n        y3 = r0 * Math.sin(a0 + p0);\\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\\n          var h0 = (a0 + a1) / 2;\\n          x2 = r0 * Math.cos(h0);\\n          y2 = r0 * Math.sin(h0);\\n          x3 = y3 = null;\\n        }\\n      } else {\\n        x2 = y2 = 0;\\n      }\\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\\n        cr = r0 < r1 ^ cw ? 0 : 1;\\n        var rc1 = rc, rc0 = rc;\\n        if (da < π) {\\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\\n        }\\n        if (x1 != null) {\\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\\n          if (rc === rc1) {\\n            path.push(\\\"M\\\", t30[0], \\\"A\\\", rc1, \\\",\\\", rc1, \\\" 0 0,\\\", cr, \\\" \\\", t30[1], \\\"A\\\", r1, \\\",\\\", r1, \\\" 0 \\\", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \\\",\\\", cw, \\\" \\\", t12[1], \\\"A\\\", rc1, \\\",\\\", rc1, \\\" 0 0,\\\", cr, \\\" \\\", t12[0]);\\n          } else {\\n            path.push(\\\"M\\\", t30[0], \\\"A\\\", rc1, \\\",\\\", rc1, \\\" 0 1,\\\", cr, \\\" \\\", t12[0]);\\n          }\\n        } else {\\n          path.push(\\\"M\\\", x0, \\\",\\\", y0);\\n        }\\n        if (x3 != null) {\\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\\n          if (rc === rc0) {\\n            path.push(\\\"L\\\", t21[0], \\\"A\\\", rc0, \\\",\\\", rc0, \\\" 0 0,\\\", cr, \\\" \\\", t21[1], \\\"A\\\", r0, \\\",\\\", r0, \\\" 0 \\\", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \\\",\\\", 1 - cw, \\\" \\\", t03[1], \\\"A\\\", rc0, \\\",\\\", rc0, \\\" 0 0,\\\", cr, \\\" \\\", t03[0]);\\n          } else {\\n            path.push(\\\"L\\\", t21[0], \\\"A\\\", rc0, \\\",\\\", rc0, \\\" 0 0,\\\", cr, \\\" \\\", t03[0]);\\n          }\\n        } else {\\n          path.push(\\\"L\\\", x2, \\\",\\\", y2);\\n        }\\n      } else {\\n        path.push(\\\"M\\\", x0, \\\",\\\", y0);\\n        if (x1 != null) path.push(\\\"A\\\", r1, \\\",\\\", r1, \\\" 0 \\\", l1, \\\",\\\", cw, \\\" \\\", x1, \\\",\\\", y1);\\n        path.push(\\\"L\\\", x2, \\\",\\\", y2);\\n        if (x3 != null) path.push(\\\"A\\\", r0, \\\",\\\", r0, \\\" 0 \\\", l0, \\\",\\\", 1 - cw, \\\" \\\", x3, \\\",\\\", y3);\\n      }\\n      path.push(\\\"Z\\\");\\n      return path.join(\\\"\\\");\\n    }\\n    function circleSegment(r1, cw) {\\n      return \\\"M0,\\\" + r1 + \\\"A\\\" + r1 + \\\",\\\" + r1 + \\\" 0 1,\\\" + cw + \\\" 0,\\\" + -r1 + \\\"A\\\" + r1 + \\\",\\\" + r1 + \\\" 0 1,\\\" + cw + \\\" 0,\\\" + r1;\\n    }\\n    arc.innerRadius = function(v) {\\n      if (!arguments.length) return innerRadius;\\n      innerRadius = d3_functor(v);\\n      return arc;\\n    };\\n    arc.outerRadius = function(v) {\\n      if (!arguments.length) return outerRadius;\\n      outerRadius = d3_functor(v);\\n      return arc;\\n    };\\n    arc.cornerRadius = function(v) {\\n      if (!arguments.length) return cornerRadius;\\n      cornerRadius = d3_functor(v);\\n      return arc;\\n    };\\n    arc.padRadius = function(v) {\\n      if (!arguments.length) return padRadius;\\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\\n      return arc;\\n    };\\n    arc.startAngle = function(v) {\\n      if (!arguments.length) return startAngle;\\n      startAngle = d3_functor(v);\\n      return arc;\\n    };\\n    arc.endAngle = function(v) {\\n      if (!arguments.length) return endAngle;\\n      endAngle = d3_functor(v);\\n      return arc;\\n    };\\n    arc.padAngle = function(v) {\\n      if (!arguments.length) return padAngle;\\n      padAngle = d3_functor(v);\\n      return arc;\\n    };\\n    arc.centroid = function() {\\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\\n    };\\n    return arc;\\n  };\\n  var d3_svg_arcAuto = \\\"auto\\\";\\n  function d3_svg_arcInnerRadius(d) {\\n    return d.innerRadius;\\n  }\\n  function d3_svg_arcOuterRadius(d) {\\n    return d.outerRadius;\\n  }\\n  function d3_svg_arcStartAngle(d) {\\n    return d.startAngle;\\n  }\\n  function d3_svg_arcEndAngle(d) {\\n    return d.endAngle;\\n  }\\n  function d3_svg_arcPadAngle(d) {\\n    return d && d.padAngle;\\n  }\\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\\n  }\\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\\n  }\\n  function d3_svg_line(projection) {\\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\\n    function line(data) {\\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\\n      function segment() {\\n        segments.push(\\\"M\\\", interpolate(projection(points), tension));\\n      }\\n      while (++i < n) {\\n        if (defined.call(this, d = data[i], i)) {\\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\\n        } else if (points.length) {\\n          segment();\\n          points = [];\\n        }\\n      }\\n      if (points.length) segment();\\n      return segments.length ? segments.join(\\\"\\\") : null;\\n    }\\n    line.x = function(_) {\\n      if (!arguments.length) return x;\\n      x = _;\\n      return line;\\n    };\\n    line.y = function(_) {\\n      if (!arguments.length) return y;\\n      y = _;\\n      return line;\\n    };\\n    line.defined = function(_) {\\n      if (!arguments.length) return defined;\\n      defined = _;\\n      return line;\\n    };\\n    line.interpolate = function(_) {\\n      if (!arguments.length) return interpolateKey;\\n      if (typeof _ === \\\"function\\\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\\n      return line;\\n    };\\n    line.tension = function(_) {\\n      if (!arguments.length) return tension;\\n      tension = _;\\n      return line;\\n    };\\n    return line;\\n  }\\n  d3.svg.line = function() {\\n    return d3_svg_line(d3_identity);\\n  };\\n  var d3_svg_lineInterpolators = d3.map({\\n    linear: d3_svg_lineLinear,\\n    \\\"linear-closed\\\": d3_svg_lineLinearClosed,\\n    step: d3_svg_lineStep,\\n    \\\"step-before\\\": d3_svg_lineStepBefore,\\n    \\\"step-after\\\": d3_svg_lineStepAfter,\\n    basis: d3_svg_lineBasis,\\n    \\\"basis-open\\\": d3_svg_lineBasisOpen,\\n    \\\"basis-closed\\\": d3_svg_lineBasisClosed,\\n    bundle: d3_svg_lineBundle,\\n    cardinal: d3_svg_lineCardinal,\\n    \\\"cardinal-open\\\": d3_svg_lineCardinalOpen,\\n    \\\"cardinal-closed\\\": d3_svg_lineCardinalClosed,\\n    monotone: d3_svg_lineMonotone\\n  });\\n  d3_svg_lineInterpolators.forEach(function(key, value) {\\n    value.key = key;\\n    value.closed = /-closed$/.test(key);\\n  });\\n  function d3_svg_lineLinear(points) {\\n    return points.length > 1 ? points.join(\\\"L\\\") : points + \\\"Z\\\";\\n  }\\n  function d3_svg_lineLinearClosed(points) {\\n    return points.join(\\\"L\\\") + \\\"Z\\\";\\n  }\\n  function d3_svg_lineStep(points) {\\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \\\",\\\", p[1] ];\\n    while (++i < n) path.push(\\\"H\\\", (p[0] + (p = points[i])[0]) / 2, \\\"V\\\", p[1]);\\n    if (n > 1) path.push(\\\"H\\\", p[0]);\\n    return path.join(\\\"\\\");\\n  }\\n  function d3_svg_lineStepBefore(points) {\\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \\\",\\\", p[1] ];\\n    while (++i < n) path.push(\\\"V\\\", (p = points[i])[1], \\\"H\\\", p[0]);\\n    return path.join(\\\"\\\");\\n  }\\n  function d3_svg_lineStepAfter(points) {\\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \\\",\\\", p[1] ];\\n    while (++i < n) path.push(\\\"H\\\", (p = points[i])[0], \\\"V\\\", p[1]);\\n    return path.join(\\\"\\\");\\n  }\\n  function d3_svg_lineCardinalOpen(points, tension) {\\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\\n  }\\n  function d3_svg_lineCardinalClosed(points, tension) {\\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \\n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\\n  }\\n  function d3_svg_lineCardinal(points, tension) {\\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\\n  }\\n  function d3_svg_lineHermite(points, tangents) {\\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\\n      return d3_svg_lineLinear(points);\\n    }\\n    var quad = points.length != tangents.length, path = \\\"\\\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\\n    if (quad) {\\n      path += \\\"Q\\\" + (p[0] - t0[0] * 2 / 3) + \\\",\\\" + (p[1] - t0[1] * 2 / 3) + \\\",\\\" + p[0] + \\\",\\\" + p[1];\\n      p0 = points[1];\\n      pi = 2;\\n    }\\n    if (tangents.length > 1) {\\n      t = tangents[1];\\n      p = points[pi];\\n      pi++;\\n      path += \\\"C\\\" + (p0[0] + t0[0]) + \\\",\\\" + (p0[1] + t0[1]) + \\\",\\\" + (p[0] - t[0]) + \\\",\\\" + (p[1] - t[1]) + \\\",\\\" + p[0] + \\\",\\\" + p[1];\\n      for (var i = 2; i < tangents.length; i++, pi++) {\\n        p = points[pi];\\n        t = tangents[i];\\n        path += \\\"S\\\" + (p[0] - t[0]) + \\\",\\\" + (p[1] - t[1]) + \\\",\\\" + p[0] + \\\",\\\" + p[1];\\n      }\\n    }\\n    if (quad) {\\n      var lp = points[pi];\\n      path += \\\"Q\\\" + (p[0] + t[0] * 2 / 3) + \\\",\\\" + (p[1] + t[1] * 2 / 3) + \\\",\\\" + lp[0] + \\\",\\\" + lp[1];\\n    }\\n    return path;\\n  }\\n  function d3_svg_lineCardinalTangents(points, tension) {\\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\\n    while (++i < n) {\\n      p0 = p1;\\n      p1 = p2;\\n      p2 = points[i];\\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\\n    }\\n    return tangents;\\n  }\\n  function d3_svg_lineBasis(points) {\\n    if (points.length < 3) return d3_svg_lineLinear(points);\\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \\\",\\\", y0, \\\"L\\\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \\\",\\\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\\n    points.push(points[n - 1]);\\n    while (++i <= n) {\\n      pi = points[i];\\n      px.shift();\\n      px.push(pi[0]);\\n      py.shift();\\n      py.push(pi[1]);\\n      d3_svg_lineBasisBezier(path, px, py);\\n    }\\n    points.pop();\\n    path.push(\\\"L\\\", pi);\\n    return path.join(\\\"\\\");\\n  }\\n  function d3_svg_lineBasisOpen(points) {\\n    if (points.length < 4) return d3_svg_lineLinear(points);\\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\\n    while (++i < 3) {\\n      pi = points[i];\\n      px.push(pi[0]);\\n      py.push(pi[1]);\\n    }\\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \\\",\\\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\\n    --i;\\n    while (++i < n) {\\n      pi = points[i];\\n      px.shift();\\n      px.push(pi[0]);\\n      py.shift();\\n      py.push(pi[1]);\\n      d3_svg_lineBasisBezier(path, px, py);\\n    }\\n    return path.join(\\\"\\\");\\n  }\\n  function d3_svg_lineBasisClosed(points) {\\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\\n    while (++i < 4) {\\n      pi = points[i % n];\\n      px.push(pi[0]);\\n      py.push(pi[1]);\\n    }\\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \\\",\\\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\\n    --i;\\n    while (++i < m) {\\n      pi = points[i % n];\\n      px.shift();\\n      px.push(pi[0]);\\n      py.shift();\\n      py.push(pi[1]);\\n      d3_svg_lineBasisBezier(path, px, py);\\n    }\\n    return path.join(\\\"\\\");\\n  }\\n  function d3_svg_lineBundle(points, tension) {\\n    var n = points.length - 1;\\n    if (n) {\\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\\n      while (++i <= n) {\\n        p = points[i];\\n        t = i / n;\\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\\n      }\\n    }\\n    return d3_svg_lineBasis(points);\\n  }\\n  function d3_svg_lineDot4(a, b) {\\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\\n  }\\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\\n  function d3_svg_lineBasisBezier(path, x, y) {\\n    path.push(\\\"C\\\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \\\",\\\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \\\",\\\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \\\",\\\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \\\",\\\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \\\",\\\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\\n  }\\n  function d3_svg_lineSlope(p0, p1) {\\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\\n  }\\n  function d3_svg_lineFiniteDifferences(points) {\\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\\n    while (++i < j) {\\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\\n    }\\n    m[i] = d;\\n    return m;\\n  }\\n  function d3_svg_lineMonotoneTangents(points) {\\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\\n    while (++i < j) {\\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\\n      if (abs(d) < ε) {\\n        m[i] = m[i + 1] = 0;\\n      } else {\\n        a = m[i] / d;\\n        b = m[i + 1] / d;\\n        s = a * a + b * b;\\n        if (s > 9) {\\n          s = d * 3 / Math.sqrt(s);\\n          m[i] = s * a;\\n          m[i + 1] = s * b;\\n        }\\n      }\\n    }\\n    i = -1;\\n    while (++i <= j) {\\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\\n      tangents.push([ s || 0, m[i] * s || 0 ]);\\n    }\\n    return tangents;\\n  }\\n  function d3_svg_lineMonotone(points) {\\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\\n  }\\n  d3.svg.line.radial = function() {\\n    var line = d3_svg_line(d3_svg_lineRadial);\\n    line.radius = line.x, delete line.x;\\n    line.angle = line.y, delete line.y;\\n    return line;\\n  };\\n  function d3_svg_lineRadial(points) {\\n    var point, i = -1, n = points.length, r, a;\\n    while (++i < n) {\\n      point = points[i];\\n      r = point[0];\\n      a = point[1] - halfπ;\\n      point[0] = r * Math.cos(a);\\n      point[1] = r * Math.sin(a);\\n    }\\n    return points;\\n  }\\n  function d3_svg_area(projection) {\\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \\\"L\\\", tension = .7;\\n    function area(data) {\\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\\n        return x;\\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\\n        return y;\\n      } : d3_functor(y1), x, y;\\n      function segment() {\\n        segments.push(\\\"M\\\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \\\"Z\\\");\\n      }\\n      while (++i < n) {\\n        if (defined.call(this, d = data[i], i)) {\\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\\n        } else if (points0.length) {\\n          segment();\\n          points0 = [];\\n          points1 = [];\\n        }\\n      }\\n      if (points0.length) segment();\\n      return segments.length ? segments.join(\\\"\\\") : null;\\n    }\\n    area.x = function(_) {\\n      if (!arguments.length) return x1;\\n      x0 = x1 = _;\\n      return area;\\n    };\\n    area.x0 = function(_) {\\n      if (!arguments.length) return x0;\\n      x0 = _;\\n      return area;\\n    };\\n    area.x1 = function(_) {\\n      if (!arguments.length) return x1;\\n      x1 = _;\\n      return area;\\n    };\\n    area.y = function(_) {\\n      if (!arguments.length) return y1;\\n      y0 = y1 = _;\\n      return area;\\n    };\\n    area.y0 = function(_) {\\n      if (!arguments.length) return y0;\\n      y0 = _;\\n      return area;\\n    };\\n    area.y1 = function(_) {\\n      if (!arguments.length) return y1;\\n      y1 = _;\\n      return area;\\n    };\\n    area.defined = function(_) {\\n      if (!arguments.length) return defined;\\n      defined = _;\\n      return area;\\n    };\\n    area.interpolate = function(_) {\\n      if (!arguments.length) return interpolateKey;\\n      if (typeof _ === \\\"function\\\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\\n      interpolateReverse = interpolate.reverse || interpolate;\\n      L = interpolate.closed ? \\\"M\\\" : \\\"L\\\";\\n      return area;\\n    };\\n    area.tension = function(_) {\\n      if (!arguments.length) return tension;\\n      tension = _;\\n      return area;\\n    };\\n    return area;\\n  }\\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\\n  d3.svg.area = function() {\\n    return d3_svg_area(d3_identity);\\n  };\\n  d3.svg.area.radial = function() {\\n    var area = d3_svg_area(d3_svg_lineRadial);\\n    area.radius = area.x, delete area.x;\\n    area.innerRadius = area.x0, delete area.x0;\\n    area.outerRadius = area.x1, delete area.x1;\\n    area.angle = area.y, delete area.y;\\n    area.startAngle = area.y0, delete area.y0;\\n    area.endAngle = area.y1, delete area.y1;\\n    return area;\\n  };\\n  d3.svg.chord = function() {\\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\\n    function chord(d, i) {\\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\\n      return \\\"M\\\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \\\"Z\\\";\\n    }\\n    function subgroup(self, f, d, i) {\\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\\n      return {\\n        r: r,\\n        a0: a0,\\n        a1: a1,\\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\\n      };\\n    }\\n    function equals(a, b) {\\n      return a.a0 == b.a0 && a.a1 == b.a1;\\n    }\\n    function arc(r, p, a) {\\n      return \\\"A\\\" + r + \\\",\\\" + r + \\\" 0 \\\" + +(a > π) + \\\",1 \\\" + p;\\n    }\\n    function curve(r0, p0, r1, p1) {\\n      return \\\"Q 0,0 \\\" + p1;\\n    }\\n    chord.radius = function(v) {\\n      if (!arguments.length) return radius;\\n      radius = d3_functor(v);\\n      return chord;\\n    };\\n    chord.source = function(v) {\\n      if (!arguments.length) return source;\\n      source = d3_functor(v);\\n      return chord;\\n    };\\n    chord.target = function(v) {\\n      if (!arguments.length) return target;\\n      target = d3_functor(v);\\n      return chord;\\n    };\\n    chord.startAngle = function(v) {\\n      if (!arguments.length) return startAngle;\\n      startAngle = d3_functor(v);\\n      return chord;\\n    };\\n    chord.endAngle = function(v) {\\n      if (!arguments.length) return endAngle;\\n      endAngle = d3_functor(v);\\n      return chord;\\n    };\\n    return chord;\\n  };\\n  function d3_svg_chordRadius(d) {\\n    return d.radius;\\n  }\\n  d3.svg.diagonal = function() {\\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\\n    function diagonal(d, i) {\\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\\n        x: p0.x,\\n        y: m\\n      }, {\\n        x: p3.x,\\n        y: m\\n      }, p3 ];\\n      p = p.map(projection);\\n      return \\\"M\\\" + p[0] + \\\"C\\\" + p[1] + \\\" \\\" + p[2] + \\\" \\\" + p[3];\\n    }\\n    diagonal.source = function(x) {\\n      if (!arguments.length) return source;\\n      source = d3_functor(x);\\n      return diagonal;\\n    };\\n    diagonal.target = function(x) {\\n      if (!arguments.length) return target;\\n      target = d3_functor(x);\\n      return diagonal;\\n    };\\n    diagonal.projection = function(x) {\\n      if (!arguments.length) return projection;\\n      projection = x;\\n      return diagonal;\\n    };\\n    return diagonal;\\n  };\\n  function d3_svg_diagonalProjection(d) {\\n    return [ d.x, d.y ];\\n  }\\n  d3.svg.diagonal.radial = function() {\\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\\n    diagonal.projection = function(x) {\\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\\n    };\\n    return diagonal;\\n  };\\n  function d3_svg_diagonalRadialProjection(projection) {\\n    return function() {\\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\\n      return [ r * Math.cos(a), r * Math.sin(a) ];\\n    };\\n  }\\n  d3.svg.symbol = function() {\\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\\n    function symbol(d, i) {\\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\\n    }\\n    symbol.type = function(x) {\\n      if (!arguments.length) return type;\\n      type = d3_functor(x);\\n      return symbol;\\n    };\\n    symbol.size = function(x) {\\n      if (!arguments.length) return size;\\n      size = d3_functor(x);\\n      return symbol;\\n    };\\n    return symbol;\\n  };\\n  function d3_svg_symbolSize() {\\n    return 64;\\n  }\\n  function d3_svg_symbolType() {\\n    return \\\"circle\\\";\\n  }\\n  function d3_svg_symbolCircle(size) {\\n    var r = Math.sqrt(size / π);\\n    return \\\"M0,\\\" + r + \\\"A\\\" + r + \\\",\\\" + r + \\\" 0 1,1 0,\\\" + -r + \\\"A\\\" + r + \\\",\\\" + r + \\\" 0 1,1 0,\\\" + r + \\\"Z\\\";\\n  }\\n  var d3_svg_symbols = d3.map({\\n    circle: d3_svg_symbolCircle,\\n    cross: function(size) {\\n      var r = Math.sqrt(size / 5) / 2;\\n      return \\\"M\\\" + -3 * r + \\\",\\\" + -r + \\\"H\\\" + -r + \\\"V\\\" + -3 * r + \\\"H\\\" + r + \\\"V\\\" + -r + \\\"H\\\" + 3 * r + \\\"V\\\" + r + \\\"H\\\" + r + \\\"V\\\" + 3 * r + \\\"H\\\" + -r + \\\"V\\\" + r + \\\"H\\\" + -3 * r + \\\"Z\\\";\\n    },\\n    diamond: function(size) {\\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\\n      return \\\"M0,\\\" + -ry + \\\"L\\\" + rx + \\\",0\\\" + \\\" 0,\\\" + ry + \\\" \\\" + -rx + \\\",0\\\" + \\\"Z\\\";\\n    },\\n    square: function(size) {\\n      var r = Math.sqrt(size) / 2;\\n      return \\\"M\\\" + -r + \\\",\\\" + -r + \\\"L\\\" + r + \\\",\\\" + -r + \\\" \\\" + r + \\\",\\\" + r + \\\" \\\" + -r + \\\",\\\" + r + \\\"Z\\\";\\n    },\\n    \\\"triangle-down\\\": function(size) {\\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\\n      return \\\"M0,\\\" + ry + \\\"L\\\" + rx + \\\",\\\" + -ry + \\\" \\\" + -rx + \\\",\\\" + -ry + \\\"Z\\\";\\n    },\\n    \\\"triangle-up\\\": function(size) {\\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\\n      return \\\"M0,\\\" + -ry + \\\"L\\\" + rx + \\\",\\\" + ry + \\\" \\\" + -rx + \\\",\\\" + ry + \\\"Z\\\";\\n    }\\n  });\\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\\n  d3_selectionPrototype.transition = function(name) {\\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\\n      time: Date.now(),\\n      ease: d3_ease_cubicInOut,\\n      delay: 0,\\n      duration: 250\\n    };\\n    for (var j = -1, m = this.length; ++j < m; ) {\\n      subgroups.push(subgroup = []);\\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\\n        subgroup.push(node);\\n      }\\n    }\\n    return d3_transition(subgroups, ns, id);\\n  };\\n  d3_selectionPrototype.interrupt = function(name) {\\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\\n  };\\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\\n  function d3_selection_interruptNS(ns) {\\n    return function() {\\n      var lock, activeId, active;\\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\\n        active.timer.c = null;\\n        active.timer.t = NaN;\\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\\n        lock.active += .5;\\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\\n      }\\n    };\\n  }\\n  function d3_transition(groups, ns, id) {\\n    d3_subclass(groups, d3_transitionPrototype);\\n    groups.namespace = ns;\\n    groups.id = id;\\n    return groups;\\n  }\\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\\n  d3.transition = function(selection, name) {\\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\\n  };\\n  d3.transition.prototype = d3_transitionPrototype;\\n  d3_transitionPrototype.select = function(selector) {\\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\\n    selector = d3_selection_selector(selector);\\n    for (var j = -1, m = this.length; ++j < m; ) {\\n      subgroups.push(subgroup = []);\\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\\n          if (\\\"__data__\\\" in node) subnode.__data__ = node.__data__;\\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\\n          subgroup.push(subnode);\\n        } else {\\n          subgroup.push(null);\\n        }\\n      }\\n    }\\n    return d3_transition(subgroups, ns, id);\\n  };\\n  d3_transitionPrototype.selectAll = function(selector) {\\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\\n    selector = d3_selection_selectorAll(selector);\\n    for (var j = -1, m = this.length; ++j < m; ) {\\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\\n        if (node = group[i]) {\\n          transition = node[ns][id];\\n          subnodes = selector.call(node, node.__data__, i, j);\\n          subgroups.push(subgroup = []);\\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\\n            subgroup.push(subnode);\\n          }\\n        }\\n      }\\n    }\\n    return d3_transition(subgroups, ns, id);\\n  };\\n  d3_transitionPrototype.filter = function(filter) {\\n    var subgroups = [], subgroup, group, node;\\n    if (typeof filter !== \\\"function\\\") filter = d3_selection_filter(filter);\\n    for (var j = 0, m = this.length; j < m; j++) {\\n      subgroups.push(subgroup = []);\\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\\n          subgroup.push(node);\\n        }\\n      }\\n    }\\n    return d3_transition(subgroups, this.namespace, this.id);\\n  };\\n  d3_transitionPrototype.tween = function(name, tween) {\\n    var id = this.id, ns = this.namespace;\\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\\n    return d3_selection_each(this, tween == null ? function(node) {\\n      node[ns][id].tween.remove(name);\\n    } : function(node) {\\n      node[ns][id].tween.set(name, tween);\\n    });\\n  };\\n  function d3_transition_tween(groups, name, value, tween) {\\n    var id = groups.id, ns = groups.namespace;\\n    return d3_selection_each(groups, typeof value === \\\"function\\\" ? function(node, i, j) {\\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\\n    } : (value = tween(value), function(node) {\\n      node[ns][id].tween.set(name, value);\\n    }));\\n  }\\n  d3_transitionPrototype.attr = function(nameNS, value) {\\n    if (arguments.length < 2) {\\n      for (value in nameNS) this.attr(value, nameNS[value]);\\n      return this;\\n    }\\n    var interpolate = nameNS == \\\"transform\\\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\\n    function attrNull() {\\n      this.removeAttribute(name);\\n    }\\n    function attrNullNS() {\\n      this.removeAttributeNS(name.space, name.local);\\n    }\\n    function attrTween(b) {\\n      return b == null ? attrNull : (b += \\\"\\\", function() {\\n        var a = this.getAttribute(name), i;\\n        return a !== b && (i = interpolate(a, b), function(t) {\\n          this.setAttribute(name, i(t));\\n        });\\n      });\\n    }\\n    function attrTweenNS(b) {\\n      return b == null ? attrNullNS : (b += \\\"\\\", function() {\\n        var a = this.getAttributeNS(name.space, name.local), i;\\n        return a !== b && (i = interpolate(a, b), function(t) {\\n          this.setAttributeNS(name.space, name.local, i(t));\\n        });\\n      });\\n    }\\n    return d3_transition_tween(this, \\\"attr.\\\" + nameNS, value, name.local ? attrTweenNS : attrTween);\\n  };\\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\\n    var name = d3.ns.qualify(nameNS);\\n    function attrTween(d, i) {\\n      var f = tween.call(this, d, i, this.getAttribute(name));\\n      return f && function(t) {\\n        this.setAttribute(name, f(t));\\n      };\\n    }\\n    function attrTweenNS(d, i) {\\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\\n      return f && function(t) {\\n        this.setAttributeNS(name.space, name.local, f(t));\\n      };\\n    }\\n    return this.tween(\\\"attr.\\\" + nameNS, name.local ? attrTweenNS : attrTween);\\n  };\\n  d3_transitionPrototype.style = function(name, value, priority) {\\n    var n = arguments.length;\\n    if (n < 3) {\\n      if (typeof name !== \\\"string\\\") {\\n        if (n < 2) value = \\\"\\\";\\n        for (priority in name) this.style(priority, name[priority], value);\\n        return this;\\n      }\\n      priority = \\\"\\\";\\n    }\\n    function styleNull() {\\n      this.style.removeProperty(name);\\n    }\\n    function styleString(b) {\\n      return b == null ? styleNull : (b += \\\"\\\", function() {\\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\\n          this.style.setProperty(name, i(t), priority);\\n        });\\n      });\\n    }\\n    return d3_transition_tween(this, \\\"style.\\\" + name, value, styleString);\\n  };\\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\\n    if (arguments.length < 3) priority = \\\"\\\";\\n    function styleTween(d, i) {\\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\\n      return f && function(t) {\\n        this.style.setProperty(name, f(t), priority);\\n      };\\n    }\\n    return this.tween(\\\"style.\\\" + name, styleTween);\\n  };\\n  d3_transitionPrototype.text = function(value) {\\n    return d3_transition_tween(this, \\\"text\\\", value, d3_transition_text);\\n  };\\n  function d3_transition_text(b) {\\n    if (b == null) b = \\\"\\\";\\n    return function() {\\n      this.textContent = b;\\n    };\\n  }\\n  d3_transitionPrototype.remove = function() {\\n    var ns = this.namespace;\\n    return this.each(\\\"end.transition\\\", function() {\\n      var p;\\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\\n    });\\n  };\\n  d3_transitionPrototype.ease = function(value) {\\n    var id = this.id, ns = this.namespace;\\n    if (arguments.length < 1) return this.node()[ns][id].ease;\\n    if (typeof value !== \\\"function\\\") value = d3.ease.apply(d3, arguments);\\n    return d3_selection_each(this, function(node) {\\n      node[ns][id].ease = value;\\n    });\\n  };\\n  d3_transitionPrototype.delay = function(value) {\\n    var id = this.id, ns = this.namespace;\\n    if (arguments.length < 1) return this.node()[ns][id].delay;\\n    return d3_selection_each(this, typeof value === \\\"function\\\" ? function(node, i, j) {\\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\\n    } : (value = +value, function(node) {\\n      node[ns][id].delay = value;\\n    }));\\n  };\\n  d3_transitionPrototype.duration = function(value) {\\n    var id = this.id, ns = this.namespace;\\n    if (arguments.length < 1) return this.node()[ns][id].duration;\\n    return d3_selection_each(this, typeof value === \\\"function\\\" ? function(node, i, j) {\\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\\n    } : (value = Math.max(1, value), function(node) {\\n      node[ns][id].duration = value;\\n    }));\\n  };\\n  d3_transitionPrototype.each = function(type, listener) {\\n    var id = this.id, ns = this.namespace;\\n    if (arguments.length < 2) {\\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\\n      try {\\n        d3_transitionInheritId = id;\\n        d3_selection_each(this, function(node, i, j) {\\n          d3_transitionInherit = node[ns][id];\\n          type.call(node, node.__data__, i, j);\\n        });\\n      } finally {\\n        d3_transitionInherit = inherit;\\n        d3_transitionInheritId = inheritId;\\n      }\\n    } else {\\n      d3_selection_each(this, function(node) {\\n        var transition = node[ns][id];\\n        (transition.event || (transition.event = d3.dispatch(\\\"start\\\", \\\"end\\\", \\\"interrupt\\\"))).on(type, listener);\\n      });\\n    }\\n    return this;\\n  };\\n  d3_transitionPrototype.transition = function() {\\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\\n    for (var j = 0, m = this.length; j < m; j++) {\\n      subgroups.push(subgroup = []);\\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\\n        if (node = group[i]) {\\n          transition = node[ns][id0];\\n          d3_transitionNode(node, i, ns, id1, {\\n            time: transition.time,\\n            ease: transition.ease,\\n            delay: transition.delay + transition.duration,\\n            duration: transition.duration\\n          });\\n        }\\n        subgroup.push(node);\\n      }\\n    }\\n    return d3_transition(subgroups, ns, id1);\\n  };\\n  function d3_transitionNamespace(name) {\\n    return name == null ? \\\"__transition__\\\" : \\\"__transition_\\\" + name + \\\"__\\\";\\n  }\\n  function d3_transitionNode(node, i, ns, id, inherit) {\\n    var lock = node[ns] || (node[ns] = {\\n      active: 0,\\n      count: 0\\n    }), transition = lock[id], time, timer, duration, ease, tweens;\\n    function schedule(elapsed) {\\n      var delay = transition.delay;\\n      timer.t = delay + time;\\n      if (delay <= elapsed) return start(elapsed - delay);\\n      timer.c = start;\\n    }\\n    function start(elapsed) {\\n      var activeId = lock.active, active = lock[activeId];\\n      if (active) {\\n        active.timer.c = null;\\n        active.timer.t = NaN;\\n        --lock.count;\\n        delete lock[activeId];\\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\\n      }\\n      for (var cancelId in lock) {\\n        if (+cancelId < id) {\\n          var cancel = lock[cancelId];\\n          cancel.timer.c = null;\\n          cancel.timer.t = NaN;\\n          --lock.count;\\n          delete lock[cancelId];\\n        }\\n      }\\n      timer.c = tick;\\n      d3_timer(function() {\\n        if (timer.c && tick(elapsed || 1)) {\\n          timer.c = null;\\n          timer.t = NaN;\\n        }\\n        return 1;\\n      }, 0, time);\\n      lock.active = id;\\n      transition.event && transition.event.start.call(node, node.__data__, i);\\n      tweens = [];\\n      transition.tween.forEach(function(key, value) {\\n        if (value = value.call(node, node.__data__, i)) {\\n          tweens.push(value);\\n        }\\n      });\\n      ease = transition.ease;\\n      duration = transition.duration;\\n    }\\n    function tick(elapsed) {\\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\\n      while (n > 0) {\\n        tweens[--n].call(node, e);\\n      }\\n      if (t >= 1) {\\n        transition.event && transition.event.end.call(node, node.__data__, i);\\n        if (--lock.count) delete lock[id]; else delete node[ns];\\n        return 1;\\n      }\\n    }\\n    if (!transition) {\\n      time = inherit.time;\\n      timer = d3_timer(schedule, 0, time);\\n      transition = lock[id] = {\\n        tween: new d3_Map(),\\n        time: time,\\n        timer: timer,\\n        delay: inherit.delay,\\n        duration: inherit.duration,\\n        ease: inherit.ease,\\n        index: i\\n      };\\n      inherit = null;\\n      ++lock.count;\\n    }\\n  }\\n  d3.svg.axis = function() {\\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\\n    function axis(g) {\\n      g.each(function() {\\n        var g = d3.select(this);\\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\\\".tick\\\").data(ticks, scale1), tickEnter = tick.enter().insert(\\\"g\\\", \\\".domain\\\").attr(\\\"class\\\", \\\"tick\\\").style(\\\"opacity\\\", ε), tickExit = d3.transition(tick.exit()).style(\\\"opacity\\\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\\\"opacity\\\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\\n        var range = d3_scaleRange(scale1), path = g.selectAll(\\\".domain\\\").data([ 0 ]), pathUpdate = (path.enter().append(\\\"path\\\").attr(\\\"class\\\", \\\"domain\\\"), \\n        d3.transition(path));\\n        tickEnter.append(\\\"line\\\");\\n        tickEnter.append(\\\"text\\\");\\n        var lineEnter = tickEnter.select(\\\"line\\\"), lineUpdate = tickUpdate.select(\\\"line\\\"), text = tick.select(\\\"text\\\").text(tickFormat), textEnter = tickEnter.select(\\\"text\\\"), textUpdate = tickUpdate.select(\\\"text\\\"), sign = orient === \\\"top\\\" || orient === \\\"left\\\" ? -1 : 1, x1, x2, y1, y2;\\n        if (orient === \\\"bottom\\\" || orient === \\\"top\\\") {\\n          tickTransform = d3_svg_axisX, x1 = \\\"x\\\", y1 = \\\"y\\\", x2 = \\\"x2\\\", y2 = \\\"y2\\\";\\n          text.attr(\\\"dy\\\", sign < 0 ? \\\"0em\\\" : \\\".71em\\\").style(\\\"text-anchor\\\", \\\"middle\\\");\\n          pathUpdate.attr(\\\"d\\\", \\\"M\\\" + range[0] + \\\",\\\" + sign * outerTickSize + \\\"V0H\\\" + range[1] + \\\"V\\\" + sign * outerTickSize);\\n        } else {\\n          tickTransform = d3_svg_axisY, x1 = \\\"y\\\", y1 = \\\"x\\\", x2 = \\\"y2\\\", y2 = \\\"x2\\\";\\n          text.attr(\\\"dy\\\", \\\".32em\\\").style(\\\"text-anchor\\\", sign < 0 ? \\\"end\\\" : \\\"start\\\");\\n          pathUpdate.attr(\\\"d\\\", \\\"M\\\" + sign * outerTickSize + \\\",\\\" + range[0] + \\\"H0V\\\" + range[1] + \\\"H\\\" + sign * outerTickSize);\\n        }\\n        lineEnter.attr(y2, sign * innerTickSize);\\n        textEnter.attr(y1, sign * tickSpacing);\\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\\n        if (scale1.rangeBand) {\\n          var x = scale1, dx = x.rangeBand() / 2;\\n          scale0 = scale1 = function(d) {\\n            return x(d) + dx;\\n          };\\n        } else if (scale0.rangeBand) {\\n          scale0 = scale1;\\n        } else {\\n          tickExit.call(tickTransform, scale1, scale0);\\n        }\\n        tickEnter.call(tickTransform, scale0, scale1);\\n        tickUpdate.call(tickTransform, scale1, scale1);\\n      });\\n    }\\n    axis.scale = function(x) {\\n      if (!arguments.length) return scale;\\n      scale = x;\\n      return axis;\\n    };\\n    axis.orient = function(x) {\\n      if (!arguments.length) return orient;\\n      orient = x in d3_svg_axisOrients ? x + \\\"\\\" : d3_svg_axisDefaultOrient;\\n      return axis;\\n    };\\n    axis.ticks = function() {\\n      if (!arguments.length) return tickArguments_;\\n      tickArguments_ = d3_array(arguments);\\n      return axis;\\n    };\\n    axis.tickValues = function(x) {\\n      if (!arguments.length) return tickValues;\\n      tickValues = x;\\n      return axis;\\n    };\\n    axis.tickFormat = function(x) {\\n      if (!arguments.length) return tickFormat_;\\n      tickFormat_ = x;\\n      return axis;\\n    };\\n    axis.tickSize = function(x) {\\n      var n = arguments.length;\\n      if (!n) return innerTickSize;\\n      innerTickSize = +x;\\n      outerTickSize = +arguments[n - 1];\\n      return axis;\\n    };\\n    axis.innerTickSize = function(x) {\\n      if (!arguments.length) return innerTickSize;\\n      innerTickSize = +x;\\n      return axis;\\n    };\\n    axis.outerTickSize = function(x) {\\n      if (!arguments.length) return outerTickSize;\\n      outerTickSize = +x;\\n      return axis;\\n    };\\n    axis.tickPadding = function(x) {\\n      if (!arguments.length) return tickPadding;\\n      tickPadding = +x;\\n      return axis;\\n    };\\n    axis.tickSubdivide = function() {\\n      return arguments.length && axis;\\n    };\\n    return axis;\\n  };\\n  var d3_svg_axisDefaultOrient = \\\"bottom\\\", d3_svg_axisOrients = {\\n    top: 1,\\n    right: 1,\\n    bottom: 1,\\n    left: 1\\n  };\\n  function d3_svg_axisX(selection, x0, x1) {\\n    selection.attr(\\\"transform\\\", function(d) {\\n      var v0 = x0(d);\\n      return \\\"translate(\\\" + (isFinite(v0) ? v0 : x1(d)) + \\\",0)\\\";\\n    });\\n  }\\n  function d3_svg_axisY(selection, y0, y1) {\\n    selection.attr(\\\"transform\\\", function(d) {\\n      var v0 = y0(d);\\n      return \\\"translate(0,\\\" + (isFinite(v0) ? v0 : y1(d)) + \\\")\\\";\\n    });\\n  }\\n  d3.svg.brush = function() {\\n    var event = d3_eventDispatch(brush, \\\"brushstart\\\", \\\"brush\\\", \\\"brushend\\\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\\n    function brush(g) {\\n      g.each(function() {\\n        var g = d3.select(this).style(\\\"pointer-events\\\", \\\"all\\\").style(\\\"-webkit-tap-highlight-color\\\", \\\"rgba(0,0,0,0)\\\").on(\\\"mousedown.brush\\\", brushstart).on(\\\"touchstart.brush\\\", brushstart);\\n        var background = g.selectAll(\\\".background\\\").data([ 0 ]);\\n        background.enter().append(\\\"rect\\\").attr(\\\"class\\\", \\\"background\\\").style(\\\"visibility\\\", \\\"hidden\\\").style(\\\"cursor\\\", \\\"crosshair\\\");\\n        g.selectAll(\\\".extent\\\").data([ 0 ]).enter().append(\\\"rect\\\").attr(\\\"class\\\", \\\"extent\\\").style(\\\"cursor\\\", \\\"move\\\");\\n        var resize = g.selectAll(\\\".resize\\\").data(resizes, d3_identity);\\n        resize.exit().remove();\\n        resize.enter().append(\\\"g\\\").attr(\\\"class\\\", function(d) {\\n          return \\\"resize \\\" + d;\\n        }).style(\\\"cursor\\\", function(d) {\\n          return d3_svg_brushCursor[d];\\n        }).append(\\\"rect\\\").attr(\\\"x\\\", function(d) {\\n          return /[ew]$/.test(d) ? -3 : null;\\n        }).attr(\\\"y\\\", function(d) {\\n          return /^[ns]/.test(d) ? -3 : null;\\n        }).attr(\\\"width\\\", 6).attr(\\\"height\\\", 6).style(\\\"visibility\\\", \\\"hidden\\\");\\n        resize.style(\\\"display\\\", brush.empty() ? \\\"none\\\" : null);\\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\\n        if (x) {\\n          range = d3_scaleRange(x);\\n          backgroundUpdate.attr(\\\"x\\\", range[0]).attr(\\\"width\\\", range[1] - range[0]);\\n          redrawX(gUpdate);\\n        }\\n        if (y) {\\n          range = d3_scaleRange(y);\\n          backgroundUpdate.attr(\\\"y\\\", range[0]).attr(\\\"height\\\", range[1] - range[0]);\\n          redrawY(gUpdate);\\n        }\\n        redraw(gUpdate);\\n      });\\n    }\\n    brush.event = function(g) {\\n      g.each(function() {\\n        var event_ = event.of(this, arguments), extent1 = {\\n          x: xExtent,\\n          y: yExtent,\\n          i: xExtentDomain,\\n          j: yExtentDomain\\n        }, extent0 = this.__chart__ || extent1;\\n        this.__chart__ = extent1;\\n        if (d3_transitionInheritId) {\\n          d3.select(this).transition().each(\\\"start.brush\\\", function() {\\n            xExtentDomain = extent0.i;\\n            yExtentDomain = extent0.j;\\n            xExtent = extent0.x;\\n            yExtent = extent0.y;\\n            event_({\\n              type: \\\"brushstart\\\"\\n            });\\n          }).tween(\\\"brush:brush\\\", function() {\\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\\n            xExtentDomain = yExtentDomain = null;\\n            return function(t) {\\n              xExtent = extent1.x = xi(t);\\n              yExtent = extent1.y = yi(t);\\n              event_({\\n                type: \\\"brush\\\",\\n                mode: \\\"resize\\\"\\n              });\\n            };\\n          }).each(\\\"end.brush\\\", function() {\\n            xExtentDomain = extent1.i;\\n            yExtentDomain = extent1.j;\\n            event_({\\n              type: \\\"brush\\\",\\n              mode: \\\"resize\\\"\\n            });\\n            event_({\\n              type: \\\"brushend\\\"\\n            });\\n          });\\n        } else {\\n          event_({\\n            type: \\\"brushstart\\\"\\n          });\\n          event_({\\n            type: \\\"brush\\\",\\n            mode: \\\"resize\\\"\\n          });\\n          event_({\\n            type: \\\"brushend\\\"\\n          });\\n        }\\n      });\\n    };\\n    function redraw(g) {\\n      g.selectAll(\\\".resize\\\").attr(\\\"transform\\\", function(d) {\\n        return \\\"translate(\\\" + xExtent[+/e$/.test(d)] + \\\",\\\" + yExtent[+/^s/.test(d)] + \\\")\\\";\\n      });\\n    }\\n    function redrawX(g) {\\n      g.select(\\\".extent\\\").attr(\\\"x\\\", xExtent[0]);\\n      g.selectAll(\\\".extent,.n>rect,.s>rect\\\").attr(\\\"width\\\", xExtent[1] - xExtent[0]);\\n    }\\n    function redrawY(g) {\\n      g.select(\\\".extent\\\").attr(\\\"y\\\", yExtent[0]);\\n      g.selectAll(\\\".extent,.e>rect,.w>rect\\\").attr(\\\"height\\\", yExtent[1] - yExtent[0]);\\n    }\\n    function brushstart() {\\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\\\"extent\\\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\\n      var w = d3.select(d3_window(target)).on(\\\"keydown.brush\\\", keydown).on(\\\"keyup.brush\\\", keyup);\\n      if (d3.event.changedTouches) {\\n        w.on(\\\"touchmove.brush\\\", brushmove).on(\\\"touchend.brush\\\", brushend);\\n      } else {\\n        w.on(\\\"mousemove.brush\\\", brushmove).on(\\\"mouseup.brush\\\", brushend);\\n      }\\n      g.interrupt().selectAll(\\\"*\\\").interrupt();\\n      if (dragging) {\\n        origin[0] = xExtent[0] - origin[0];\\n        origin[1] = yExtent[0] - origin[1];\\n      } else if (resizing) {\\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\\n        origin[0] = xExtent[ex];\\n        origin[1] = yExtent[ey];\\n      } else if (d3.event.altKey) center = origin.slice();\\n      g.style(\\\"pointer-events\\\", \\\"none\\\").selectAll(\\\".resize\\\").style(\\\"display\\\", null);\\n      d3.select(\\\"body\\\").style(\\\"cursor\\\", eventTarget.style(\\\"cursor\\\"));\\n      event_({\\n        type: \\\"brushstart\\\"\\n      });\\n      brushmove();\\n      function keydown() {\\n        if (d3.event.keyCode == 32) {\\n          if (!dragging) {\\n            center = null;\\n            origin[0] -= xExtent[1];\\n            origin[1] -= yExtent[1];\\n            dragging = 2;\\n          }\\n          d3_eventPreventDefault();\\n        }\\n      }\\n      function keyup() {\\n        if (d3.event.keyCode == 32 && dragging == 2) {\\n          origin[0] += xExtent[1];\\n          origin[1] += yExtent[1];\\n          dragging = 0;\\n          d3_eventPreventDefault();\\n        }\\n      }\\n      function brushmove() {\\n        var point = d3.mouse(target), moved = false;\\n        if (offset) {\\n          point[0] += offset[0];\\n          point[1] += offset[1];\\n        }\\n        if (!dragging) {\\n          if (d3.event.altKey) {\\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\\n            origin[0] = xExtent[+(point[0] < center[0])];\\n            origin[1] = yExtent[+(point[1] < center[1])];\\n          } else center = null;\\n        }\\n        if (resizingX && move1(point, x, 0)) {\\n          redrawX(g);\\n          moved = true;\\n        }\\n        if (resizingY && move1(point, y, 1)) {\\n          redrawY(g);\\n          moved = true;\\n        }\\n        if (moved) {\\n          redraw(g);\\n          event_({\\n            type: \\\"brush\\\",\\n            mode: dragging ? \\\"move\\\" : \\\"resize\\\"\\n          });\\n        }\\n      }\\n      function move1(point, scale, i) {\\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\\n        if (dragging) {\\n          r0 -= position;\\n          r1 -= size + position;\\n        }\\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\\n        if (dragging) {\\n          max = (min += position) + size;\\n        } else {\\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\\n          if (position < min) {\\n            max = min;\\n            min = position;\\n          } else {\\n            max = position;\\n          }\\n        }\\n        if (extent[0] != min || extent[1] != max) {\\n          if (i) yExtentDomain = null; else xExtentDomain = null;\\n          extent[0] = min;\\n          extent[1] = max;\\n          return true;\\n        }\\n      }\\n      function brushend() {\\n        brushmove();\\n        g.style(\\\"pointer-events\\\", \\\"all\\\").selectAll(\\\".resize\\\").style(\\\"display\\\", brush.empty() ? \\\"none\\\" : null);\\n        d3.select(\\\"body\\\").style(\\\"cursor\\\", null);\\n        w.on(\\\"mousemove.brush\\\", null).on(\\\"mouseup.brush\\\", null).on(\\\"touchmove.brush\\\", null).on(\\\"touchend.brush\\\", null).on(\\\"keydown.brush\\\", null).on(\\\"keyup.brush\\\", null);\\n        dragRestore();\\n        event_({\\n          type: \\\"brushend\\\"\\n        });\\n      }\\n    }\\n    brush.x = function(z) {\\n      if (!arguments.length) return x;\\n      x = z;\\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\\n      return brush;\\n    };\\n    brush.y = function(z) {\\n      if (!arguments.length) return y;\\n      y = z;\\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\\n      return brush;\\n    };\\n    brush.clamp = function(z) {\\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\\n      return brush;\\n    };\\n    brush.extent = function(z) {\\n      var x0, x1, y0, y1, t;\\n      if (!arguments.length) {\\n        if (x) {\\n          if (xExtentDomain) {\\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\\n          } else {\\n            x0 = xExtent[0], x1 = xExtent[1];\\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\\n          }\\n        }\\n        if (y) {\\n          if (yExtentDomain) {\\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\\n          } else {\\n            y0 = yExtent[0], y1 = yExtent[1];\\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\\n          }\\n        }\\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\\n      }\\n      if (x) {\\n        x0 = z[0], x1 = z[1];\\n        if (y) x0 = x0[0], x1 = x1[0];\\n        xExtentDomain = [ x0, x1 ];\\n        if (x.invert) x0 = x(x0), x1 = x(x1);\\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\\n      }\\n      if (y) {\\n        y0 = z[0], y1 = z[1];\\n        if (x) y0 = y0[1], y1 = y1[1];\\n        yExtentDomain = [ y0, y1 ];\\n        if (y.invert) y0 = y(y0), y1 = y(y1);\\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\\n      }\\n      return brush;\\n    };\\n    brush.clear = function() {\\n      if (!brush.empty()) {\\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\\n        xExtentDomain = yExtentDomain = null;\\n      }\\n      return brush;\\n    };\\n    brush.empty = function() {\\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\\n    };\\n    return d3.rebind(brush, event, \\\"on\\\");\\n  };\\n  var d3_svg_brushCursor = {\\n    n: \\\"ns-resize\\\",\\n    e: \\\"ew-resize\\\",\\n    s: \\\"ns-resize\\\",\\n    w: \\\"ew-resize\\\",\\n    nw: \\\"nwse-resize\\\",\\n    ne: \\\"nesw-resize\\\",\\n    se: \\\"nwse-resize\\\",\\n    sw: \\\"nesw-resize\\\"\\n  };\\n  var d3_svg_brushResizes = [ [ \\\"n\\\", \\\"e\\\", \\\"s\\\", \\\"w\\\", \\\"nw\\\", \\\"ne\\\", \\\"se\\\", \\\"sw\\\" ], [ \\\"e\\\", \\\"w\\\" ], [ \\\"n\\\", \\\"s\\\" ], [] ];\\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\\n  var d3_time_formatUtc = d3_time_format.utc;\\n  var d3_time_formatIso = d3_time_formatUtc(\\\"%Y-%m-%dT%H:%M:%S.%LZ\\\");\\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\\\"2000-01-01T00:00:00.000Z\\\") ? d3_time_formatIsoNative : d3_time_formatIso;\\n  function d3_time_formatIsoNative(date) {\\n    return date.toISOString();\\n  }\\n  d3_time_formatIsoNative.parse = function(string) {\\n    var date = new Date(string);\\n    return isNaN(date) ? null : date;\\n  };\\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\\n  d3_time.second = d3_time_interval(function(date) {\\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\\n  }, function(date, offset) {\\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\\n  }, function(date) {\\n    return date.getSeconds();\\n  });\\n  d3_time.seconds = d3_time.second.range;\\n  d3_time.seconds.utc = d3_time.second.utc.range;\\n  d3_time.minute = d3_time_interval(function(date) {\\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\\n  }, function(date, offset) {\\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\\n  }, function(date) {\\n    return date.getMinutes();\\n  });\\n  d3_time.minutes = d3_time.minute.range;\\n  d3_time.minutes.utc = d3_time.minute.utc.range;\\n  d3_time.hour = d3_time_interval(function(date) {\\n    var timezone = date.getTimezoneOffset() / 60;\\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\\n  }, function(date, offset) {\\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\\n  }, function(date) {\\n    return date.getHours();\\n  });\\n  d3_time.hours = d3_time.hour.range;\\n  d3_time.hours.utc = d3_time.hour.utc.range;\\n  d3_time.month = d3_time_interval(function(date) {\\n    date = d3_time.day(date);\\n    date.setDate(1);\\n    return date;\\n  }, function(date, offset) {\\n    date.setMonth(date.getMonth() + offset);\\n  }, function(date) {\\n    return date.getMonth();\\n  });\\n  d3_time.months = d3_time.month.range;\\n  d3_time.months.utc = d3_time.month.utc.range;\\n  function d3_time_scale(linear, methods, format) {\\n    function scale(x) {\\n      return linear(x);\\n    }\\n    scale.invert = function(x) {\\n      return d3_time_scaleDate(linear.invert(x));\\n    };\\n    scale.domain = function(x) {\\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\\n      linear.domain(x);\\n      return scale;\\n    };\\n    function tickMethod(extent, count) {\\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\\n        return d / 31536e6;\\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\\n    }\\n    scale.nice = function(interval, skip) {\\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \\\"number\\\" && tickMethod(extent, interval);\\n      if (method) interval = method[0], skip = method[1];\\n      function skipped(date) {\\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\\n      }\\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\\n        floor: function(date) {\\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\\n          return date;\\n        },\\n        ceil: function(date) {\\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\\n          return date;\\n        }\\n      } : interval));\\n    };\\n    scale.ticks = function(interval, skip) {\\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \\\"number\\\" ? tickMethod(extent, interval) : !interval.range && [ {\\n        range: interval\\n      }, skip ];\\n      if (method) interval = method[0], skip = method[1];\\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\\n    };\\n    scale.tickFormat = function() {\\n      return format;\\n    };\\n    scale.copy = function() {\\n      return d3_time_scale(linear.copy(), methods, format);\\n    };\\n    return d3_scale_linearRebind(scale, linear);\\n  }\\n  function d3_time_scaleDate(t) {\\n    return new Date(t);\\n  }\\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \\\".%L\\\", function(d) {\\n    return d.getMilliseconds();\\n  } ], [ \\\":%S\\\", function(d) {\\n    return d.getSeconds();\\n  } ], [ \\\"%I:%M\\\", function(d) {\\n    return d.getMinutes();\\n  } ], [ \\\"%I %p\\\", function(d) {\\n    return d.getHours();\\n  } ], [ \\\"%a %d\\\", function(d) {\\n    return d.getDay() && d.getDate() != 1;\\n  } ], [ \\\"%b %d\\\", function(d) {\\n    return d.getDate() != 1;\\n  } ], [ \\\"%B\\\", function(d) {\\n    return d.getMonth();\\n  } ], [ \\\"%Y\\\", d3_true ] ]);\\n  var d3_time_scaleMilliseconds = {\\n    range: function(start, stop, step) {\\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\\n    },\\n    floor: d3_identity,\\n    ceil: d3_identity\\n  };\\n  d3_time_scaleLocalMethods.year = d3_time.year;\\n  d3_time.scale = function() {\\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\\n  };\\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\\n    return [ m[0].utc, m[1] ];\\n  });\\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \\\".%L\\\", function(d) {\\n    return d.getUTCMilliseconds();\\n  } ], [ \\\":%S\\\", function(d) {\\n    return d.getUTCSeconds();\\n  } ], [ \\\"%I:%M\\\", function(d) {\\n    return d.getUTCMinutes();\\n  } ], [ \\\"%I %p\\\", function(d) {\\n    return d.getUTCHours();\\n  } ], [ \\\"%a %d\\\", function(d) {\\n    return d.getUTCDay() && d.getUTCDate() != 1;\\n  } ], [ \\\"%b %d\\\", function(d) {\\n    return d.getUTCDate() != 1;\\n  } ], [ \\\"%B\\\", function(d) {\\n    return d.getUTCMonth();\\n  } ], [ \\\"%Y\\\", d3_true ] ]);\\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\\n  d3_time.scale.utc = function() {\\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\\n  };\\n  d3.text = d3_xhrType(function(request) {\\n    return request.responseText;\\n  });\\n  d3.json = function(url, callback) {\\n    return d3_xhr(url, \\\"application/json\\\", d3_json, callback);\\n  };\\n  function d3_json(request) {\\n    return JSON.parse(request.responseText);\\n  }\\n  d3.html = function(url, callback) {\\n    return d3_xhr(url, \\\"text/html\\\", d3_html, callback);\\n  };\\n  function d3_html(request) {\\n    var range = d3_document.createRange();\\n    range.selectNode(d3_document.body);\\n    return range.createContextualFragment(request.responseText);\\n  }\\n  d3.xml = d3_xhrType(function(request) {\\n    return request.responseXML;\\n  });\\n  if (typeof define === \\\"function\\\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \\\"object\\\" && module.exports) module.exports = d3; else this.d3 = d3;\\n}();\",\"export var prefix = \\\"$\\\";\\n\\nfunction Map() {}\\n\\nMap.prototype = map.prototype = {\\n  constructor: Map,\\n  has: function(key) {\\n    return (prefix + key) in this;\\n  },\\n  get: function(key) {\\n    return this[prefix + key];\\n  },\\n  set: function(key, value) {\\n    this[prefix + key] = value;\\n    return this;\\n  },\\n  remove: function(key) {\\n    var property = prefix + key;\\n    return property in this && delete this[property];\\n  },\\n  clear: function() {\\n    for (var property in this) if (property[0] === prefix) delete this[property];\\n  },\\n  keys: function() {\\n    var keys = [];\\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\\n    return keys;\\n  },\\n  values: function() {\\n    var values = [];\\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\\n    return values;\\n  },\\n  entries: function() {\\n    var entries = [];\\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\\n    return entries;\\n  },\\n  size: function() {\\n    var size = 0;\\n    for (var property in this) if (property[0] === prefix) ++size;\\n    return size;\\n  },\\n  empty: function() {\\n    for (var property in this) if (property[0] === prefix) return false;\\n    return true;\\n  },\\n  each: function(f) {\\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\\n  }\\n};\\n\\nfunction map(object, f) {\\n  var map = new Map;\\n\\n  // Copy constructor.\\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\\n\\n  // Index array by numeric index or specified key function.\\n  else if (Array.isArray(object)) {\\n    var i = -1,\\n        n = object.length,\\n        o;\\n\\n    if (f == null) while (++i < n) map.set(i, object[i]);\\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\\n  }\\n\\n  // Convert object to map.\\n  else if (object) for (var key in object) map.set(key, object[key]);\\n\\n  return map;\\n}\\n\\nexport default map;\\n\",\"import {default as map, prefix} from \\\"./map\\\";\\n\\nfunction Set() {}\\n\\nvar proto = map.prototype;\\n\\nSet.prototype = set.prototype = {\\n  constructor: Set,\\n  has: proto.has,\\n  add: function(value) {\\n    value += \\\"\\\";\\n    this[prefix + value] = value;\\n    return this;\\n  },\\n  remove: proto.remove,\\n  clear: proto.clear,\\n  values: proto.keys,\\n  size: proto.size,\\n  empty: proto.empty,\\n  each: proto.each\\n};\\n\\nfunction set(object, f) {\\n  var set = new Set;\\n\\n  // Copy constructor.\\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\\n\\n  // Otherwise, assume it’s an array.\\n  else if (object) {\\n    var i = -1, n = object.length;\\n    if (f == null) while (++i < n) set.add(object[i]);\\n    else while (++i < n) set.add(f(object[i], i, object));\\n  }\\n\\n  return set;\\n}\\n\\nexport default set;\\n\",\"export var xhtml = \\\"http://www.w3.org/1999/xhtml\\\";\\n\\nexport default {\\n  svg: \\\"http://www.w3.org/2000/svg\\\",\\n  xhtml: xhtml,\\n  xlink: \\\"http://www.w3.org/1999/xlink\\\",\\n  xml: \\\"http://www.w3.org/XML/1998/namespace\\\",\\n  xmlns: \\\"http://www.w3.org/2000/xmlns/\\\"\\n};\\n\",\"import namespaces from \\\"./namespaces\\\";\\n\\nexport default function(name) {\\n  var prefix = name += \\\"\\\", i = prefix.indexOf(\\\":\\\");\\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \\\"xmlns\\\") name = name.slice(i + 1);\\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\\n}\\n\",\"import namespace from \\\"./namespace\\\";\\nimport {xhtml} from \\\"./namespaces\\\";\\n\\nfunction creatorInherit(name) {\\n  return function() {\\n    var document = this.ownerDocument,\\n        uri = this.namespaceURI;\\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\\n        ? document.createElement(name)\\n        : document.createElementNS(uri, name);\\n  };\\n}\\n\\nfunction creatorFixed(fullname) {\\n  return function() {\\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\\n  };\\n}\\n\\nexport default function(name) {\\n  var fullname = namespace(name);\\n  return (fullname.local\\n      ? creatorFixed\\n      : creatorInherit)(fullname);\\n}\\n\",\"function none() {}\\n\\nexport default function(selector) {\\n  return selector == null ? none : function() {\\n    return this.querySelector(selector);\\n  };\\n}\\n\",\"function empty() {\\n  return [];\\n}\\n\\nexport default function(selector) {\\n  return selector == null ? empty : function() {\\n    return this.querySelectorAll(selector);\\n  };\\n}\\n\",\"export default function(update) {\\n  return new Array(update.length);\\n}\\n\",\"import sparse from \\\"./sparse\\\";\\nimport {Selection} from \\\"./index\\\";\\n\\nexport default function() {\\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\\n}\\n\\nexport function EnterNode(parent, datum) {\\n  this.ownerDocument = parent.ownerDocument;\\n  this.namespaceURI = parent.namespaceURI;\\n  this._next = null;\\n  this._parent = parent;\\n  this.__data__ = datum;\\n}\\n\\nEnterNode.prototype = {\\n  constructor: EnterNode,\\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\\n};\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"import {Selection} from \\\"./index\\\";\\nimport {EnterNode} from \\\"./enter\\\";\\nimport constant from \\\"../constant\\\";\\n\\nvar keyPrefix = \\\"$\\\"; // Protect against keys like “__proto__”.\\n\\nfunction bindIndex(parent, group, enter, update, exit, data) {\\n  var i = 0,\\n      node,\\n      groupLength = group.length,\\n      dataLength = data.length;\\n\\n  // Put any non-null nodes that fit into update.\\n  // Put any null nodes into enter.\\n  // Put any remaining data into enter.\\n  for (; i < dataLength; ++i) {\\n    if (node = group[i]) {\\n      node.__data__ = data[i];\\n      update[i] = node;\\n    } else {\\n      enter[i] = new EnterNode(parent, data[i]);\\n    }\\n  }\\n\\n  // Put any non-null nodes that don’t fit into exit.\\n  for (; i < groupLength; ++i) {\\n    if (node = group[i]) {\\n      exit[i] = node;\\n    }\\n  }\\n}\\n\\nfunction bindKey(parent, group, enter, update, exit, data, key) {\\n  var i,\\n      node,\\n      nodeByKeyValue = {},\\n      groupLength = group.length,\\n      dataLength = data.length,\\n      keyValues = new Array(groupLength),\\n      keyValue;\\n\\n  // Compute the key for each node.\\n  // If multiple nodes have the same key, the duplicates are added to exit.\\n  for (i = 0; i < groupLength; ++i) {\\n    if (node = group[i]) {\\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\\n      if (keyValue in nodeByKeyValue) {\\n        exit[i] = node;\\n      } else {\\n        nodeByKeyValue[keyValue] = node;\\n      }\\n    }\\n  }\\n\\n  // Compute the key for each datum.\\n  // If there a node associated with this key, join and add it to update.\\n  // If there is not (or the key is a duplicate), add it to enter.\\n  for (i = 0; i < dataLength; ++i) {\\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\\n    if (node = nodeByKeyValue[keyValue]) {\\n      update[i] = node;\\n      node.__data__ = data[i];\\n      nodeByKeyValue[keyValue] = null;\\n    } else {\\n      enter[i] = new EnterNode(parent, data[i]);\\n    }\\n  }\\n\\n  // Add any remaining nodes that were not bound to data to exit.\\n  for (i = 0; i < groupLength; ++i) {\\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\\n      exit[i] = node;\\n    }\\n  }\\n}\\n\\nexport default function(value, key) {\\n  if (!value) {\\n    data = new Array(this.size()), j = -1;\\n    this.each(function(d) { data[++j] = d; });\\n    return data;\\n  }\\n\\n  var bind = key ? bindKey : bindIndex,\\n      parents = this._parents,\\n      groups = this._groups;\\n\\n  if (typeof value !== \\\"function\\\") value = constant(value);\\n\\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\\n    var parent = parents[j],\\n        group = groups[j],\\n        groupLength = group.length,\\n        data = value.call(parent, parent && parent.__data__, j, parents),\\n        dataLength = data.length,\\n        enterGroup = enter[j] = new Array(dataLength),\\n        updateGroup = update[j] = new Array(dataLength),\\n        exitGroup = exit[j] = new Array(groupLength);\\n\\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\\n\\n    // Now connect the enter nodes to their following update node, such that\\n    // appendChild can insert the materialized enter node before this node,\\n    // rather than at the end of the parent node.\\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\\n      if (previous = enterGroup[i0]) {\\n        if (i0 >= i1) i1 = i0 + 1;\\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\\n        previous._next = next || null;\\n      }\\n    }\\n  }\\n\\n  update = new Selection(update, parents);\\n  update._enter = enter;\\n  update._exit = exit;\\n  return update;\\n}\\n\",\"import {Selection} from \\\"./index\\\";\\n\\nexport default function(compare) {\\n  if (!compare) compare = ascending;\\n\\n  function compareNode(a, b) {\\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\\n  }\\n\\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\\n      if (node = group[i]) {\\n        sortgroup[i] = node;\\n      }\\n    }\\n    sortgroup.sort(compareNode);\\n  }\\n\\n  return new Selection(sortgroups, this._parents).order();\\n}\\n\\nfunction ascending(a, b) {\\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\\n}\\n\",\"import namespace from \\\"../namespace\\\";\\n\\nfunction attrRemove(name) {\\n  return function() {\\n    this.removeAttribute(name);\\n  };\\n}\\n\\nfunction attrRemoveNS(fullname) {\\n  return function() {\\n    this.removeAttributeNS(fullname.space, fullname.local);\\n  };\\n}\\n\\nfunction attrConstant(name, value) {\\n  return function() {\\n    this.setAttribute(name, value);\\n  };\\n}\\n\\nfunction attrConstantNS(fullname, value) {\\n  return function() {\\n    this.setAttributeNS(fullname.space, fullname.local, value);\\n  };\\n}\\n\\nfunction attrFunction(name, value) {\\n  return function() {\\n    var v = value.apply(this, arguments);\\n    if (v == null) this.removeAttribute(name);\\n    else this.setAttribute(name, v);\\n  };\\n}\\n\\nfunction attrFunctionNS(fullname, value) {\\n  return function() {\\n    var v = value.apply(this, arguments);\\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\\n    else this.setAttributeNS(fullname.space, fullname.local, v);\\n  };\\n}\\n\\nexport default function(name, value) {\\n  var fullname = namespace(name);\\n\\n  if (arguments.length < 2) {\\n    var node = this.node();\\n    return fullname.local\\n        ? node.getAttributeNS(fullname.space, fullname.local)\\n        : node.getAttribute(fullname);\\n  }\\n\\n  return this.each((value == null\\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \\\"function\\\"\\n      ? (fullname.local ? attrFunctionNS : attrFunction)\\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\\n}\\n\",\"export default function(node) {\\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\\n      || (node.document && node) // node is a Window\\n      || node.defaultView; // node is a Document\\n}\\n\",\"function classArray(string) {\\n  return string.trim().split(/^|\\\\s+/);\\n}\\n\\nfunction classList(node) {\\n  return node.classList || new ClassList(node);\\n}\\n\\nfunction ClassList(node) {\\n  this._node = node;\\n  this._names = classArray(node.getAttribute(\\\"class\\\") || \\\"\\\");\\n}\\n\\nClassList.prototype = {\\n  add: function(name) {\\n    var i = this._names.indexOf(name);\\n    if (i < 0) {\\n      this._names.push(name);\\n      this._node.setAttribute(\\\"class\\\", this._names.join(\\\" \\\"));\\n    }\\n  },\\n  remove: function(name) {\\n    var i = this._names.indexOf(name);\\n    if (i >= 0) {\\n      this._names.splice(i, 1);\\n      this._node.setAttribute(\\\"class\\\", this._names.join(\\\" \\\"));\\n    }\\n  },\\n  contains: function(name) {\\n    return this._names.indexOf(name) >= 0;\\n  }\\n};\\n\\nfunction classedAdd(node, names) {\\n  var list = classList(node), i = -1, n = names.length;\\n  while (++i < n) list.add(names[i]);\\n}\\n\\nfunction classedRemove(node, names) {\\n  var list = classList(node), i = -1, n = names.length;\\n  while (++i < n) list.remove(names[i]);\\n}\\n\\nfunction classedTrue(names) {\\n  return function() {\\n    classedAdd(this, names);\\n  };\\n}\\n\\nfunction classedFalse(names) {\\n  return function() {\\n    classedRemove(this, names);\\n  };\\n}\\n\\nfunction classedFunction(names, value) {\\n  return function() {\\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\\n  };\\n}\\n\\nexport default function(name, value) {\\n  var names = classArray(name + \\\"\\\");\\n\\n  if (arguments.length < 2) {\\n    var list = classList(this.node()), i = -1, n = names.length;\\n    while (++i < n) if (!list.contains(names[i])) return false;\\n    return true;\\n  }\\n\\n  return this.each((typeof value === \\\"function\\\"\\n      ? classedFunction : value\\n      ? classedTrue\\n      : classedFalse)(names, value));\\n}\\n\",\"function textRemove() {\\n  this.textContent = \\\"\\\";\\n}\\n\\nfunction textConstant(value) {\\n  return function() {\\n    this.textContent = value;\\n  };\\n}\\n\\nfunction textFunction(value) {\\n  return function() {\\n    var v = value.apply(this, arguments);\\n    this.textContent = v == null ? \\\"\\\" : v;\\n  };\\n}\\n\\nexport default function(value) {\\n  return arguments.length\\n      ? this.each(value == null\\n          ? textRemove : (typeof value === \\\"function\\\"\\n          ? textFunction\\n          : textConstant)(value))\\n      : this.node().textContent;\\n}\\n\",\"function htmlRemove() {\\n  this.innerHTML = \\\"\\\";\\n}\\n\\nfunction htmlConstant(value) {\\n  return function() {\\n    this.innerHTML = value;\\n  };\\n}\\n\\nfunction htmlFunction(value) {\\n  return function() {\\n    var v = value.apply(this, arguments);\\n    this.innerHTML = v == null ? \\\"\\\" : v;\\n  };\\n}\\n\\nexport default function(value) {\\n  return arguments.length\\n      ? this.each(value == null\\n          ? htmlRemove : (typeof value === \\\"function\\\"\\n          ? htmlFunction\\n          : htmlConstant)(value))\\n      : this.node().innerHTML;\\n}\\n\",\"function raise() {\\n  if (this.nextSibling) this.parentNode.appendChild(this);\\n}\\n\\nexport default function() {\\n  return this.each(raise);\\n}\\n\",\"function lower() {\\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\\n}\\n\\nexport default function() {\\n  return this.each(lower);\\n}\\n\",\"import creator from \\\"../creator\\\";\\nimport selector from \\\"../selector\\\";\\n\\nfunction constantNull() {\\n  return null;\\n}\\n\\nexport default function(name, before) {\\n  var create = typeof name === \\\"function\\\" ? name : creator(name),\\n      select = before == null ? constantNull : typeof before === \\\"function\\\" ? before : selector(before);\\n  return this.select(function() {\\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\\n  });\\n}\\n\",\"function remove() {\\n  var parent = this.parentNode;\\n  if (parent) parent.removeChild(this);\\n}\\n\\nexport default function() {\\n  return this.each(remove);\\n}\\n\",\"function selection_cloneShallow() {\\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\\n}\\n\\nfunction selection_cloneDeep() {\\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\\n}\\n\\nexport default function(deep) {\\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\\n}\\n\",\"var filterEvents = {};\\n\\nexport var event = null;\\n\\nif (typeof document !== \\\"undefined\\\") {\\n  var element = document.documentElement;\\n  if (!(\\\"onmouseenter\\\" in element)) {\\n    filterEvents = {mouseenter: \\\"mouseover\\\", mouseleave: \\\"mouseout\\\"};\\n  }\\n}\\n\\nfunction filterContextListener(listener, index, group) {\\n  listener = contextListener(listener, index, group);\\n  return function(event) {\\n    var related = event.relatedTarget;\\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\\n      listener.call(this, event);\\n    }\\n  };\\n}\\n\\nfunction contextListener(listener, index, group) {\\n  return function(event1) {\\n    var event0 = event; // Events can be reentrant (e.g., focus).\\n    event = event1;\\n    try {\\n      listener.call(this, this.__data__, index, group);\\n    } finally {\\n      event = event0;\\n    }\\n  };\\n}\\n\\nfunction parseTypenames(typenames) {\\n  return typenames.trim().split(/^|\\\\s+/).map(function(t) {\\n    var name = \\\"\\\", i = t.indexOf(\\\".\\\");\\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\\n    return {type: t, name: name};\\n  });\\n}\\n\\nfunction onRemove(typename) {\\n  return function() {\\n    var on = this.__on;\\n    if (!on) return;\\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\\n        this.removeEventListener(o.type, o.listener, o.capture);\\n      } else {\\n        on[++i] = o;\\n      }\\n    }\\n    if (++i) on.length = i;\\n    else delete this.__on;\\n  };\\n}\\n\\nfunction onAdd(typename, value, capture) {\\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\\n  return function(d, i, group) {\\n    var on = this.__on, o, listener = wrap(value, i, group);\\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\\n        this.removeEventListener(o.type, o.listener, o.capture);\\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\\n        o.value = value;\\n        return;\\n      }\\n    }\\n    this.addEventListener(typename.type, listener, capture);\\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\\n    if (!on) this.__on = [o];\\n    else on.push(o);\\n  };\\n}\\n\\nexport default function(typename, value, capture) {\\n  var typenames = parseTypenames(typename + \\\"\\\"), i, n = typenames.length, t;\\n\\n  if (arguments.length < 2) {\\n    var on = this.node().__on;\\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\\n      for (i = 0, o = on[j]; i < n; ++i) {\\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\\n          return o.value;\\n        }\\n      }\\n    }\\n    return;\\n  }\\n\\n  on = value ? onAdd : onRemove;\\n  if (capture == null) capture = false;\\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\\n  return this;\\n}\\n\\nexport function customEvent(event1, listener, that, args) {\\n  var event0 = event;\\n  event1.sourceEvent = event;\\n  event = event1;\\n  try {\\n    return listener.apply(that, args);\\n  } finally {\\n    event = event0;\\n  }\\n}\\n\",\"import defaultView from \\\"../window\\\";\\n\\nfunction dispatchEvent(node, type, params) {\\n  var window = defaultView(node),\\n      event = window.CustomEvent;\\n\\n  if (typeof event === \\\"function\\\") {\\n    event = new event(type, params);\\n  } else {\\n    event = window.document.createEvent(\\\"Event\\\");\\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\\n    else event.initEvent(type, false, false);\\n  }\\n\\n  node.dispatchEvent(event);\\n}\\n\\nfunction dispatchConstant(type, params) {\\n  return function() {\\n    return dispatchEvent(this, type, params);\\n  };\\n}\\n\\nfunction dispatchFunction(type, params) {\\n  return function() {\\n    return dispatchEvent(this, type, params.apply(this, arguments));\\n  };\\n}\\n\\nexport default function(type, params) {\\n  return this.each((typeof params === \\\"function\\\"\\n      ? dispatchFunction\\n      : dispatchConstant)(type, params));\\n}\\n\",\"import selection_select from \\\"./select\\\";\\nimport selection_selectAll from \\\"./selectAll\\\";\\nimport selection_filter from \\\"./filter\\\";\\nimport selection_data from \\\"./data\\\";\\nimport selection_enter from \\\"./enter\\\";\\nimport selection_exit from \\\"./exit\\\";\\nimport selection_join from \\\"./join\\\";\\nimport selection_merge from \\\"./merge\\\";\\nimport selection_order from \\\"./order\\\";\\nimport selection_sort from \\\"./sort\\\";\\nimport selection_call from \\\"./call\\\";\\nimport selection_nodes from \\\"./nodes\\\";\\nimport selection_node from \\\"./node\\\";\\nimport selection_size from \\\"./size\\\";\\nimport selection_empty from \\\"./empty\\\";\\nimport selection_each from \\\"./each\\\";\\nimport selection_attr from \\\"./attr\\\";\\nimport selection_style from \\\"./style\\\";\\nimport selection_property from \\\"./property\\\";\\nimport selection_classed from \\\"./classed\\\";\\nimport selection_text from \\\"./text\\\";\\nimport selection_html from \\\"./html\\\";\\nimport selection_raise from \\\"./raise\\\";\\nimport selection_lower from \\\"./lower\\\";\\nimport selection_append from \\\"./append\\\";\\nimport selection_insert from \\\"./insert\\\";\\nimport selection_remove from \\\"./remove\\\";\\nimport selection_clone from \\\"./clone\\\";\\nimport selection_datum from \\\"./datum\\\";\\nimport selection_on from \\\"./on\\\";\\nimport selection_dispatch from \\\"./dispatch\\\";\\n\\nexport var root = [null];\\n\\nexport function Selection(groups, parents) {\\n  this._groups = groups;\\n  this._parents = parents;\\n}\\n\\nfunction selection() {\\n  return new Selection([[document.documentElement]], root);\\n}\\n\\nSelection.prototype = selection.prototype = {\\n  constructor: Selection,\\n  select: selection_select,\\n  selectAll: selection_selectAll,\\n  filter: selection_filter,\\n  data: selection_data,\\n  enter: selection_enter,\\n  exit: selection_exit,\\n  join: selection_join,\\n  merge: selection_merge,\\n  order: selection_order,\\n  sort: selection_sort,\\n  call: selection_call,\\n  nodes: selection_nodes,\\n  node: selection_node,\\n  size: selection_size,\\n  empty: selection_empty,\\n  each: selection_each,\\n  attr: selection_attr,\\n  style: selection_style,\\n  property: selection_property,\\n  classed: selection_classed,\\n  text: selection_text,\\n  html: selection_html,\\n  raise: selection_raise,\\n  lower: selection_lower,\\n  append: selection_append,\\n  insert: selection_insert,\\n  remove: selection_remove,\\n  clone: selection_clone,\\n  datum: selection_datum,\\n  on: selection_on,\\n  dispatch: selection_dispatch\\n};\\n\\nexport default selection;\\n\",\"import {Selection} from \\\"./index\\\";\\nimport selector from \\\"../selector\\\";\\n\\nexport default function(select) {\\n  if (typeof select !== \\\"function\\\") select = selector(select);\\n\\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\\n        if (\\\"__data__\\\" in node) subnode.__data__ = node.__data__;\\n        subgroup[i] = subnode;\\n      }\\n    }\\n  }\\n\\n  return new Selection(subgroups, this._parents);\\n}\\n\",\"import {Selection} from \\\"./index\\\";\\nimport selectorAll from \\\"../selectorAll\\\";\\n\\nexport default function(select) {\\n  if (typeof select !== \\\"function\\\") select = selectorAll(select);\\n\\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\\n      if (node = group[i]) {\\n        subgroups.push(select.call(node, node.__data__, i, group));\\n        parents.push(node);\\n      }\\n    }\\n  }\\n\\n  return new Selection(subgroups, parents);\\n}\\n\",\"import {Selection} from \\\"./index\\\";\\nimport matcher from \\\"../matcher\\\";\\n\\nexport default function(match) {\\n  if (typeof match !== \\\"function\\\") match = matcher(match);\\n\\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\\n        subgroup.push(node);\\n      }\\n    }\\n  }\\n\\n  return new Selection(subgroups, this._parents);\\n}\\n\",\"export default function(selector) {\\n  return function() {\\n    return this.matches(selector);\\n  };\\n}\\n\",\"import sparse from \\\"./sparse\\\";\\nimport {Selection} from \\\"./index\\\";\\n\\nexport default function() {\\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\\n}\\n\",\"export default function(onenter, onupdate, onexit) {\\n  var enter = this.enter(), update = this, exit = this.exit();\\n  enter = typeof onenter === \\\"function\\\" ? onenter(enter) : enter.append(onenter + \\\"\\\");\\n  if (onupdate != null) update = onupdate(update);\\n  if (onexit == null) exit.remove(); else onexit(exit);\\n  return enter && update ? enter.merge(update).order() : update;\\n}\\n\",\"import {Selection} from \\\"./index\\\";\\n\\nexport default function(selection) {\\n\\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\\n      if (node = group0[i] || group1[i]) {\\n        merge[i] = node;\\n      }\\n    }\\n  }\\n\\n  for (; j < m0; ++j) {\\n    merges[j] = groups0[j];\\n  }\\n\\n  return new Selection(merges, this._parents);\\n}\\n\",\"export default function() {\\n\\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\\n      if (node = group[i]) {\\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\\n        next = node;\\n      }\\n    }\\n  }\\n\\n  return this;\\n}\\n\",\"export default function() {\\n  var callback = arguments[0];\\n  arguments[0] = this;\\n  callback.apply(null, arguments);\\n  return this;\\n}\\n\",\"export default function() {\\n  var nodes = new Array(this.size()), i = -1;\\n  this.each(function() { nodes[++i] = this; });\\n  return nodes;\\n}\\n\",\"export default function() {\\n\\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\\n      var node = group[i];\\n      if (node) return node;\\n    }\\n  }\\n\\n  return null;\\n}\\n\",\"export default function() {\\n  var size = 0;\\n  this.each(function() { ++size; });\\n  return size;\\n}\\n\",\"export default function() {\\n  return !this.node();\\n}\\n\",\"export default function(callback) {\\n\\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\\n    }\\n  }\\n\\n  return this;\\n}\\n\",\"import defaultView from \\\"../window\\\";\\n\\nfunction styleRemove(name) {\\n  return function() {\\n    this.style.removeProperty(name);\\n  };\\n}\\n\\nfunction styleConstant(name, value, priority) {\\n  return function() {\\n    this.style.setProperty(name, value, priority);\\n  };\\n}\\n\\nfunction styleFunction(name, value, priority) {\\n  return function() {\\n    var v = value.apply(this, arguments);\\n    if (v == null) this.style.removeProperty(name);\\n    else this.style.setProperty(name, v, priority);\\n  };\\n}\\n\\nexport default function(name, value, priority) {\\n  return arguments.length > 1\\n      ? this.each((value == null\\n            ? styleRemove : typeof value === \\\"function\\\"\\n            ? styleFunction\\n            : styleConstant)(name, value, priority == null ? \\\"\\\" : priority))\\n      : styleValue(this.node(), name);\\n}\\n\\nexport function styleValue(node, name) {\\n  return node.style.getPropertyValue(name)\\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\\n}\\n\",\"function propertyRemove(name) {\\n  return function() {\\n    delete this[name];\\n  };\\n}\\n\\nfunction propertyConstant(name, value) {\\n  return function() {\\n    this[name] = value;\\n  };\\n}\\n\\nfunction propertyFunction(name, value) {\\n  return function() {\\n    var v = value.apply(this, arguments);\\n    if (v == null) delete this[name];\\n    else this[name] = v;\\n  };\\n}\\n\\nexport default function(name, value) {\\n  return arguments.length > 1\\n      ? this.each((value == null\\n          ? propertyRemove : typeof value === \\\"function\\\"\\n          ? propertyFunction\\n          : propertyConstant)(name, value))\\n      : this.node()[name];\\n}\\n\",\"import creator from \\\"../creator\\\";\\n\\nexport default function(name) {\\n  var create = typeof name === \\\"function\\\" ? name : creator(name);\\n  return this.select(function() {\\n    return this.appendChild(create.apply(this, arguments));\\n  });\\n}\\n\",\"export default function(value) {\\n  return arguments.length\\n      ? this.property(\\\"__data__\\\", value)\\n      : this.node().__data__;\\n}\\n\",\"var nextId = 0;\\n\\nexport default function local() {\\n  return new Local;\\n}\\n\\nfunction Local() {\\n  this._ = \\\"@\\\" + (++nextId).toString(36);\\n}\\n\\nLocal.prototype = local.prototype = {\\n  constructor: Local,\\n  get: function(node) {\\n    var id = this._;\\n    while (!(id in node)) if (!(node = node.parentNode)) return;\\n    return node[id];\\n  },\\n  set: function(node, value) {\\n    return node[this._] = value;\\n  },\\n  remove: function(node) {\\n    return this._ in node && delete node[this._];\\n  },\\n  toString: function() {\\n    return this._;\\n  }\\n};\\n\",\"import {event} from \\\"./selection/on\\\";\\n\\nexport default function() {\\n  var current = event, source;\\n  while (source = current.sourceEvent) current = source;\\n  return current;\\n}\\n\",\"import * as d3 from 'd3';\\nimport * as tip from 'd3-tip';\\nimport './application.scss'\\n\\n// let svg = d3.select('#chart-area')\\n//     .append('svg')\\n//     .attr('width', '400')\\n//     .attr('height', '400');\\n\\n// d3.json('data/nba.json').then((data) => {\\n//     console.log(data);\\n\\n//     data.forEach((d) => {\\n//         d.height = +d.height;\\n//     });\\n\\n//     let rects = svg.selectAll('rect')\\n//         .data(data)\\n//         .enter().append('rect')\\n//         .attr('y', 0)\\n//         .attr('x', (d, i) => (i * 60))\\n//         .attr('width', 40)\\n//         .attr('height', (d) => d.height)\\n//         .attr('fill', (d) => 'grey');\\n// });\\n\\n\\n\\nlet allStars = [\\n    \\\"LeBron James\\\",\\n    \\\"Giannis Antetokounmpo\\\",\\n    \\\"Kevin Durant\\\",\\n    \\\"Stephen Curry\\\",\\n    \\\"Kyrie Irving\\\",\\n    \\\"Joel Embiid\\\",\\n    \\\"Kawhi Leonard\\\",\\n    \\\"Paul George\\\",\\n    \\\"James Harden\\\",\\n    \\\"Kemba Walker\\\",\\n    \\\"Khris Middleton\\\",\\n    \\\"Anthony Davis\\\",\\n    \\\"Nikola Jokic\\\",\\n    \\\"Klay Thompson\\\",\\n    \\\"Ben Simmons\\\",\\n    \\\"Damian Lillard\\\",\\n    \\\"Blake Griffin\\\",\\n    \\\"Russell Westbrook\\\",\\n    \\\"D'Angelo Russell\\\",\\n    \\\"LaMarcus Aldridge\\\",\\n    \\\"Nikola Vucevic\\\",\\n    \\\"Karl-Anthony Towns\\\",\\n    \\\"Kyle Lowry\\\",\\n    \\\"Bradley Beal\\\",\\n    \\\"Dwyane Wade\\\",\\n    \\\"Dirk Nowitzki\\\",\\n]\\n\\n\\n\\n\\n// require('./application.scss');\\n\\nArray.prototype.getUnique = function () {\\n    var o = {}, a = [], i, e;\\n    for (i = 0; e = this[i]; i++) { o[e] = 1 };\\n    for (e in o) { a.push(e) };\\n    return a;\\n}\\n\\nfetch('../data/nba.json')\\n    .then(res => res.json())\\n    .then(json => {\\n        let diameter = window.innerWidth;\\n        let width = window.innerWidth;\\n        let heightRatio = (946 / window.innerHeight);\\n        let height = window.innerHeight * heightRatio;\\n        if (window.innerHeight >= 946) {\\n            height = window.innerHeight\\n        }\\n\\n        // let margin = { top: 220, right: 120, bottom: 220, left: 120 };\\n        // width = width,\\n        // height = height;\\n\\n        let i = 0,\\n            duration = 300,\\n            root;\\n\\n\\n\\n        ///\\n\\n        //\\n        let twentyNineTeen = json;\\n\\n      console.log(\\\"Before the tree\\\");\\n        //DISTANCE BETWEN CLUSTERS\\n      console.log(d3);\\n      console.log(d3.layout);\\n        let tree = d3.layout.tree()\\n            .size([360, (diameter / 2 - 80)])\\n            .separation(function (a, b) { return (a.parent === b.parent ? 1.5 : 2.7) / a.depth; });\\n\\n        let diagonal = d3.svg.diagonal.radial()\\n            .projection(function (d) { return [d.y, d.x / 180 * Math.PI]; });\\n\\n        let svg = d3.select(\\\"body\\\").append(\\\"svg\\\")\\n            //  .attr('class', \\\"radial-tree\\\");\\n            .attr(\\\"width\\\", width)\\n            .attr(\\\"height\\\", height)\\n            .append(\\\"g\\\")\\n            .attr(\\\"transform\\\", \\\"translate(\\\" + width / 2 + \\\",\\\" + height / 2 + \\\")\\\")\\n        // .on('mouseover', function(d, i){\\n        //     tip.show(d,i);\\n        // });\\n        root = twentyNineTeen;\\n        root.x0 = 0;\\n        root.y0 = 0;\\n\\n\\n        var tip = d3.tip()\\n            .attr('class', 'd3-tip')\\n        tip.offset(function (d) {\\n            //   console.log('x', d.x);\\n            //   console.log('y', d.y);\\n            //   return [0,0]\\n            return [-d.x, -d.x];\\n        })\\n            .html(function (d) {\\n                if (d.name.length > 3) {\\n                    if (allStars.includes(d.name)) {\\n                        return (\\n                            \\\"<div id='positioner-all-star'><div id='profile-all-star'> <center><h2 id='all-star-name'>\\\" + d.name + \\\"</h2></center>\\\" + d.img + \\\"<div id='stats-all-star'>\\\" + \\\"<div id='stats-left-all-star'>\\\" + \\\"<div>\\\" + \\\"PTS - \\\" + d.points + \\\"</div>\\\" + \\\"<div>\\\" + \\\"RB - \\\" + d.rebounds + \\\"</div>\\\" + \\\"<div>\\\" + \\\"AST - \\\" + d.assists + \\\"</div>\\\" + \\\"</div>\\\"\\n                            + \\\"<div id='stats-right-all-star'>\\\" + \\\"<div>\\\" + \\\"FG% - \\\" + d.FG + \\\"</div>\\\" + \\\"<div>\\\" + \\\"FG3% - \\\" + d.FG3 + \\\"</div>\\\" + \\\"<div>\\\" + \\\"FT% - \\\" + d.FT + \\\"</div>\\\" + \\\"</div>\\\" + \\\"</div>\\\");\\n\\n                    }\\n                    else {\\n                        return (\\n                            \\\"<div id='positioner'><div id='profile'> <center><h2>\\\" + d.name + \\\"</h2></center>\\\" + d.img + \\\"<div id='stats'>\\\" + \\\"<div id='stats-left'>\\\" + \\\"<div>\\\" + \\\"PTS - \\\" + d.points + \\\"</div>\\\" + \\\"<div>\\\" + \\\"RB - \\\" + d.rebounds + \\\"</div>\\\" + \\\"<div>\\\" + \\\"AST - \\\" + d.assists + \\\"</div>\\\" + \\\"</div>\\\"\\n                            + \\\"<div id='stats-right'>\\\" + \\\"<div>\\\" + \\\"FG% - \\\" + d.FG + \\\"</div>\\\" + \\\"<div>\\\" + \\\"FG3% - \\\" + d.FG3 + \\\"</div>\\\" + \\\"<div>\\\" + \\\"FT% - \\\" + d.FT + \\\"</div>\\\" + \\\"</div>\\\" + \\\"</div>\\\");\\n\\n                    }\\n                }\\n            })\\n\\n\\n        svg.call(tip);\\n\\n        root.children.forEach(collapse); // start with all children collapsed\\n        update(root);\\n\\n\\n        d3.select(self.frameElement).style(\\\"height\\\", \\\"800px\\\");\\n\\n\\n        function update(source) {\\n\\n            // Compute the new tree layout.\\n            let nodes = tree.nodes(root),\\n                links = tree.links(nodes);\\n            let initial = new Set();\\n            let maxQueue = [];\\n\\n            nodes.forEach(function (d) {\\n                if (d.name.length <= 3 && d.name !== \\\"NBA\\\") {\\n                    initial.add(d);\\n                }\\n                if (d.name === \\\"NBA\\\") {\\n                    d.y = d.depth * 1;\\n                }\\n                else if (d.parent.name === \\\"NBA\\\") {\\n                    d.y = d.depth * 175;\\n                }\\n                else {\\n                    d.y = d.depth * 125;\\n                }\\n\\n            });\\n\\n            // Update the nodes…\\n            let node = svg.selectAll(\\\"g.node\\\")\\n                .data(nodes, function (d) { return d.id || (d.id = ++i); })\\n                .on(\\\"mouseover\\\", tip.show)\\n                .on(\\\"mouseout\\\", tip.hide)\\n\\n\\n\\n\\n            function handleMouseOver(d, i) {  // Add interactivity\\n                // console.log(d)\\n            }\\n\\n            function handleMouseOut(d, i) {\\n                // Use D3 to select element, change color back to normal\\n                d3.select(this).attr({\\n                    fill: \\\"black\\\",\\n                    // r: 20\\n                });\\n\\n                // Select text by id and then remove\\n                // d3.select(\\\"#t\\\" + d.x + \\\"-\\\" + d.y + \\\"-\\\" + i).remove();  // Remove text location\\n            }\\n\\n\\n            // Enter any new nodes at the parent's previous position.\\n            let nodeEnter = node.enter().append(\\\"g\\\")\\n                .attr(\\\"class\\\", \\\"node\\\")\\n                //.attr(\\\"transform\\\", function(d) { return \\\"rotate(\\\" + (d.x - 90) + \\\")translate(\\\" + d.y + \\\")\\\"; })\\n                .on(\\\"click\\\", click);\\n\\n            nodeEnter.append(\\\"circle\\\")\\n                .on('mouseover', function (d) {\\n                    console.log(\\\"WHAT\\\");\\n                })\\n\\n\\n\\n\\n            nodeEnter.append(\\\"text\\\")\\n                .attr(\\\"x\\\", 30)\\n                .attr(\\\"dy\\\", \\\".35em\\\")\\n                .attr(\\\"text-anchor\\\", \\\"start\\\")\\n                .attr(\\\"transform\\\", function (d) { return d.x < 180 ? \\\"translate(0)\\\" : \\\"rotate(180)translate(-\\\" + (d.name.length * 8.5) + \\\")\\\"; })\\n                .text(function (d) {\\n                    if (d.depth === 2) {\\n                        let allstarName = \\\"✭\\\" + d.name + \\\"✭\\\"\\n                        return allStars.includes(d.name) ? allstarName : d.name;\\n                    };\\n                })\\n                .attr('class', function (d) {\\n                    if (allStars.includes(d.name)) {\\n                        return \\\"all-star\\\"\\n                    }\\n                    else {\\n                        return 'non-all-star'\\n                    }\\n                }\\n                )\\n                .style(\\\"fill-opacity\\\", 1e-6)\\n\\n            var imgs = svg.selectAll(\\\"image\\\").data([0]);\\n            imgs.enter()\\n                .append(\\\"svg:image\\\")\\n\\n            //Image Attributes\\n            nodeEnter.append(\\\"svg:image\\\")\\n                .attr('x', function (d) {\\n                    if (d.name === \\\"NBA\\\") {\\n                        return -50\\n                    }\\n                    else {\\n                        return -25;\\n                    }\\n                }\\n                )\\n                .attr('y', function (d) {\\n                    if (d.name === \\\"NBA\\\") {\\n                        return -50\\n                    }\\n                    else {\\n                        return -25;\\n                    }\\n                })\\n                .attr('width', function (d) {\\n                    if (d.name === \\\"NBA\\\") {\\n                        return 100\\n                    }\\n                    else {\\n                        return 50;\\n                    }\\n                })\\n                .attr('height', function (d) {\\n                    if (d.name === \\\"NBA\\\") {\\n                        return 100\\n                    }\\n                    else {\\n                        return 50;\\n                    }\\n                }\\n                )\\n                .attr('transform', function (d) {\\n                    let nameArray = [\\\"ATL\\\", \\\"BOS\\\", \\\"BKN\\\", \\\"CHA\\\", \\\"CHI\\\", \\\"CLE\\\", \\\"DAL\\\", \\\"DEN\\\", \\\"DET\\\", \\\"GSW\\\", \\\"HOU\\\", \\\"IND\\\", \\\"LAC\\\", \\\"LAL\\\", \\\"MEM\\\", \\\"MIA\\\", \\\"MIL\\\", \\\"MIN\\\", \\\"NO\\\", \\\"NYK\\\", \\\"OKC\\\", \\\"ORL\\\", \\\"PHI\\\", \\\"PHX\\\", \\\"POR\\\", \\\"SAC\\\", \\\"SAS\\\", \\\"TOR\\\", \\\"UTH\\\", \\\"WAS\\\"]\\n                    if (d.name === \\\"NBA\\\") {\\n                        return \\\"rotate(-90 0 0)\\\"\\n                    }\\n                    const isTeamName = (str) => str.length <= 3;\\n\\n                    if (isTeamName(d.name)) {\\n                        let convertedRotation = (83 - ((nameArray.indexOf(d.name)) * 12));\\n                        return `rotate(${convertedRotation} 0 0)`;\\n                    }\\n                })\\n                .attr(\\\"xlink:href\\\", function (d) {\\n                    if (d.name === \\\"NBA\\\") {\\n                        return \\\"https://castrstatic-5doxhowepfdd9.stackpathdns.com/portal.sportscastr.com/v1/media/logos/Circle/NBA_Logo.png\\\"\\n                    }\\n                    else if (d.name.length <= 3) {\\n                        return `https://a.espncdn.com/combiner/i?img=/i/teamlogos/nba/500/${d.name.toLowerCase()}.png&h=80&w=80&scale=crop`\\n                    }\\n\\n                }\\n                )\\n\\n\\n\\n\\n\\n            // Transition nodes to their new position.\\n            let nodeUpdate = node.transition()\\n                .duration(duration)\\n                .attr(\\\"transform\\\", function (d) { return \\\"rotate(\\\" + (d.x - 90) + \\\")translate(\\\" + d.y + \\\")\\\"; })\\n\\n\\n            //size of node circle\\n            nodeUpdate.select(\\\"circle\\\")\\n                .attr(\\\"r\\\", function (d) {\\n                    if (d.depth === 1) {\\n                        return 25;\\n                    }\\n                    else if (d.depth === 0) {\\n                        return 50;\\n                    }\\n                    else {\\n                        return 2.5;\\n                    }\\n                }\\n                )\\n                .style(\\\"fill\\\", function (d) { return d._children ? \\\"rgba(167, 167, 167, 0.294)\\\" : \\\"rgba(67, 57, 167, 0.694)\\\"; });\\n            //  .on(\\\"mouseover\\\", function (d) {\\n            //    var g = d3.select(this); // The node\\n            //    g.attr('r', 40);\\n            // })\\n\\n            nodeUpdate.select(\\\"text\\\")\\n                .style(\\\"fill-opacity\\\", 1)\\n                //FLIP WHEN HALF WAY\\n                .attr(\\\"transform\\\", function (d) { return d.x < 180 ? \\\"translate(0)\\\" : \\\"rotate(180)translate(-\\\" + (d.name.length + 158) + \\\")\\\"; });\\n\\n            // TODO: appropriate transform\\n            let nodeExit = node.exit().transition()\\n                .duration(duration)\\n                //.attr(\\\"transform\\\", function(d) { return \\\"diagonal(\\\" + source.y + \\\",\\\" + source.x + \\\")\\\"; })\\n                .remove();\\n\\n            nodeExit.select(\\\"circle\\\")\\n                .attr(\\\"r\\\", 1e-6);\\n\\n            nodeExit.select(\\\"text\\\")\\n                .style(\\\"fill-opacity\\\", 1e-6);\\n\\n            // Update the links…\\n            let link = svg.selectAll(\\\"path.link\\\")\\n                .data(links, function (d) { return d.target.id; });\\n\\n            // Enter any new links at the parent's previous position.\\n            link.enter().insert(\\\"path\\\", \\\"g\\\")\\n                .attr(\\\"class\\\", \\\"link\\\")\\n                .attr(\\\"d\\\", function (d) {\\n                    let o = { x: source.x0, y: source.y0 };\\n                    return diagonal({ source: o, target: o });\\n                });\\n\\n            // Transition links to their new position.\\n            link.transition()\\n                .duration(duration)\\n                .attr(\\\"d\\\", diagonal);\\n\\n            // Transition exiting nodes to the parent's new position.\\n            link.exit().transition()\\n                .duration(duration)\\n                .attr(\\\"d\\\", function (d) {\\n                    let o = { x: source.x, y: source.y };\\n                    return diagonal({ source: o, target: o });\\n                })\\n                .remove();\\n\\n            // Stash the old positions for transition.\\n            nodes.forEach(function (d) {\\n                d.x0 = d.x;\\n                d.y0 = d.y;\\n            });\\n        }\\n\\n\\n        function removeFromCounter(node, queue) {\\n            let newQueue = [];\\n            queue.forEach(x => {\\n                if (x.name !== node.name) {\\n                    newQueue.push(x);\\n                }\\n            })\\n\\n            return newQueue;\\n        }\\n\\n\\n        let counter = [];\\n\\n\\n        function click(d) {\\n            height = window.innerHeight * 2;\\n            counter.getUnique();\\n\\n            if (d.children) {\\n                if (d.name.length < 4 && d.name !== \\\"NBA\\\") {\\n                    counter = removeFromCounter(d, counter);\\n                    d._children = d.children;\\n                    d.children = null;\\n\\n                }\\n            } else {\\n                if (d.name.length < 4 && d.name !== \\\"NBA\\\") {\\n                    counter.push(d);\\n                    d.children = d._children;\\n                    d._children = null;\\n                    if (counter.length > 6) {\\n                        collapse(counter.shift());\\n                    }\\n                }\\n            }\\n            if (d.name.length <= 3) {\\n                update(d);\\n            }\\n            update(d);\\n\\n        }\\n\\n        // Collapse nodes\\n        function collapse(d) {\\n            if (d.children) {\\n                d._children = d.children;\\n                d._children.forEach(collapse);\\n                d.children = null;\\n            }\\n        }\\n    });\"]}","code":"!function(n){var t={};function e(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return n[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=n,e.c=t,e.d=function(n,t,r){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:r})},e.r=function(n){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(n,\"__esModule\",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&\"object\"==typeof n&&n&&n.__esModule)return n;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:n}),2&t&&\"string\"!=typeof n)for(var i in n)e.d(r,i,function(t){return n[t]}.bind(null,i));return r},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,\"a\",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p=\"\",e(e.s=2)}([function(n,t,e){var r,i;!function(){var o={version:\"3.5.17\"},u=[].slice,a=function(n){return u.call(n)},l=this.document;function c(n){return n&&(n.ownerDocument||n.document||n).documentElement}function s(n){return n&&(n.ownerDocument&&n.ownerDocument.defaultView||n.document&&n||n.defaultView)}if(l)try{a(l.documentElement.childNodes)[0].nodeType}catch(n){a=function(n){for(var t=n.length,e=new Array(t);t--;)e[t]=n[t];return e}}if(Date.now||(Date.now=function(){return+new Date}),l)try{l.createElement(\"DIV\").style.setProperty(\"opacity\",0,\"\")}catch(n){var f=this.Element.prototype,h=f.setAttribute,p=f.setAttributeNS,g=this.CSSStyleDeclaration.prototype,v=g.setProperty;f.setAttribute=function(n,t){h.call(this,n,t+\"\")},f.setAttributeNS=function(n,t,e){p.call(this,n,t,e+\"\")},g.setProperty=function(n,t,e){v.call(this,n,t+\"\",e)}}function d(n,t){return n<t?-1:n>t?1:n>=t?0:NaN}function y(n){return null===n?NaN:+n}function m(n){return!isNaN(n)}function x(n){return{left:function(t,e,r,i){for(arguments.length<3&&(r=0),arguments.length<4&&(i=t.length);r<i;){var o=r+i>>>1;n(t[o],e)<0?r=o+1:i=o}return r},right:function(t,e,r,i){for(arguments.length<3&&(r=0),arguments.length<4&&(i=t.length);r<i;){var o=r+i>>>1;n(t[o],e)>0?i=o:r=o+1}return r}}}o.ascending=d,o.descending=function(n,t){return t<n?-1:t>n?1:t>=n?0:NaN},o.min=function(n,t){var e,r,i=-1,o=n.length;if(1===arguments.length){for(;++i<o;)if(null!=(r=n[i])&&r>=r){e=r;break}for(;++i<o;)null!=(r=n[i])&&e>r&&(e=r)}else{for(;++i<o;)if(null!=(r=t.call(n,n[i],i))&&r>=r){e=r;break}for(;++i<o;)null!=(r=t.call(n,n[i],i))&&e>r&&(e=r)}return e},o.max=function(n,t){var e,r,i=-1,o=n.length;if(1===arguments.length){for(;++i<o;)if(null!=(r=n[i])&&r>=r){e=r;break}for(;++i<o;)null!=(r=n[i])&&r>e&&(e=r)}else{for(;++i<o;)if(null!=(r=t.call(n,n[i],i))&&r>=r){e=r;break}for(;++i<o;)null!=(r=t.call(n,n[i],i))&&r>e&&(e=r)}return e},o.extent=function(n,t){var e,r,i,o=-1,u=n.length;if(1===arguments.length){for(;++o<u;)if(null!=(r=n[o])&&r>=r){e=i=r;break}for(;++o<u;)null!=(r=n[o])&&(e>r&&(e=r),i<r&&(i=r))}else{for(;++o<u;)if(null!=(r=t.call(n,n[o],o))&&r>=r){e=i=r;break}for(;++o<u;)null!=(r=t.call(n,n[o],o))&&(e>r&&(e=r),i<r&&(i=r))}return[e,i]},o.sum=function(n,t){var e,r=0,i=n.length,o=-1;if(1===arguments.length)for(;++o<i;)m(e=+n[o])&&(r+=e);else for(;++o<i;)m(e=+t.call(n,n[o],o))&&(r+=e);return r},o.mean=function(n,t){var e,r=0,i=n.length,o=-1,u=i;if(1===arguments.length)for(;++o<i;)m(e=y(n[o]))?r+=e:--u;else for(;++o<i;)m(e=y(t.call(n,n[o],o)))?r+=e:--u;if(u)return r/u},o.quantile=function(n,t){var e=(n.length-1)*t+1,r=Math.floor(e),i=+n[r-1],o=e-r;return o?i+o*(n[r]-i):i},o.median=function(n,t){var e,r=[],i=n.length,u=-1;if(1===arguments.length)for(;++u<i;)m(e=y(n[u]))&&r.push(e);else for(;++u<i;)m(e=y(t.call(n,n[u],u)))&&r.push(e);if(r.length)return o.quantile(r.sort(d),.5)},o.variance=function(n,t){var e,r,i=n.length,o=0,u=0,a=-1,l=0;if(1===arguments.length)for(;++a<i;)m(e=y(n[a]))&&(u+=(r=e-o)*(e-(o+=r/++l)));else for(;++a<i;)m(e=y(t.call(n,n[a],a)))&&(u+=(r=e-o)*(e-(o+=r/++l)));if(l>1)return u/(l-1)},o.deviation=function(){var n=o.variance.apply(this,arguments);return n?Math.sqrt(n):n};var M=x(d);function _(n){return n.length}o.bisectLeft=M.left,o.bisect=o.bisectRight=M.right,o.bisector=function(n){return x(1===n.length?function(t,e){return d(n(t),e)}:n)},o.shuffle=function(n,t,e){(o=arguments.length)<3&&(e=n.length,o<2&&(t=0));for(var r,i,o=e-t;o;)i=Math.random()*o--|0,r=n[o+t],n[o+t]=n[i+t],n[i+t]=r;return n},o.permute=function(n,t){for(var e=t.length,r=new Array(e);e--;)r[e]=n[t[e]];return r},o.pairs=function(n){for(var t=0,e=n.length-1,r=n[0],i=new Array(e<0?0:e);t<e;)i[t]=[r,r=n[++t]];return i},o.transpose=function(n){if(!(i=n.length))return[];for(var t=-1,e=o.min(n,_),r=new Array(e);++t<e;)for(var i,u=-1,a=r[t]=new Array(i);++u<i;)a[u]=n[u][t];return r},o.zip=function(){return o.transpose(arguments)},o.keys=function(n){var t=[];for(var e in n)t.push(e);return t},o.values=function(n){var t=[];for(var e in n)t.push(n[e]);return t},o.entries=function(n){var t=[];for(var e in n)t.push({key:e,value:n[e]});return t},o.merge=function(n){for(var t,e,r,i=n.length,o=-1,u=0;++o<i;)u+=n[o].length;for(e=new Array(u);--i>=0;)for(t=(r=n[i]).length;--t>=0;)e[--u]=r[t];return e};var w=Math.abs;function b(n,t){for(var e in t)Object.defineProperty(n.prototype,e,{value:t[e],enumerable:!1})}function S(){this._=Object.create(null)}o.range=function(n,t,e){if(arguments.length<3&&(e=1,arguments.length<2&&(t=n,n=0)),(t-n)/e==1/0)throw new Error(\"infinite range\");var r,i=[],o=function(n){var t=1;for(;n*t%1;)t*=10;return t}(w(e)),u=-1;if(n*=o,t*=o,(e*=o)<0)for(;(r=n+e*++u)>t;)i.push(r/o);else for(;(r=n+e*++u)<t;)i.push(r/o);return i},o.map=function(n,t){var e=new S;if(n instanceof S)n.forEach(function(n,t){e.set(n,t)});else if(Array.isArray(n)){var r,i=-1,o=n.length;if(1===arguments.length)for(;++i<o;)e.set(i,n[i]);else for(;++i<o;)e.set(t.call(n,r=n[i],i),r)}else for(var u in n)e.set(u,n[u]);return e};var N=\"__proto__\",k=\"\\0\";function A(n){return(n+=\"\")===N||n[0]===k?k+n:n}function E(n){return(n+=\"\")[0]===k?n.slice(1):n}function C(n){return A(n)in this._}function L(n){return(n=A(n))in this._&&delete this._[n]}function T(){var n=[];for(var t in this._)n.push(E(t));return n}function z(){var n=0;for(var t in this._)++n;return n}function q(){for(var n in this._)return!1;return!0}function D(){this._=Object.create(null)}function R(n){return n}function P(n,t,e){return function(){var r=e.apply(t,arguments);return r===t?n:r}}function j(n,t){if(t in n)return t;t=t.charAt(0).toUpperCase()+t.slice(1);for(var e=0,r=U.length;e<r;++e){var i=U[e]+t;if(i in n)return i}}b(S,{has:C,get:function(n){return this._[A(n)]},set:function(n,t){return this._[A(n)]=t},remove:L,keys:T,values:function(){var n=[];for(var t in this._)n.push(this._[t]);return n},entries:function(){var n=[];for(var t in this._)n.push({key:E(t),value:this._[t]});return n},size:z,empty:q,forEach:function(n){for(var t in this._)n.call(this,E(t),this._[t])}}),o.nest=function(){var n,t,e={},r=[],i=[];function u(i,o,a){if(a>=r.length)return t?t.call(e,o):n?o.sort(n):o;for(var l,c,s,f,h=-1,p=o.length,g=r[a++],v=new S;++h<p;)(f=v.get(l=g(c=o[h])))?f.push(c):v.set(l,[c]);return i?(c=i(),s=function(n,t){c.set(n,u(i,t,a))}):(c={},s=function(n,t){c[n]=u(i,t,a)}),v.forEach(s),c}return e.map=function(n,t){return u(t,n,0)},e.entries=function(n){return function n(t,e){if(e>=r.length)return t;var o=[],u=i[e++];return t.forEach(function(t,r){o.push({key:t,values:n(r,e)})}),u?o.sort(function(n,t){return u(n.key,t.key)}):o}(u(o.map,n,0),0)},e.key=function(n){return r.push(n),e},e.sortKeys=function(n){return i[r.length-1]=n,e},e.sortValues=function(t){return n=t,e},e.rollup=function(n){return t=n,e},e},o.set=function(n){var t=new D;if(n)for(var e=0,r=n.length;e<r;++e)t.add(n[e]);return t},b(D,{has:C,add:function(n){return this._[A(n+=\"\")]=!0,n},remove:L,values:T,size:z,empty:q,forEach:function(n){for(var t in this._)n.call(this,E(t))}}),o.behavior={},o.rebind=function(n,t){for(var e,r=1,i=arguments.length;++r<i;)n[e=arguments[r]]=P(n,t,t[e]);return n};var U=[\"webkit\",\"ms\",\"moz\",\"Moz\",\"o\",\"O\"];function O(){}function H(){}function F(n){var t=[],e=new S;function r(){for(var e,r=t,i=-1,o=r.length;++i<o;)(e=r[i].on)&&e.apply(this,arguments);return n}return r.on=function(r,i){var o,u=e.get(r);return arguments.length<2?u&&u.on:(u&&(u.on=null,t=t.slice(0,o=t.indexOf(u)).concat(t.slice(o+1)),e.remove(r)),i&&t.push(e.set(r,{on:i})),n)},r}function I(){o.event.preventDefault()}function B(){for(var n,t=o.event;n=t.sourceEvent;)t=n;return t}function Y(n){for(var t=new H,e=0,r=arguments.length;++e<r;)t[arguments[e]]=F(t);return t.of=function(e,r){return function(i){try{var u=i.sourceEvent=o.event;i.target=n,o.event=i,t[i.type].apply(e,r)}finally{o.event=u}}},t}o.dispatch=function(){for(var n=new H,t=-1,e=arguments.length;++t<e;)n[arguments[t]]=F(n);return n},H.prototype.on=function(n,t){var e=n.indexOf(\".\"),r=\"\";if(e>=0&&(r=n.slice(e+1),n=n.slice(0,e)),n)return arguments.length<2?this[n].on(r):this[n].on(r,t);if(2===arguments.length){if(null==t)for(n in this)this.hasOwnProperty(n)&&this[n].on(r,null);return this}},o.event=null,o.requote=function(n){return n.replace($,\"\\\\$&\")};var $=/[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g,V={}.__proto__?function(n,t){n.__proto__=t}:function(n,t){for(var e in t)n[e]=t[e]};function Z(n){return V(n,K),n}var X=function(n,t){return t.querySelector(n)},G=function(n,t){return t.querySelectorAll(n)},W=function(n,t){var e=n.matches||n[j(n,\"matchesSelector\")];return(W=function(n,t){return e.call(n,t)})(n,t)};\"function\"==typeof Sizzle&&(X=function(n,t){return Sizzle(n,t)[0]||null},G=Sizzle,W=Sizzle.matchesSelector),o.selection=function(){return o.select(l.documentElement)};var K=o.selection.prototype=[];function J(n){return\"function\"==typeof n?n:function(){return X(n,this)}}function Q(n){return\"function\"==typeof n?n:function(){return G(n,this)}}K.select=function(n){var t,e,r,i,o=[];n=J(n);for(var u=-1,a=this.length;++u<a;){o.push(t=[]),t.parentNode=(r=this[u]).parentNode;for(var l=-1,c=r.length;++l<c;)(i=r[l])?(t.push(e=n.call(i,i.__data__,l,u)),e&&\"__data__\"in i&&(e.__data__=i.__data__)):t.push(null)}return Z(o)},K.selectAll=function(n){var t,e,r=[];n=Q(n);for(var i=-1,o=this.length;++i<o;)for(var u=this[i],l=-1,c=u.length;++l<c;)(e=u[l])&&(r.push(t=a(n.call(e,e.__data__,l,i))),t.parentNode=e);return Z(r)};var nn=\"http://www.w3.org/1999/xhtml\",tn={svg:\"http://www.w3.org/2000/svg\",xhtml:nn,xlink:\"http://www.w3.org/1999/xlink\",xml:\"http://www.w3.org/XML/1998/namespace\",xmlns:\"http://www.w3.org/2000/xmlns/\"};function en(n,t){return n=o.ns.qualify(n),null==t?n.local?function(){this.removeAttributeNS(n.space,n.local)}:function(){this.removeAttribute(n)}:\"function\"==typeof t?n.local?function(){var e=t.apply(this,arguments);null==e?this.removeAttributeNS(n.space,n.local):this.setAttributeNS(n.space,n.local,e)}:function(){var e=t.apply(this,arguments);null==e?this.removeAttribute(n):this.setAttribute(n,e)}:n.local?function(){this.setAttributeNS(n.space,n.local,t)}:function(){this.setAttribute(n,t)}}function rn(n){return n.trim().replace(/\\s+/g,\" \")}function on(n){return new RegExp(\"(?:^|\\\\s+)\"+o.requote(n)+\"(?:\\\\s+|$)\",\"g\")}function un(n){return(n+\"\").trim().split(/^|\\s+/)}function an(n,t){var e=(n=un(n).map(ln)).length;return\"function\"==typeof t?function(){for(var r=-1,i=t.apply(this,arguments);++r<e;)n[r](this,i)}:function(){for(var r=-1;++r<e;)n[r](this,t)}}function ln(n){var t=on(n);return function(e,r){if(i=e.classList)return r?i.add(n):i.remove(n);var i=e.getAttribute(\"class\")||\"\";r?(t.lastIndex=0,t.test(i)||e.setAttribute(\"class\",rn(i+\" \"+n))):e.setAttribute(\"class\",rn(i.replace(t,\" \")))}}function cn(n,t,e){return null==t?function(){this.style.removeProperty(n)}:\"function\"==typeof t?function(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(n):this.style.setProperty(n,r,e)}:function(){this.style.setProperty(n,t,e)}}function sn(n,t){return null==t?function(){delete this[n]}:\"function\"==typeof t?function(){var e=t.apply(this,arguments);null==e?delete this[n]:this[n]=e}:function(){this[n]=t}}function fn(n){return\"function\"==typeof n?n:(n=o.ns.qualify(n)).local?function(){return this.ownerDocument.createElementNS(n.space,n.local)}:function(){var t=this.ownerDocument,e=this.namespaceURI;return e===nn&&t.documentElement.namespaceURI===nn?t.createElement(n):t.createElementNS(e,n)}}function hn(){var n=this.parentNode;n&&n.removeChild(this)}function pn(n){return{__data__:n}}function gn(n){return function(){return W(this,n)}}function vn(n,t){for(var e=0,r=n.length;e<r;e++)for(var i,o=n[e],u=0,a=o.length;u<a;u++)(i=o[u])&&t(i,u,e);return n}function dn(n){return V(n,yn),n}o.ns={prefix:tn,qualify:function(n){var t=n.indexOf(\":\"),e=n;return t>=0&&\"xmlns\"!==(e=n.slice(0,t))&&(n=n.slice(t+1)),tn.hasOwnProperty(e)?{space:tn[e],local:n}:n}},K.attr=function(n,t){if(arguments.length<2){if(\"string\"==typeof n){var e=this.node();return(n=o.ns.qualify(n)).local?e.getAttributeNS(n.space,n.local):e.getAttribute(n)}for(t in n)this.each(en(t,n[t]));return this}return this.each(en(n,t))},K.classed=function(n,t){if(arguments.length<2){if(\"string\"==typeof n){var e=this.node(),r=(n=un(n)).length,i=-1;if(t=e.classList){for(;++i<r;)if(!t.contains(n[i]))return!1}else for(t=e.getAttribute(\"class\");++i<r;)if(!on(n[i]).test(t))return!1;return!0}for(t in n)this.each(an(t,n[t]));return this}return this.each(an(n,t))},K.style=function(n,t,e){var r=arguments.length;if(r<3){if(\"string\"!=typeof n){for(e in r<2&&(t=\"\"),n)this.each(cn(e,n[e],t));return this}if(r<2){var i=this.node();return s(i).getComputedStyle(i,null).getPropertyValue(n)}e=\"\"}return this.each(cn(n,t,e))},K.property=function(n,t){if(arguments.length<2){if(\"string\"==typeof n)return this.node()[n];for(t in n)this.each(sn(t,n[t]));return this}return this.each(sn(n,t))},K.text=function(n){return arguments.length?this.each(\"function\"==typeof n?function(){var t=n.apply(this,arguments);this.textContent=null==t?\"\":t}:null==n?function(){this.textContent=\"\"}:function(){this.textContent=n}):this.node().textContent},K.html=function(n){return arguments.length?this.each(\"function\"==typeof n?function(){var t=n.apply(this,arguments);this.innerHTML=null==t?\"\":t}:null==n?function(){this.innerHTML=\"\"}:function(){this.innerHTML=n}):this.node().innerHTML},K.append=function(n){return n=fn(n),this.select(function(){return this.appendChild(n.apply(this,arguments))})},K.insert=function(n,t){return n=fn(n),t=J(t),this.select(function(){return this.insertBefore(n.apply(this,arguments),t.apply(this,arguments)||null)})},K.remove=function(){return this.each(hn)},K.data=function(n,t){var e,r,i=-1,o=this.length;if(!arguments.length){for(n=new Array(o=(e=this[0]).length);++i<o;)(r=e[i])&&(n[i]=r.__data__);return n}function u(n,e){var r,i,o,u=n.length,s=e.length,f=Math.min(u,s),h=new Array(s),p=new Array(s),g=new Array(u);if(t){var v,d=new S,y=new Array(u);for(r=-1;++r<u;)(i=n[r])&&(d.has(v=t.call(i,i.__data__,r))?g[r]=i:d.set(v,i),y[r]=v);for(r=-1;++r<s;)(i=d.get(v=t.call(e,o=e[r],r)))?!0!==i&&(h[r]=i,i.__data__=o):p[r]=pn(o),d.set(v,!0);for(r=-1;++r<u;)r in y&&!0!==d.get(y[r])&&(g[r]=n[r])}else{for(r=-1;++r<f;)i=n[r],o=e[r],i?(i.__data__=o,h[r]=i):p[r]=pn(o);for(;r<s;++r)p[r]=pn(e[r]);for(;r<u;++r)g[r]=n[r]}p.update=h,p.parentNode=h.parentNode=g.parentNode=n.parentNode,a.push(p),l.push(h),c.push(g)}var a=dn([]),l=Z([]),c=Z([]);if(\"function\"==typeof n)for(;++i<o;)u(e=this[i],n.call(e,e.parentNode.__data__,i));else for(;++i<o;)u(e=this[i],n);return l.enter=function(){return a},l.exit=function(){return c},l},K.datum=function(n){return arguments.length?this.property(\"__data__\",n):this.property(\"__data__\")},K.filter=function(n){var t,e,r,i=[];\"function\"!=typeof n&&(n=gn(n));for(var o=0,u=this.length;o<u;o++){i.push(t=[]),t.parentNode=(e=this[o]).parentNode;for(var a=0,l=e.length;a<l;a++)(r=e[a])&&n.call(r,r.__data__,a,o)&&t.push(r)}return Z(i)},K.order=function(){for(var n=-1,t=this.length;++n<t;)for(var e,r=this[n],i=r.length-1,o=r[i];--i>=0;)(e=r[i])&&(o&&o!==e.nextSibling&&o.parentNode.insertBefore(e,o),o=e);return this},K.sort=function(n){n=function(n){arguments.length||(n=d);return function(t,e){return t&&e?n(t.__data__,e.__data__):!t-!e}}.apply(this,arguments);for(var t=-1,e=this.length;++t<e;)this[t].sort(n);return this.order()},K.each=function(n){return vn(this,function(t,e,r){n.call(t,t.__data__,e,r)})},K.call=function(n){var t=a(arguments);return n.apply(t[0]=this,t),this},K.empty=function(){return!this.node()},K.node=function(){for(var n=0,t=this.length;n<t;n++)for(var e=this[n],r=0,i=e.length;r<i;r++){var o=e[r];if(o)return o}return null},K.size=function(){var n=0;return vn(this,function(){++n}),n};var yn=[];function mn(n,t,e){var r=\"__on\"+n,i=n.indexOf(\".\"),u=Mn;i>0&&(n=n.slice(0,i));var l=xn.get(n);function c(){var t=this[r];t&&(this.removeEventListener(n,t,t.$),delete this[r])}return l&&(n=l,u=_n),i?t?function(){var i=u(t,a(arguments));c.call(this),this.addEventListener(n,this[r]=i,i.$=e),i._=t}:c:t?O:function(){var t,e=new RegExp(\"^__on([^.]+)\"+o.requote(n)+\"$\");for(var r in this)if(t=r.match(e)){var i=this[r];this.removeEventListener(t[1],i,i.$),delete this[r]}}}o.selection.enter=dn,o.selection.enter.prototype=yn,yn.append=K.append,yn.empty=K.empty,yn.node=K.node,yn.call=K.call,yn.size=K.size,yn.select=function(n){for(var t,e,r,i,o,u=[],a=-1,l=this.length;++a<l;){r=(i=this[a]).update,u.push(t=[]),t.parentNode=i.parentNode;for(var c=-1,s=i.length;++c<s;)(o=i[c])?(t.push(r[c]=e=n.call(i.parentNode,o.__data__,c,a)),e.__data__=o.__data__):t.push(null)}return Z(u)},yn.insert=function(n,t){var e,r,i;return arguments.length<2&&(e=this,t=function(n,t,o){var u,a=e[o].update,l=a.length;for(o!=i&&(i=o,r=0),t>=r&&(r=t+1);!(u=a[r])&&++r<l;);return u}),K.insert.call(this,n,t)},o.select=function(n){var t;return\"string\"==typeof n?(t=[X(n,l)]).parentNode=l.documentElement:(t=[n]).parentNode=c(n),Z([t])},o.selectAll=function(n){var t;return\"string\"==typeof n?(t=a(G(n,l))).parentNode=l.documentElement:(t=a(n)).parentNode=null,Z([t])},K.on=function(n,t,e){var r=arguments.length;if(r<3){if(\"string\"!=typeof n){for(e in r<2&&(t=!1),n)this.each(mn(e,n[e],t));return this}if(r<2)return(r=this.node()[\"__on\"+n])&&r._;e=!1}return this.each(mn(n,t,e))};var xn=o.map({mouseenter:\"mouseover\",mouseleave:\"mouseout\"});function Mn(n,t){return function(e){var r=o.event;o.event=e,t[0]=this.__data__;try{n.apply(this,t)}finally{o.event=r}}}function _n(n,t){var e=Mn(n,t);return function(n){var t=n.relatedTarget;t&&(t===this||8&t.compareDocumentPosition(this))||e.call(this,n)}}l&&xn.forEach(function(n){\"on\"+n in l&&xn.remove(n)});var wn,bn=0;function Sn(n){var t=\".dragsuppress-\"+ ++bn,e=\"click\"+t,r=o.select(s(n)).on(\"touchmove\"+t,I).on(\"dragstart\"+t,I).on(\"selectstart\"+t,I);if(null==wn&&(wn=!(\"onselectstart\"in n)&&j(n.style,\"userSelect\")),wn){var i=c(n).style,u=i[wn];i[wn]=\"none\"}return function(n){if(r.on(t,null),wn&&(i[wn]=u),n){var o=function(){r.on(e,null)};r.on(e,function(){I(),o()},!0),setTimeout(o,0)}}}o.mouse=function(n){return kn(n,B())};var Nn=this.navigator&&/WebKit/.test(this.navigator.userAgent)?-1:0;function kn(n,t){t.changedTouches&&(t=t.changedTouches[0]);var e=n.ownerSVGElement||n;if(e.createSVGPoint){var r=e.createSVGPoint();if(Nn<0){var i=s(n);if(i.scrollX||i.scrollY){var u=(e=o.select(\"body\").append(\"svg\").style({position:\"absolute\",top:0,left:0,margin:0,padding:0,border:\"none\"},\"important\"))[0][0].getScreenCTM();Nn=!(u.f||u.e),e.remove()}}return Nn?(r.x=t.pageX,r.y=t.pageY):(r.x=t.clientX,r.y=t.clientY),[(r=r.matrixTransform(n.getScreenCTM().inverse())).x,r.y]}var a=n.getBoundingClientRect();return[t.clientX-a.left-n.clientLeft,t.clientY-a.top-n.clientTop]}function An(){return o.event.changedTouches[0].identifier}o.touch=function(n,t,e){if(arguments.length<3&&(e=t,t=B().changedTouches),t)for(var r,i=0,o=t.length;i<o;++i)if((r=t[i]).identifier===e)return kn(n,r)},o.behavior.drag=function(){var n=Y(i,\"drag\",\"dragstart\",\"dragend\"),t=null,e=u(O,o.mouse,s,\"mousemove\",\"mouseup\"),r=u(An,o.touch,R,\"touchmove\",\"touchend\");function i(){this.on(\"mousedown.drag\",e).on(\"touchstart.drag\",r)}function u(e,r,i,u,a){return function(){var l,c=o.event.target.correspondingElement||o.event.target,s=this.parentNode,f=n.of(this,arguments),h=0,p=e(),g=\".drag\"+(null==p?\"\":\"-\"+p),v=o.select(i(c)).on(u+g,function(){var n,t,e=r(s,p);if(!e)return;n=e[0]-y[0],t=e[1]-y[1],h|=n|t,y=e,f({type:\"drag\",x:e[0]+l[0],y:e[1]+l[1],dx:n,dy:t})}).on(a+g,function(){if(!r(s,p))return;v.on(u+g,null).on(a+g,null),d(h),f({type:\"dragend\"})}),d=Sn(c),y=r(s,p);l=t?[(l=t.apply(this,arguments)).x-y[0],l.y-y[1]]:[0,0],f({type:\"dragstart\"})}}return i.origin=function(n){return arguments.length?(t=n,i):t},o.rebind(i,n,\"on\")},o.touches=function(n,t){return arguments.length<2&&(t=B().touches),t?a(t).map(function(t){var e=kn(n,t);return e.identifier=t.identifier,e}):[]};var En=1e-6,Cn=En*En,Ln=Math.PI,Tn=2*Ln,zn=Tn-En,qn=Ln/2,Dn=Ln/180,Rn=180/Ln;function Pn(n){return n>0?1:n<0?-1:0}function jn(n,t,e){return(t[0]-n[0])*(e[1]-n[1])-(t[1]-n[1])*(e[0]-n[0])}function Un(n){return n>1?0:n<-1?Ln:Math.acos(n)}function On(n){return n>1?qn:n<-1?-qn:Math.asin(n)}function Hn(n){return((n=Math.exp(n))+1/n)/2}function Fn(n){return(n=Math.sin(n/2))*n}var In=Math.SQRT2;o.interpolateZoom=function(n,t){var e,r,i=n[0],o=n[1],u=n[2],a=t[0],l=t[1],c=t[2],s=a-i,f=l-o,h=s*s+f*f;if(h<Cn)r=Math.log(c/u)/In,e=function(n){return[i+n*s,o+n*f,u*Math.exp(In*n*r)]};else{var p=Math.sqrt(h),g=(c*c-u*u+4*h)/(2*u*2*p),v=(c*c-u*u-4*h)/(2*c*2*p),d=Math.log(Math.sqrt(g*g+1)-g),y=Math.log(Math.sqrt(v*v+1)-v);r=(y-d)/In,e=function(n){var t,e=n*r,a=Hn(d),l=u/(2*p)*(a*(t=In*e+d,((t=Math.exp(2*t))-1)/(t+1))-function(n){return((n=Math.exp(n))-1/n)/2}(d));return[i+l*s,o+l*f,u*a/Hn(In*e+d)]}}return e.duration=1e3*r,e},o.behavior.zoom=function(){var n,t,e,r,i,u,a,c,f,h={x:0,y:0,k:1},p=[960,500],g=$n,v=250,d=0,y=\"mousedown.zoom\",m=\"mousemove.zoom\",x=\"mouseup.zoom\",M=\"touchstart.zoom\",_=Y(w,\"zoomstart\",\"zoom\",\"zoomend\");function w(n){n.on(y,T).on(Yn+\".zoom\",q).on(\"dblclick.zoom\",D).on(M,z)}function b(n){return[(n[0]-h.x)/h.k,(n[1]-h.y)/h.k]}function S(n){h.k=Math.max(g[0],Math.min(g[1],n))}function N(n,t){t=function(n){return[n[0]*h.k+h.x,n[1]*h.k+h.y]}(t),h.x+=n[0]-t[0],h.y+=n[1]-t[1]}function k(n,e,r,i){n.__chart__={x:h.x,y:h.y,k:h.k},S(Math.pow(2,i)),N(t=e,r),n=o.select(n),v>0&&(n=n.transition().duration(v)),n.call(w.event)}function A(){a&&a.domain(u.range().map(function(n){return(n-h.x)/h.k}).map(u.invert)),f&&f.domain(c.range().map(function(n){return(n-h.y)/h.k}).map(c.invert))}function E(n){d++||n({type:\"zoomstart\"})}function C(n){A(),n({type:\"zoom\",scale:h.k,translate:[h.x,h.y]})}function L(n){--d||(n({type:\"zoomend\"}),t=null)}function T(){var n=this,t=_.of(n,arguments),e=0,r=o.select(s(n)).on(m,function(){e=1,N(o.mouse(n),i),C(t)}).on(x,function(){r.on(m,null).on(x,null),u(e),L(t)}),i=b(o.mouse(n)),u=Sn(n);ya.call(n),E(t)}function z(){var n,t=this,e=_.of(t,arguments),r={},u=0,a=\".zoom-\"+o.event.changedTouches[0].identifier,l=\"touchmove\"+a,c=\"touchend\"+a,s=[],f=o.select(t),p=Sn(t);function g(){var e=o.touches(t);return n=h.k,e.forEach(function(n){n.identifier in r&&(r[n.identifier]=b(n))}),e}function v(){var n=o.event.target;o.select(n).on(l,d).on(c,m),s.push(n);for(var e=o.event.changedTouches,a=0,f=e.length;a<f;++a)r[e[a].identifier]=null;var p=g(),v=Date.now();if(1===p.length){if(v-i<500){var y=p[0];k(t,y,r[y.identifier],Math.floor(Math.log(h.k)/Math.LN2)+1),I()}i=v}else if(p.length>1){y=p[0];var x=p[1],M=y[0]-x[0],_=y[1]-x[1];u=M*M+_*_}}function d(){var a,l,c,s,f=o.touches(t);ya.call(t);for(var h=0,p=f.length;h<p;++h,s=null)if(c=f[h],s=r[c.identifier]){if(l)break;a=c,l=s}if(s){var g=(g=c[0]-a[0])*g+(g=c[1]-a[1])*g,v=u&&Math.sqrt(g/u);a=[(a[0]+c[0])/2,(a[1]+c[1])/2],l=[(l[0]+s[0])/2,(l[1]+s[1])/2],S(v*n)}i=null,N(a,l),C(e)}function m(){if(o.event.touches.length){for(var n=o.event.changedTouches,t=0,i=n.length;t<i;++t)delete r[n[t].identifier];for(var u in r)return void g()}o.selectAll(s).on(a,null),f.on(y,T).on(M,z),p(),L(e)}v(),E(e),f.on(y,null).on(M,v)}function q(){var i=_.of(this,arguments);r?clearTimeout(r):(ya.call(this),n=b(t=e||o.mouse(this)),E(i)),r=setTimeout(function(){r=null,L(i)},50),I(),S(Math.pow(2,.002*Bn())*h.k),N(t,n),C(i)}function D(){var n=o.mouse(this),t=Math.log(h.k)/Math.LN2;k(this,n,b(n),o.event.shiftKey?Math.ceil(t)-1:Math.floor(t)+1)}return Yn||(Yn=\"onwheel\"in l?(Bn=function(){return-o.event.deltaY*(o.event.deltaMode?120:1)},\"wheel\"):\"onmousewheel\"in l?(Bn=function(){return o.event.wheelDelta},\"mousewheel\"):(Bn=function(){return-o.event.detail},\"MozMousePixelScroll\")),w.event=function(n){n.each(function(){var n=_.of(this,arguments),e=h;Ma?o.select(this).transition().each(\"start.zoom\",function(){h=this.__chart__||{x:0,y:0,k:1},E(n)}).tween(\"zoom:zoom\",function(){var r=p[0],i=p[1],u=t?t[0]:r/2,a=t?t[1]:i/2,l=o.interpolateZoom([(u-h.x)/h.k,(a-h.y)/h.k,r/h.k],[(u-e.x)/e.k,(a-e.y)/e.k,r/e.k]);return function(t){var e=l(t),i=r/e[2];this.__chart__=h={x:u-e[0]*i,y:a-e[1]*i,k:i},C(n)}}).each(\"interrupt.zoom\",function(){L(n)}).each(\"end.zoom\",function(){L(n)}):(this.__chart__=h,E(n),C(n),L(n))})},w.translate=function(n){return arguments.length?(h={x:+n[0],y:+n[1],k:h.k},A(),w):[h.x,h.y]},w.scale=function(n){return arguments.length?(h={x:h.x,y:h.y,k:null},S(+n),A(),w):h.k},w.scaleExtent=function(n){return arguments.length?(g=null==n?$n:[+n[0],+n[1]],w):g},w.center=function(n){return arguments.length?(e=n&&[+n[0],+n[1]],w):e},w.size=function(n){return arguments.length?(p=n&&[+n[0],+n[1]],w):p},w.duration=function(n){return arguments.length?(v=+n,w):v},w.x=function(n){return arguments.length?(a=n,u=n.copy(),h={x:0,y:0,k:1},w):a},w.y=function(n){return arguments.length?(f=n,c=n.copy(),h={x:0,y:0,k:1},w):f},o.rebind(w,_,\"on\")};var Bn,Yn,$n=[0,1/0];function Vn(){}function Zn(n,t,e){return this instanceof Zn?(this.h=+n,this.s=+t,void(this.l=+e)):arguments.length<2?n instanceof Zn?new Zn(n.h,n.s,n.l):vt(\"\"+n,dt,Zn):new Zn(n,t,e)}o.color=Vn,Vn.prototype.toString=function(){return this.rgb()+\"\"},o.hsl=Zn;var Xn=Zn.prototype=new Vn;function Gn(n,t,e){var r,i;function o(n){return Math.round(255*function(n){return n>360?n-=360:n<0&&(n+=360),n<60?r+(i-r)*n/60:n<180?i:n<240?r+(i-r)*(240-n)/60:r}(n))}return n=isNaN(n)?0:(n%=360)<0?n+360:n,t=isNaN(t)?0:t<0?0:t>1?1:t,r=2*(e=e<0?0:e>1?1:e)-(i=e<=.5?e*(1+t):e+t-e*t),new st(o(n+120),o(n),o(n-120))}function Wn(n,t,e){return this instanceof Wn?(this.h=+n,this.c=+t,void(this.l=+e)):arguments.length<2?n instanceof Wn?new Wn(n.h,n.c,n.l):ut(n instanceof Qn?n.l:(n=yt((n=o.rgb(n)).r,n.g,n.b)).l,n.a,n.b):new Wn(n,t,e)}Xn.brighter=function(n){return n=Math.pow(.7,arguments.length?n:1),new Zn(this.h,this.s,this.l/n)},Xn.darker=function(n){return n=Math.pow(.7,arguments.length?n:1),new Zn(this.h,this.s,n*this.l)},Xn.rgb=function(){return Gn(this.h,this.s,this.l)},o.hcl=Wn;var Kn=Wn.prototype=new Vn;function Jn(n,t,e){return isNaN(n)&&(n=0),isNaN(t)&&(t=0),new Qn(e,Math.cos(n*=Dn)*t,Math.sin(n)*t)}function Qn(n,t,e){return this instanceof Qn?(this.l=+n,this.a=+t,void(this.b=+e)):arguments.length<2?n instanceof Qn?new Qn(n.l,n.a,n.b):n instanceof Wn?Jn(n.h,n.c,n.l):yt((n=st(n)).r,n.g,n.b):new Qn(n,t,e)}Kn.brighter=function(n){return new Wn(this.h,this.c,Math.min(100,this.l+nt*(arguments.length?n:1)))},Kn.darker=function(n){return new Wn(this.h,this.c,Math.max(0,this.l-nt*(arguments.length?n:1)))},Kn.rgb=function(){return Jn(this.h,this.c,this.l).rgb()},o.lab=Qn;var nt=18,tt=.95047,et=1,rt=1.08883,it=Qn.prototype=new Vn;function ot(n,t,e){var r=(n+16)/116,i=r+t/500,o=r-e/200;return new st(ct(3.2404542*(i=at(i)*tt)-1.5371385*(r=at(r)*et)-.4985314*(o=at(o)*rt)),ct(-.969266*i+1.8760108*r+.041556*o),ct(.0556434*i-.2040259*r+1.0572252*o))}function ut(n,t,e){return n>0?new Wn(Math.atan2(e,t)*Rn,Math.sqrt(t*t+e*e),n):new Wn(NaN,NaN,n)}function at(n){return n>.206893034?n*n*n:(n-4/29)/7.787037}function lt(n){return n>.008856?Math.pow(n,1/3):7.787037*n+4/29}function ct(n){return Math.round(255*(n<=.00304?12.92*n:1.055*Math.pow(n,1/2.4)-.055))}function st(n,t,e){return this instanceof st?(this.r=~~n,this.g=~~t,void(this.b=~~e)):arguments.length<2?n instanceof st?new st(n.r,n.g,n.b):vt(\"\"+n,st,Gn):new st(n,t,e)}function ft(n){return new st(n>>16,n>>8&255,255&n)}function ht(n){return ft(n)+\"\"}it.brighter=function(n){return new Qn(Math.min(100,this.l+nt*(arguments.length?n:1)),this.a,this.b)},it.darker=function(n){return new Qn(Math.max(0,this.l-nt*(arguments.length?n:1)),this.a,this.b)},it.rgb=function(){return ot(this.l,this.a,this.b)},o.rgb=st;var pt=st.prototype=new Vn;function gt(n){return n<16?\"0\"+Math.max(0,n).toString(16):Math.min(255,n).toString(16)}function vt(n,t,e){var r,i,o,u=0,a=0,l=0;if(r=/([a-z]+)\\((.*)\\)/.exec(n=n.toLowerCase()))switch(i=r[2].split(\",\"),r[1]){case\"hsl\":return e(parseFloat(i[0]),parseFloat(i[1])/100,parseFloat(i[2])/100);case\"rgb\":return t(xt(i[0]),xt(i[1]),xt(i[2]))}return(o=Mt.get(n))?t(o.r,o.g,o.b):(null==n||\"#\"!==n.charAt(0)||isNaN(o=parseInt(n.slice(1),16))||(4===n.length?(u=(3840&o)>>4,u|=u>>4,a=240&o,a|=a>>4,l=15&o,l|=l<<4):7===n.length&&(u=(16711680&o)>>16,a=(65280&o)>>8,l=255&o)),t(u,a,l))}function dt(n,t,e){var r,i,o=Math.min(n/=255,t/=255,e/=255),u=Math.max(n,t,e),a=u-o,l=(u+o)/2;return a?(i=l<.5?a/(u+o):a/(2-u-o),r=n==u?(t-e)/a+(t<e?6:0):t==u?(e-n)/a+2:(n-t)/a+4,r*=60):(r=NaN,i=l>0&&l<1?0:r),new Zn(r,i,l)}function yt(n,t,e){var r=lt((.4124564*(n=mt(n))+.3575761*(t=mt(t))+.1804375*(e=mt(e)))/tt),i=lt((.2126729*n+.7151522*t+.072175*e)/et);return Qn(116*i-16,500*(r-i),200*(i-lt((.0193339*n+.119192*t+.9503041*e)/rt)))}function mt(n){return(n/=255)<=.04045?n/12.92:Math.pow((n+.055)/1.055,2.4)}function xt(n){var t=parseFloat(n);return\"%\"===n.charAt(n.length-1)?Math.round(2.55*t):t}pt.brighter=function(n){n=Math.pow(.7,arguments.length?n:1);var t=this.r,e=this.g,r=this.b,i=30;return t||e||r?(t&&t<i&&(t=i),e&&e<i&&(e=i),r&&r<i&&(r=i),new st(Math.min(255,t/n),Math.min(255,e/n),Math.min(255,r/n))):new st(i,i,i)},pt.darker=function(n){return new st((n=Math.pow(.7,arguments.length?n:1))*this.r,n*this.g,n*this.b)},pt.hsl=function(){return dt(this.r,this.g,this.b)},pt.toString=function(){return\"#\"+gt(this.r)+gt(this.g)+gt(this.b)};var Mt=o.map({aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074});function _t(n){return\"function\"==typeof n?n:function(){return n}}function wt(n){return function(t,e,r){return 2===arguments.length&&\"function\"==typeof e&&(r=e,e=null),bt(t,e,n,r)}}function bt(n,t,e,r){var i={},u=o.dispatch(\"beforesend\",\"progress\",\"load\",\"error\"),l={},c=new XMLHttpRequest,s=null;function f(){var n,t=c.status;if(!t&&function(n){var t=n.responseType;return t&&\"text\"!==t?n.response:n.responseText}(c)||t>=200&&t<300||304===t){try{n=e.call(i,c)}catch(n){return void u.error.call(i,n)}u.load.call(i,n)}else u.error.call(i,c)}return!this.XDomainRequest||\"withCredentials\"in c||!/^(http(s)?:)?\\/\\//.test(n)||(c=new XDomainRequest),\"onload\"in c?c.onload=c.onerror=f:c.onreadystatechange=function(){c.readyState>3&&f()},c.onprogress=function(n){var t=o.event;o.event=n;try{u.progress.call(i,c)}finally{o.event=t}},i.header=function(n,t){return n=(n+\"\").toLowerCase(),arguments.length<2?l[n]:(null==t?delete l[n]:l[n]=t+\"\",i)},i.mimeType=function(n){return arguments.length?(t=null==n?null:n+\"\",i):t},i.responseType=function(n){return arguments.length?(s=n,i):s},i.response=function(n){return e=n,i},[\"get\",\"post\"].forEach(function(n){i[n]=function(){return i.send.apply(i,[n].concat(a(arguments)))}}),i.send=function(e,r,o){if(2===arguments.length&&\"function\"==typeof r&&(o=r,r=null),c.open(e,n,!0),null==t||\"accept\"in l||(l.accept=t+\",*/*\"),c.setRequestHeader)for(var a in l)c.setRequestHeader(a,l[a]);return null!=t&&c.overrideMimeType&&c.overrideMimeType(t),null!=s&&(c.responseType=s),null!=o&&i.on(\"error\",o).on(\"load\",function(n){o(null,n)}),u.beforesend.call(i,c),c.send(null==r?null:r),i},i.abort=function(){return c.abort(),i},o.rebind(i,u,\"on\"),null==r?i:i.get(function(n){return 1===n.length?function(t,e){n(null==t?e:null)}:n}(r))}Mt.forEach(function(n,t){Mt.set(n,ft(t))}),o.functor=_t,o.xhr=wt(R),o.dsv=function(n,t){var e=new RegExp('[\"'+n+\"\\n]\"),r=n.charCodeAt(0);function i(n,e,r){arguments.length<3&&(r=e,e=null);var i=bt(n,t,null==e?o:u(e),r);return i.row=function(n){return arguments.length?i.response(null==(e=n)?o:u(n)):e},i}function o(n){return i.parse(n.responseText)}function u(n){return function(t){return i.parse(t.responseText,n)}}function a(t){return t.map(l).join(n)}function l(n){return e.test(n)?'\"'+n.replace(/\\\"/g,'\"\"')+'\"':n}return i.parse=function(n,t){var e;return i.parseRows(n,function(n,r){if(e)return e(n,r-1);var i=new Function(\"d\",\"return {\"+n.map(function(n,t){return JSON.stringify(n)+\": d[\"+t+\"]\"}).join(\",\")+\"}\");e=t?function(n,e){return t(i(n),e)}:i})},i.parseRows=function(n,t){var e,i,o={},u={},a=[],l=n.length,c=0,s=0;function f(){if(c>=l)return u;if(i)return i=!1,o;var t=c;if(34===n.charCodeAt(t)){for(var e=t;e++<l;)if(34===n.charCodeAt(e)){if(34!==n.charCodeAt(e+1))break;++e}return c=e+2,13===(a=n.charCodeAt(e+1))?(i=!0,10===n.charCodeAt(e+2)&&++c):10===a&&(i=!0),n.slice(t+1,e).replace(/\"\"/g,'\"')}for(;c<l;){var a,s=1;if(10===(a=n.charCodeAt(c++)))i=!0;else if(13===a)i=!0,10===n.charCodeAt(c)&&(++c,++s);else if(a!==r)continue;return n.slice(t,c-s)}return n.slice(t)}for(;(e=f())!==u;){for(var h=[];e!==o&&e!==u;)h.push(e),e=f();t&&null==(h=t(h,s++))||a.push(h)}return a},i.format=function(t){if(Array.isArray(t[0]))return i.formatRows(t);var e=new D,r=[];return t.forEach(function(n){for(var t in n)e.has(t)||r.push(e.add(t))}),[r.map(l).join(n)].concat(t.map(function(t){return r.map(function(n){return l(t[n])}).join(n)})).join(\"\\n\")},i.formatRows=function(n){return n.map(a).join(\"\\n\")},i},o.csv=o.dsv(\",\",\"text/csv\"),o.tsv=o.dsv(\"\\t\",\"text/tab-separated-values\");var St,Nt,kt,At,Et=this[j(this,\"requestAnimationFrame\")]||function(n){setTimeout(n,17)};function Ct(n,t,e){var r=arguments.length;r<2&&(t=0),r<3&&(e=Date.now());var i={c:n,t:e+t,n:null};return Nt?Nt.n=i:St=i,Nt=i,kt||(At=clearTimeout(At),kt=1,Et(Lt)),i}function Lt(){var n=Tt(),t=zt()-n;t>24?(isFinite(t)&&(clearTimeout(At),At=setTimeout(Lt,t)),kt=0):(kt=1,Et(Lt))}function Tt(){for(var n=Date.now(),t=St;t;)n>=t.t&&t.c(n-t.t)&&(t.c=null),t=t.n;return n}function zt(){for(var n,t=St,e=1/0;t;)t.c?(t.t<e&&(e=t.t),t=(n=t).n):t=n?n.n=t.n:St=t.n;return Nt=n,e}function qt(n,t){return t-(n?Math.ceil(Math.log(n)/Math.LN10):1)}o.timer=function(){Ct.apply(this,arguments)},o.timer.flush=function(){Tt(),zt()},o.round=function(n,t){return t?Math.round(n*(t=Math.pow(10,t)))/t:Math.round(n)};var Dt=[\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"].map(function(n,t){var e=Math.pow(10,3*w(8-t));return{scale:t>8?function(n){return n/e}:function(n){return n*e},symbol:n}});function Rt(n){var t=n.decimal,e=n.thousands,r=n.grouping,i=n.currency,u=r&&e?function(n,t){for(var i=n.length,o=[],u=0,a=r[0],l=0;i>0&&a>0&&(l+a+1>t&&(a=Math.max(1,t-l)),o.push(n.substring(i-=a,i+a)),!((l+=a+1)>t));)a=r[u=(u+1)%r.length];return o.reverse().join(e)}:R;return function(n){var e=Pt.exec(n),r=e[1]||\" \",a=e[2]||\">\",l=e[3]||\"-\",c=e[4]||\"\",s=e[5],f=+e[6],h=e[7],p=e[8],g=e[9],v=1,d=\"\",y=\"\",m=!1,x=!0;switch(p&&(p=+p.substring(1)),(s||\"0\"===r&&\"=\"===a)&&(s=r=\"0\",a=\"=\"),g){case\"n\":h=!0,g=\"g\";break;case\"%\":v=100,y=\"%\",g=\"f\";break;case\"p\":v=100,y=\"%\",g=\"r\";break;case\"b\":case\"o\":case\"x\":case\"X\":\"#\"===c&&(d=\"0\"+g.toLowerCase());case\"c\":x=!1;case\"d\":m=!0,p=0;break;case\"s\":v=-1,g=\"r\"}\"$\"===c&&(d=i[0],y=i[1]),\"r\"!=g||p||(g=\"g\"),null!=p&&(\"g\"==g?p=Math.max(1,Math.min(21,p)):\"e\"!=g&&\"f\"!=g||(p=Math.max(0,Math.min(20,p)))),g=jt.get(g)||Ut;var M=s&&h;return function(n){var e=y;if(m&&n%1)return\"\";var i=n<0||0===n&&1/n<0?(n=-n,\"-\"):\"-\"===l?\"\":l;if(v<0){var c=o.formatPrefix(n,p);n=c.scale(n),e=c.symbol+y}else n*=v;var _,w,b=(n=g(n,p)).lastIndexOf(\".\");if(b<0){var S=x?n.lastIndexOf(\"e\"):-1;S<0?(_=n,w=\"\"):(_=n.substring(0,S),w=n.substring(S))}else _=n.substring(0,b),w=t+n.substring(b+1);!s&&h&&(_=u(_,1/0));var N=d.length+_.length+w.length+(M?0:i.length),k=N<f?new Array(N=f-N+1).join(r):\"\";return M&&(_=u(k+_,k.length?f-w.length:1/0)),i+=d,n=_+w,(\"<\"===a?i+n+k:\">\"===a?k+i+n:\"^\"===a?k.substring(0,N>>=1)+i+n+k.substring(N):i+(M?n:k+n))+e}}}o.formatPrefix=function(n,t){var e=0;return(n=+n)&&(n<0&&(n*=-1),t&&(n=o.round(n,qt(n,t))),e=1+Math.floor(1e-12+Math.log(n)/Math.LN10),e=Math.max(-24,Math.min(24,3*Math.floor((e-1)/3)))),Dt[8+e/3]};var Pt=/(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i,jt=o.map({b:function(n){return n.toString(2)},c:function(n){return String.fromCharCode(n)},o:function(n){return n.toString(8)},x:function(n){return n.toString(16)},X:function(n){return n.toString(16).toUpperCase()},g:function(n,t){return n.toPrecision(t)},e:function(n,t){return n.toExponential(t)},f:function(n,t){return n.toFixed(t)},r:function(n,t){return(n=o.round(n,qt(n,t))).toFixed(Math.max(0,Math.min(20,qt(n*(1+1e-15),t))))}});function Ut(n){return n+\"\"}var Ot=o.time={},Ht=Date;function Ft(){this._=new Date(arguments.length>1?Date.UTC.apply(this,arguments):arguments[0])}Ft.prototype={getDate:function(){return this._.getUTCDate()},getDay:function(){return this._.getUTCDay()},getFullYear:function(){return this._.getUTCFullYear()},getHours:function(){return this._.getUTCHours()},getMilliseconds:function(){return this._.getUTCMilliseconds()},getMinutes:function(){return this._.getUTCMinutes()},getMonth:function(){return this._.getUTCMonth()},getSeconds:function(){return this._.getUTCSeconds()},getTime:function(){return this._.getTime()},getTimezoneOffset:function(){return 0},valueOf:function(){return this._.valueOf()},setDate:function(){It.setUTCDate.apply(this._,arguments)},setDay:function(){It.setUTCDay.apply(this._,arguments)},setFullYear:function(){It.setUTCFullYear.apply(this._,arguments)},setHours:function(){It.setUTCHours.apply(this._,arguments)},setMilliseconds:function(){It.setUTCMilliseconds.apply(this._,arguments)},setMinutes:function(){It.setUTCMinutes.apply(this._,arguments)},setMonth:function(){It.setUTCMonth.apply(this._,arguments)},setSeconds:function(){It.setUTCSeconds.apply(this._,arguments)},setTime:function(){It.setTime.apply(this._,arguments)}};var It=Date.prototype;function Bt(n,t,e){function r(t){var e=n(t),r=o(e,1);return t-e<r-t?e:r}function i(e){return t(e=n(new Ht(e-1)),1),e}function o(n,e){return t(n=new Ht(+n),e),n}function u(n,r,o){var u=i(n),a=[];if(o>1)for(;u<r;)e(u)%o||a.push(new Date(+u)),t(u,1);else for(;u<r;)a.push(new Date(+u)),t(u,1);return a}n.floor=n,n.round=r,n.ceil=i,n.offset=o,n.range=u;var a=n.utc=Yt(n);return a.floor=a,a.round=Yt(r),a.ceil=Yt(i),a.offset=Yt(o),a.range=function(n,t,e){try{Ht=Ft;var r=new Ft;return r._=n,u(r,t,e)}finally{Ht=Date}},n}function Yt(n){return function(t,e){try{Ht=Ft;var r=new Ft;return r._=t,n(r,e)._}finally{Ht=Date}}}function $t(n){var t=n.dateTime,e=n.date,r=n.time,i=n.periods,u=n.days,a=n.shortDays,l=n.months,c=n.shortMonths;function s(n){var t=n.length;function e(e){for(var r,i,o,u=[],a=-1,l=0;++a<t;)37===n.charCodeAt(a)&&(u.push(n.slice(l,a)),null!=(i=Vt[r=n.charAt(++a)])&&(r=n.charAt(++a)),(o=_[r])&&(r=o(e,null==i?\"e\"===r?\" \":\"0\":i)),u.push(r),l=a+1);return u.push(n.slice(l,a)),u.join(\"\")}return e.parse=function(t){var e={y:1900,m:0,d:1,H:0,M:0,S:0,L:0,Z:null};if(f(e,n,t,0)!=t.length)return null;\"p\"in e&&(e.H=e.H%12+12*e.p);var r=null!=e.Z&&Ht!==Ft,i=new(r?Ft:Ht);return\"j\"in e?i.setFullYear(e.y,0,e.j):\"W\"in e||\"U\"in e?(\"w\"in e||(e.w=\"W\"in e?1:0),i.setFullYear(e.y,0,1),i.setFullYear(e.y,0,\"W\"in e?(e.w+6)%7+7*e.W-(i.getDay()+5)%7:e.w+7*e.U-(i.getDay()+6)%7)):i.setFullYear(e.y,e.m,e.d),i.setHours(e.H+(e.Z/100|0),e.M+e.Z%100,e.S,e.L),r?i._:i},e.toString=function(){return n},e}function f(n,t,e,r){for(var i,o,u,a=0,l=t.length,c=e.length;a<l;){if(r>=c)return-1;if(37===(i=t.charCodeAt(a++))){if(u=t.charAt(a++),!(o=w[u in Vt?t.charAt(a++):u])||(r=o(n,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}s.utc=function(n){var t=s(n);function e(n){try{var e=new(Ht=Ft);return e._=n,t(e)}finally{Ht=Date}}return e.parse=function(n){try{Ht=Ft;var e=t.parse(n);return e&&e._}finally{Ht=Date}},e.toString=t.toString,e},s.multi=s.utc.multi=pe;var h=o.map(),p=Wt(u),g=Kt(u),v=Wt(a),d=Kt(a),y=Wt(l),m=Kt(l),x=Wt(c),M=Kt(c);i.forEach(function(n,t){h.set(n.toLowerCase(),t)});var _={a:function(n){return a[n.getDay()]},A:function(n){return u[n.getDay()]},b:function(n){return c[n.getMonth()]},B:function(n){return l[n.getMonth()]},c:s(t),d:function(n,t){return Gt(n.getDate(),t,2)},e:function(n,t){return Gt(n.getDate(),t,2)},H:function(n,t){return Gt(n.getHours(),t,2)},I:function(n,t){return Gt(n.getHours()%12||12,t,2)},j:function(n,t){return Gt(1+Ot.dayOfYear(n),t,3)},L:function(n,t){return Gt(n.getMilliseconds(),t,3)},m:function(n,t){return Gt(n.getMonth()+1,t,2)},M:function(n,t){return Gt(n.getMinutes(),t,2)},p:function(n){return i[+(n.getHours()>=12)]},S:function(n,t){return Gt(n.getSeconds(),t,2)},U:function(n,t){return Gt(Ot.sundayOfYear(n),t,2)},w:function(n){return n.getDay()},W:function(n,t){return Gt(Ot.mondayOfYear(n),t,2)},x:s(e),X:s(r),y:function(n,t){return Gt(n.getFullYear()%100,t,2)},Y:function(n,t){return Gt(n.getFullYear()%1e4,t,4)},Z:fe,\"%\":function(){return\"%\"}},w={a:function(n,t,e){v.lastIndex=0;var r=v.exec(t.slice(e));return r?(n.w=d.get(r[0].toLowerCase()),e+r[0].length):-1},A:function(n,t,e){p.lastIndex=0;var r=p.exec(t.slice(e));return r?(n.w=g.get(r[0].toLowerCase()),e+r[0].length):-1},b:function(n,t,e){x.lastIndex=0;var r=x.exec(t.slice(e));return r?(n.m=M.get(r[0].toLowerCase()),e+r[0].length):-1},B:function(n,t,e){y.lastIndex=0;var r=y.exec(t.slice(e));return r?(n.m=m.get(r[0].toLowerCase()),e+r[0].length):-1},c:function(n,t,e){return f(n,_.c.toString(),t,e)},d:oe,e:oe,H:ae,I:ae,j:ue,L:se,m:ie,M:le,p:function(n,t,e){var r=h.get(t.slice(e,e+=2).toLowerCase());return null==r?-1:(n.p=r,e)},S:ce,U:Qt,w:Jt,W:ne,x:function(n,t,e){return f(n,_.x.toString(),t,e)},X:function(n,t,e){return f(n,_.X.toString(),t,e)},y:ee,Y:te,Z:re,\"%\":he};return s}Ot.year=Bt(function(n){return(n=Ot.day(n)).setMonth(0,1),n},function(n,t){n.setFullYear(n.getFullYear()+t)},function(n){return n.getFullYear()}),Ot.years=Ot.year.range,Ot.years.utc=Ot.year.utc.range,Ot.day=Bt(function(n){var t=new Ht(2e3,0);return t.setFullYear(n.getFullYear(),n.getMonth(),n.getDate()),t},function(n,t){n.setDate(n.getDate()+t)},function(n){return n.getDate()-1}),Ot.days=Ot.day.range,Ot.days.utc=Ot.day.utc.range,Ot.dayOfYear=function(n){var t=Ot.year(n);return Math.floor((n-t-6e4*(n.getTimezoneOffset()-t.getTimezoneOffset()))/864e5)},[\"sunday\",\"monday\",\"tuesday\",\"wednesday\",\"thursday\",\"friday\",\"saturday\"].forEach(function(n,t){t=7-t;var e=Ot[n]=Bt(function(n){return(n=Ot.day(n)).setDate(n.getDate()-(n.getDay()+t)%7),n},function(n,t){n.setDate(n.getDate()+7*Math.floor(t))},function(n){var e=Ot.year(n).getDay();return Math.floor((Ot.dayOfYear(n)+(e+t)%7)/7)-(e!==t)});Ot[n+\"s\"]=e.range,Ot[n+\"s\"].utc=e.utc.range,Ot[n+\"OfYear\"]=function(n){var e=Ot.year(n).getDay();return Math.floor((Ot.dayOfYear(n)+(e+t)%7)/7)}}),Ot.week=Ot.sunday,Ot.weeks=Ot.sunday.range,Ot.weeks.utc=Ot.sunday.utc.range,Ot.weekOfYear=Ot.sundayOfYear;var Vt={\"-\":\"\",_:\" \",0:\"0\"},Zt=/^\\s*\\d+/,Xt=/^%/;function Gt(n,t,e){var r=n<0?\"-\":\"\",i=(r?-n:n)+\"\",o=i.length;return r+(o<e?new Array(e-o+1).join(t)+i:i)}function Wt(n){return new RegExp(\"^(?:\"+n.map(o.requote).join(\"|\")+\")\",\"i\")}function Kt(n){for(var t=new S,e=-1,r=n.length;++e<r;)t.set(n[e].toLowerCase(),e);return t}function Jt(n,t,e){Zt.lastIndex=0;var r=Zt.exec(t.slice(e,e+1));return r?(n.w=+r[0],e+r[0].length):-1}function Qt(n,t,e){Zt.lastIndex=0;var r=Zt.exec(t.slice(e));return r?(n.U=+r[0],e+r[0].length):-1}function ne(n,t,e){Zt.lastIndex=0;var r=Zt.exec(t.slice(e));return r?(n.W=+r[0],e+r[0].length):-1}function te(n,t,e){Zt.lastIndex=0;var r=Zt.exec(t.slice(e,e+4));return r?(n.y=+r[0],e+r[0].length):-1}function ee(n,t,e){Zt.lastIndex=0;var r,i=Zt.exec(t.slice(e,e+2));return i?(n.y=(r=+i[0])+(r>68?1900:2e3),e+i[0].length):-1}function re(n,t,e){return/^[+-]\\d{4}$/.test(t=t.slice(e,e+5))?(n.Z=-t,e+5):-1}function ie(n,t,e){Zt.lastIndex=0;var r=Zt.exec(t.slice(e,e+2));return r?(n.m=r[0]-1,e+r[0].length):-1}function oe(n,t,e){Zt.lastIndex=0;var r=Zt.exec(t.slice(e,e+2));return r?(n.d=+r[0],e+r[0].length):-1}function ue(n,t,e){Zt.lastIndex=0;var r=Zt.exec(t.slice(e,e+3));return r?(n.j=+r[0],e+r[0].length):-1}function ae(n,t,e){Zt.lastIndex=0;var r=Zt.exec(t.slice(e,e+2));return r?(n.H=+r[0],e+r[0].length):-1}function le(n,t,e){Zt.lastIndex=0;var r=Zt.exec(t.slice(e,e+2));return r?(n.M=+r[0],e+r[0].length):-1}function ce(n,t,e){Zt.lastIndex=0;var r=Zt.exec(t.slice(e,e+2));return r?(n.S=+r[0],e+r[0].length):-1}function se(n,t,e){Zt.lastIndex=0;var r=Zt.exec(t.slice(e,e+3));return r?(n.L=+r[0],e+r[0].length):-1}function fe(n){var t=n.getTimezoneOffset(),e=t>0?\"-\":\"+\",r=w(t)/60|0,i=w(t)%60;return e+Gt(r,\"0\",2)+Gt(i,\"0\",2)}function he(n,t,e){Xt.lastIndex=0;var r=Xt.exec(t.slice(e,e+1));return r?e+r[0].length:-1}function pe(n){for(var t=n.length,e=-1;++e<t;)n[e][0]=this(n[e][0]);return function(t){for(var e=0,r=n[e];!r[1](t);)r=n[++e];return r[0](t)}}o.locale=function(n){return{numberFormat:Rt(n),timeFormat:$t(n)}};var ge=o.locale({decimal:\".\",thousands:\",\",grouping:[3],currency:[\"$\",\"\"],dateTime:\"%a %b %e %X %Y\",date:\"%m/%d/%Y\",time:\"%H:%M:%S\",periods:[\"AM\",\"PM\"],days:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],shortDays:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],months:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],shortMonths:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"]});function ve(){}o.format=ge.numberFormat,o.geo={},ve.prototype={s:0,t:0,add:function(n){ye(n,this.t,de),ye(de.s,this.s,this),this.s?this.t+=de.t:this.s=de.t},reset:function(){this.s=this.t=0},valueOf:function(){return this.s}};var de=new ve;function ye(n,t,e){var r=e.s=n+t,i=r-n,o=r-i;e.t=n-o+(t-i)}function me(n,t){n&&Me.hasOwnProperty(n.type)&&Me[n.type](n,t)}o.geo.stream=function(n,t){n&&xe.hasOwnProperty(n.type)?xe[n.type](n,t):me(n,t)};var xe={Feature:function(n,t){me(n.geometry,t)},FeatureCollection:function(n,t){for(var e=n.features,r=-1,i=e.length;++r<i;)me(e[r].geometry,t)}},Me={Sphere:function(n,t){t.sphere()},Point:function(n,t){n=n.coordinates,t.point(n[0],n[1],n[2])},MultiPoint:function(n,t){for(var e=n.coordinates,r=-1,i=e.length;++r<i;)n=e[r],t.point(n[0],n[1],n[2])},LineString:function(n,t){_e(n.coordinates,t,0)},MultiLineString:function(n,t){for(var e=n.coordinates,r=-1,i=e.length;++r<i;)_e(e[r],t,0)},Polygon:function(n,t){we(n.coordinates,t)},MultiPolygon:function(n,t){for(var e=n.coordinates,r=-1,i=e.length;++r<i;)we(e[r],t)},GeometryCollection:function(n,t){for(var e=n.geometries,r=-1,i=e.length;++r<i;)me(e[r],t)}};function _e(n,t,e){var r,i=-1,o=n.length-e;for(t.lineStart();++i<o;)r=n[i],t.point(r[0],r[1],r[2]);t.lineEnd()}function we(n,t){var e=-1,r=n.length;for(t.polygonStart();++e<r;)_e(n[e],t,1);t.polygonEnd()}o.geo.area=function(n){return be=0,o.geo.stream(n,Pe),be};var be,Se,Ne,ke,Ae,Ee,Ce,Le,Te,ze,qe,De,Re=new ve,Pe={sphere:function(){be+=4*Ln},point:O,lineStart:O,lineEnd:O,polygonStart:function(){Re.reset(),Pe.lineStart=je},polygonEnd:function(){var n=2*Re;be+=n<0?4*Ln+n:n,Pe.lineStart=Pe.lineEnd=Pe.point=O}};function je(){var n,t,e,r,i;function o(n,t){t=t*Dn/2+Ln/4;var o=(n*=Dn)-e,u=o>=0?1:-1,a=u*o,l=Math.cos(t),c=Math.sin(t),s=i*c,f=r*l+s*Math.cos(a),h=s*u*Math.sin(a);Re.add(Math.atan2(h,f)),e=n,r=l,i=c}Pe.point=function(u,a){Pe.point=o,e=(n=u)*Dn,r=Math.cos(a=(t=a)*Dn/2+Ln/4),i=Math.sin(a)},Pe.lineEnd=function(){o(n,t)}}function Ue(n){var t=n[0],e=n[1],r=Math.cos(e);return[r*Math.cos(t),r*Math.sin(t),Math.sin(e)]}function Oe(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]}function He(n,t){return[n[1]*t[2]-n[2]*t[1],n[2]*t[0]-n[0]*t[2],n[0]*t[1]-n[1]*t[0]]}function Fe(n,t){n[0]+=t[0],n[1]+=t[1],n[2]+=t[2]}function Ie(n,t){return[n[0]*t,n[1]*t,n[2]*t]}function Be(n){var t=Math.sqrt(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]);n[0]/=t,n[1]/=t,n[2]/=t}function Ye(n){return[Math.atan2(n[1],n[0]),On(n[2])]}function $e(n,t){return w(n[0]-t[0])<En&&w(n[1]-t[1])<En}o.geo.bounds=function(){var n,t,e,r,i,u,a,l,c,s,f,h={point:p,lineStart:v,lineEnd:d,polygonStart:function(){h.point=y,h.lineStart=m,h.lineEnd=x,c=0,Pe.polygonStart()},polygonEnd:function(){Pe.polygonEnd(),h.point=p,h.lineStart=v,h.lineEnd=d,Re<0?(n=-(e=180),t=-(r=90)):c>En?r=90:c<-En&&(t=-90),f[0]=n,f[1]=e}};function p(i,o){s.push(f=[n=i,e=i]),o<t&&(t=o),o>r&&(r=o)}function g(o,u){var a=Ue([o*Dn,u*Dn]);if(l){var c=He(l,a),s=He([c[1],-c[0],0],c);Be(s),s=Ye(s);var f=o-i,h=f>0?1:-1,g=s[0]*Rn*h,v=w(f)>180;if(v^(h*i<g&&g<h*o))(d=s[1]*Rn)>r&&(r=d);else if(v^(h*i<(g=(g+360)%360-180)&&g<h*o)){var d;(d=-s[1]*Rn)<t&&(t=d)}else u<t&&(t=u),u>r&&(r=u);v?o<i?M(n,o)>M(n,e)&&(e=o):M(o,e)>M(n,e)&&(n=o):e>=n?(o<n&&(n=o),o>e&&(e=o)):o>i?M(n,o)>M(n,e)&&(e=o):M(o,e)>M(n,e)&&(n=o)}else p(o,u);l=a,i=o}function v(){h.point=g}function d(){f[0]=n,f[1]=e,h.point=p,l=null}function y(n,t){if(l){var e=n-i;c+=w(e)>180?e+(e>0?360:-360):e}else u=n,a=t;Pe.point(n,t),g(n,t)}function m(){Pe.lineStart()}function x(){y(u,a),Pe.lineEnd(),w(c)>En&&(n=-(e=180)),f[0]=n,f[1]=e,l=null}function M(n,t){return(t-=n)<0?t+360:t}function _(n,t){return n[0]-t[0]}function b(n,t){return t[0]<=t[1]?t[0]<=n&&n<=t[1]:n<t[0]||t[1]<n}return function(i){if(r=e=-(n=t=1/0),s=[],o.geo.stream(i,h),c=s.length){s.sort(_);for(var u=1,a=[v=s[0]];u<c;++u)b((p=s[u])[0],v)||b(p[1],v)?(M(v[0],p[1])>M(v[0],v[1])&&(v[1]=p[1]),M(p[0],v[1])>M(v[0],v[1])&&(v[0]=p[0])):a.push(v=p);for(var l,c,p,g=-1/0,v=(u=0,a[c=a.length-1]);u<=c;v=p,++u)p=a[u],(l=M(v[1],p[0]))>g&&(g=l,n=p[0],e=v[1])}return s=f=null,n===1/0||t===1/0?[[NaN,NaN],[NaN,NaN]]:[[n,t],[e,r]]}}(),o.geo.centroid=function(n){Se=Ne=ke=Ae=Ee=Ce=Le=Te=ze=qe=De=0,o.geo.stream(n,Ve);var t=ze,e=qe,r=De,i=t*t+e*e+r*r;return i<Cn&&(t=Ce,e=Le,r=Te,Ne<En&&(t=ke,e=Ae,r=Ee),(i=t*t+e*e+r*r)<Cn)?[NaN,NaN]:[Math.atan2(e,t)*Rn,On(r/Math.sqrt(i))*Rn]};var Ve={sphere:O,point:Ze,lineStart:Ge,lineEnd:We,polygonStart:function(){Ve.lineStart=Ke},polygonEnd:function(){Ve.lineStart=Ge}};function Ze(n,t){n*=Dn;var e=Math.cos(t*=Dn);Xe(e*Math.cos(n),e*Math.sin(n),Math.sin(t))}function Xe(n,t,e){ke+=(n-ke)/++Se,Ae+=(t-Ae)/Se,Ee+=(e-Ee)/Se}function Ge(){var n,t,e;function r(r,i){r*=Dn;var o=Math.cos(i*=Dn),u=o*Math.cos(r),a=o*Math.sin(r),l=Math.sin(i),c=Math.atan2(Math.sqrt((c=t*l-e*a)*c+(c=e*u-n*l)*c+(c=n*a-t*u)*c),n*u+t*a+e*l);Ne+=c,Ce+=c*(n+(n=u)),Le+=c*(t+(t=a)),Te+=c*(e+(e=l)),Xe(n,t,e)}Ve.point=function(i,o){i*=Dn;var u=Math.cos(o*=Dn);n=u*Math.cos(i),t=u*Math.sin(i),e=Math.sin(o),Ve.point=r,Xe(n,t,e)}}function We(){Ve.point=Ze}function Ke(){var n,t,e,r,i;function o(n,t){n*=Dn;var o=Math.cos(t*=Dn),u=o*Math.cos(n),a=o*Math.sin(n),l=Math.sin(t),c=r*l-i*a,s=i*u-e*l,f=e*a-r*u,h=Math.sqrt(c*c+s*s+f*f),p=e*u+r*a+i*l,g=h&&-Un(p)/h,v=Math.atan2(h,p);ze+=g*c,qe+=g*s,De+=g*f,Ne+=v,Ce+=v*(e+(e=u)),Le+=v*(r+(r=a)),Te+=v*(i+(i=l)),Xe(e,r,i)}Ve.point=function(u,a){n=u,t=a,Ve.point=o,u*=Dn;var l=Math.cos(a*=Dn);e=l*Math.cos(u),r=l*Math.sin(u),i=Math.sin(a),Xe(e,r,i)},Ve.lineEnd=function(){o(n,t),Ve.lineEnd=We,Ve.point=Ze}}function Je(n,t){function e(e,r){return e=n(e,r),t(e[0],e[1])}return n.invert&&t.invert&&(e.invert=function(e,r){return(e=t.invert(e,r))&&n.invert(e[0],e[1])}),e}function Qe(){return!0}function nr(n,t,e,r,i){var o=[],u=[];if(n.forEach(function(n){if(!((t=n.length-1)<=0)){var t,e=n[0],r=n[t];if($e(e,r)){i.lineStart();for(var a=0;a<t;++a)i.point((e=n[a])[0],e[1]);i.lineEnd()}else{var l=new er(e,n,null,!0),c=new er(e,null,l,!1);l.o=c,o.push(l),u.push(c),l=new er(r,n,null,!1),c=new er(r,null,l,!0),l.o=c,o.push(l),u.push(c)}}}),u.sort(t),tr(o),tr(u),o.length){for(var a=0,l=e,c=u.length;a<c;++a)u[a].e=l=!l;for(var s,f,h=o[0];;){for(var p=h,g=!0;p.v;)if((p=p.n)===h)return;s=p.z,i.lineStart();do{if(p.v=p.o.v=!0,p.e){if(g)for(a=0,c=s.length;a<c;++a)i.point((f=s[a])[0],f[1]);else r(p.x,p.n.x,1,i);p=p.n}else{if(g)for(a=(s=p.p.z).length-1;a>=0;--a)i.point((f=s[a])[0],f[1]);else r(p.x,p.p.x,-1,i);p=p.p}s=(p=p.o).z,g=!g}while(!p.v);i.lineEnd()}}}function tr(n){if(t=n.length){for(var t,e,r=0,i=n[0];++r<t;)i.n=e=n[r],e.p=i,i=e;i.n=e=n[0],e.p=i}}function er(n,t,e,r){this.x=n,this.z=t,this.o=e,this.e=r,this.v=!1,this.n=this.p=null}function rr(n,t,e,r){return function(i,u){var a,l=t(u),c=i.invert(r[0],r[1]),s={point:f,lineStart:p,lineEnd:g,polygonStart:function(){s.point=M,s.lineStart=_,s.lineEnd=w,a=[],v=[]},polygonEnd:function(){s.point=f,s.lineStart=p,s.lineEnd=g,a=o.merge(a);var n=function(n,t){var e=n[0],r=n[1],i=[Math.sin(e),-Math.cos(e),0],o=0,u=0;Re.reset();for(var a=0,l=t.length;a<l;++a){var c=t[a],s=c.length;if(s)for(var f=c[0],h=f[0],p=f[1]/2+Ln/4,g=Math.sin(p),v=Math.cos(p),d=1;;){d===s&&(d=0);var y=(n=c[d])[0],m=n[1]/2+Ln/4,x=Math.sin(m),M=Math.cos(m),_=y-h,w=_>=0?1:-1,b=w*_,S=b>Ln,N=g*x;if(Re.add(Math.atan2(N*w*Math.sin(b),v*M+N*Math.cos(b))),o+=S?_+w*Tn:_,S^h>=e^y>=e){var k=He(Ue(f),Ue(n));Be(k);var A=He(i,k);Be(A);var E=(S^_>=0?-1:1)*On(A[2]);(r>E||r===E&&(k[0]||k[1]))&&(u+=S^_>=0?1:-1)}if(!d++)break;h=y,g=x,v=M,f=n}}return(o<-En||o<En&&Re<-En)^1&u}(c,v);a.length?(x||(u.polygonStart(),x=!0),nr(a,ur,n,e,u)):n&&(x||(u.polygonStart(),x=!0),u.lineStart(),e(null,null,1,u),u.lineEnd()),x&&(u.polygonEnd(),x=!1),a=v=null},sphere:function(){u.polygonStart(),u.lineStart(),e(null,null,1,u),u.lineEnd(),u.polygonEnd()}};function f(t,e){var r=i(t,e);n(t=r[0],e=r[1])&&u.point(t,e)}function h(n,t){var e=i(n,t);l.point(e[0],e[1])}function p(){s.point=h,l.lineStart()}function g(){s.point=f,l.lineEnd()}var v,d,y=or(),m=t(y),x=!1;function M(n,t){d.push([n,t]);var e=i(n,t);m.point(e[0],e[1])}function _(){m.lineStart(),d=[]}function w(){M(d[0][0],d[0][1]),m.lineEnd();var n,t=m.clean(),e=y.buffer(),r=e.length;if(d.pop(),v.push(d),d=null,r)if(1&t){var i,o=-1;if((r=(n=e[0]).length-1)>0){for(x||(u.polygonStart(),x=!0),u.lineStart();++o<r;)u.point((i=n[o])[0],i[1]);u.lineEnd()}}else r>1&&2&t&&e.push(e.pop().concat(e.shift())),a.push(e.filter(ir))}return s}}function ir(n){return n.length>1}function or(){var n,t=[];return{lineStart:function(){t.push(n=[])},point:function(t,e){n.push([t,e])},lineEnd:O,buffer:function(){var e=t;return t=[],n=null,e},rejoin:function(){t.length>1&&t.push(t.pop().concat(t.shift()))}}}function ur(n,t){return((n=n.x)[0]<0?n[1]-qn-En:qn-n[1])-((t=t.x)[0]<0?t[1]-qn-En:qn-t[1])}var ar=rr(Qe,function(n){var t,e=NaN,r=NaN,i=NaN;return{lineStart:function(){n.lineStart(),t=1},point:function(o,u){var a=o>0?Ln:-Ln,l=w(o-e);w(l-Ln)<En?(n.point(e,r=(r+u)/2>0?qn:-qn),n.point(i,r),n.lineEnd(),n.lineStart(),n.point(a,r),n.point(o,r),t=0):i!==a&&l>=Ln&&(w(e-i)<En&&(e-=i*En),w(o-a)<En&&(o-=a*En),r=function(n,t,e,r){var i,o,u=Math.sin(n-e);return w(u)>En?Math.atan((Math.sin(t)*(o=Math.cos(r))*Math.sin(e)-Math.sin(r)*(i=Math.cos(t))*Math.sin(n))/(i*o*u)):(t+r)/2}(e,r,o,u),n.point(i,r),n.lineEnd(),n.lineStart(),n.point(a,r),t=0),n.point(e=o,r=u),i=a},lineEnd:function(){n.lineEnd(),e=r=NaN},clean:function(){return 2-t}}},function(n,t,e,r){var i;if(null==n)i=e*qn,r.point(-Ln,i),r.point(0,i),r.point(Ln,i),r.point(Ln,0),r.point(Ln,-i),r.point(0,-i),r.point(-Ln,-i),r.point(-Ln,0),r.point(-Ln,i);else if(w(n[0]-t[0])>En){var o=n[0]<t[0]?Ln:-Ln;i=e*o/2,r.point(-o,i),r.point(0,i),r.point(o,i)}else r.point(t[0],t[1])},[-Ln,-Ln/2]);function lr(n,t,e,r){return function(i){var o,u=i.a,a=i.b,l=u.x,c=u.y,s=0,f=1,h=a.x-l,p=a.y-c;if(o=n-l,h||!(o>0)){if(o/=h,h<0){if(o<s)return;o<f&&(f=o)}else if(h>0){if(o>f)return;o>s&&(s=o)}if(o=e-l,h||!(o<0)){if(o/=h,h<0){if(o>f)return;o>s&&(s=o)}else if(h>0){if(o<s)return;o<f&&(f=o)}if(o=t-c,p||!(o>0)){if(o/=p,p<0){if(o<s)return;o<f&&(f=o)}else if(p>0){if(o>f)return;o>s&&(s=o)}if(o=r-c,p||!(o<0)){if(o/=p,p<0){if(o>f)return;o>s&&(s=o)}else if(p>0){if(o<s)return;o<f&&(f=o)}return s>0&&(i.a={x:l+s*h,y:c+s*p}),f<1&&(i.b={x:l+f*h,y:c+f*p}),i}}}}}}var cr=1e9;function sr(n,t,e,r){return function(l){var c,s,f,h,p,g,v,d,y,m,x,M=l,_=or(),w=lr(n,t,e,r),b={point:k,lineStart:function(){b.point=A,s&&s.push(f=[]);m=!0,y=!1,v=d=NaN},lineEnd:function(){c&&(A(h,p),g&&y&&_.rejoin(),c.push(_.buffer()));b.point=k,y&&l.lineEnd()},polygonStart:function(){l=_,c=[],s=[],x=!0},polygonEnd:function(){l=M,c=o.merge(c);var t=function(n){for(var t=0,e=s.length,r=n[1],i=0;i<e;++i)for(var o,u=1,a=s[i],l=a.length,c=a[0];u<l;++u)o=a[u],c[1]<=r?o[1]>r&&jn(c,o,n)>0&&++t:o[1]<=r&&jn(c,o,n)<0&&--t,c=o;return 0!==t}([n,r]),e=x&&t,i=c.length;(e||i)&&(l.polygonStart(),e&&(l.lineStart(),S(null,null,1,l),l.lineEnd()),i&&nr(c,u,t,S,l),l.polygonEnd()),c=s=f=null}};function S(o,u,l,c){var s=0,f=0;if(null==o||(s=i(o,l))!==(f=i(u,l))||a(o,u)<0^l>0)do{c.point(0===s||3===s?n:e,s>1?r:t)}while((s=(s+l+4)%4)!==f);else c.point(u[0],u[1])}function N(i,o){return n<=i&&i<=e&&t<=o&&o<=r}function k(n,t){N(n,t)&&l.point(n,t)}function A(n,t){var e=N(n=Math.max(-cr,Math.min(cr,n)),t=Math.max(-cr,Math.min(cr,t)));if(s&&f.push([n,t]),m)h=n,p=t,g=e,m=!1,e&&(l.lineStart(),l.point(n,t));else if(e&&y)l.point(n,t);else{var r={a:{x:v,y:d},b:{x:n,y:t}};w(r)?(y||(l.lineStart(),l.point(r.a.x,r.a.y)),l.point(r.b.x,r.b.y),e||l.lineEnd(),x=!1):e&&(l.lineStart(),l.point(n,t),x=!1)}v=n,d=t,y=e}return b};function i(r,i){return w(r[0]-n)<En?i>0?0:3:w(r[0]-e)<En?i>0?2:1:w(r[1]-t)<En?i>0?1:0:i>0?3:2}function u(n,t){return a(n.x,t.x)}function a(n,t){var e=i(n,1),r=i(t,1);return e!==r?e-r:0===e?t[1]-n[1]:1===e?n[0]-t[0]:2===e?n[1]-t[1]:t[0]-n[0]}}function fr(n){var t=0,e=Ln/3,r=Rr(n),i=r(t,e);return i.parallels=function(n){return arguments.length?r(t=n[0]*Ln/180,e=n[1]*Ln/180):[t/Ln*180,e/Ln*180]},i}function hr(n,t){var e=Math.sin(n),r=(e+Math.sin(t))/2,i=1+e*(2*r-e),o=Math.sqrt(i)/r;function u(n,t){var e=Math.sqrt(i-2*r*Math.sin(t))/r;return[e*Math.sin(n*=r),o-e*Math.cos(n)]}return u.invert=function(n,t){var e=o-t;return[Math.atan2(n,e)/r,On((i-(n*n+e*e)*r*r)/(2*r))]},u}o.geo.clipExtent=function(){var n,t,e,r,i,o,u={stream:function(n){return i&&(i.valid=!1),(i=o(n)).valid=!0,i},extent:function(a){return arguments.length?(o=sr(n=+a[0][0],t=+a[0][1],e=+a[1][0],r=+a[1][1]),i&&(i.valid=!1,i=null),u):[[n,t],[e,r]]}};return u.extent([[0,0],[960,500]])},(o.geo.conicEqualArea=function(){return fr(hr)}).raw=hr,o.geo.albers=function(){return o.geo.conicEqualArea().rotate([96,0]).center([-.6,38.7]).parallels([29.5,45.5]).scale(1070)},o.geo.albersUsa=function(){var n,t,e,r,i=o.geo.albers(),u=o.geo.conicEqualArea().rotate([154,0]).center([-2,58.5]).parallels([55,65]),a=o.geo.conicEqualArea().rotate([157,0]).center([-3,19.9]).parallels([8,18]),l={point:function(t,e){n=[t,e]}};function c(i){var o=i[0],u=i[1];return n=null,t(o,u),n||(e(o,u),n)||r(o,u),n}return c.invert=function(n){var t=i.scale(),e=i.translate(),r=(n[0]-e[0])/t,o=(n[1]-e[1])/t;return(o>=.12&&o<.234&&r>=-.425&&r<-.214?u:o>=.166&&o<.234&&r>=-.214&&r<-.115?a:i).invert(n)},c.stream=function(n){var t=i.stream(n),e=u.stream(n),r=a.stream(n);return{point:function(n,i){t.point(n,i),e.point(n,i),r.point(n,i)},sphere:function(){t.sphere(),e.sphere(),r.sphere()},lineStart:function(){t.lineStart(),e.lineStart(),r.lineStart()},lineEnd:function(){t.lineEnd(),e.lineEnd(),r.lineEnd()},polygonStart:function(){t.polygonStart(),e.polygonStart(),r.polygonStart()},polygonEnd:function(){t.polygonEnd(),e.polygonEnd(),r.polygonEnd()}}},c.precision=function(n){return arguments.length?(i.precision(n),u.precision(n),a.precision(n),c):i.precision()},c.scale=function(n){return arguments.length?(i.scale(n),u.scale(.35*n),a.scale(n),c.translate(i.translate())):i.scale()},c.translate=function(n){if(!arguments.length)return i.translate();var o=i.scale(),s=+n[0],f=+n[1];return t=i.translate(n).clipExtent([[s-.455*o,f-.238*o],[s+.455*o,f+.238*o]]).stream(l).point,e=u.translate([s-.307*o,f+.201*o]).clipExtent([[s-.425*o+En,f+.12*o+En],[s-.214*o-En,f+.234*o-En]]).stream(l).point,r=a.translate([s-.205*o,f+.212*o]).clipExtent([[s-.214*o+En,f+.166*o+En],[s-.115*o-En,f+.234*o-En]]).stream(l).point,c},c.scale(1070)};var pr,gr,vr,dr,yr,mr,xr={point:O,lineStart:O,lineEnd:O,polygonStart:function(){gr=0,xr.lineStart=Mr},polygonEnd:function(){xr.lineStart=xr.lineEnd=xr.point=O,pr+=w(gr/2)}};function Mr(){var n,t,e,r;function i(n,t){gr+=r*n-e*t,e=n,r=t}xr.point=function(o,u){xr.point=i,n=e=o,t=r=u},xr.lineEnd=function(){i(n,t)}}var _r={point:function(n,t){n<vr&&(vr=n);n>yr&&(yr=n);t<dr&&(dr=t);t>mr&&(mr=t)},lineStart:O,lineEnd:O,polygonStart:O,polygonEnd:O};function wr(){var n=br(4.5),t=[],e={point:r,lineStart:function(){e.point=i},lineEnd:u,polygonStart:function(){e.lineEnd=a},polygonEnd:function(){e.lineEnd=u,e.point=r},pointRadius:function(t){return n=br(t),e},result:function(){if(t.length){var n=t.join(\"\");return t=[],n}}};function r(e,r){t.push(\"M\",e,\",\",r,n)}function i(n,r){t.push(\"M\",n,\",\",r),e.point=o}function o(n,e){t.push(\"L\",n,\",\",e)}function u(){e.point=r}function a(){t.push(\"Z\")}return e}function br(n){return\"m0,\"+n+\"a\"+n+\",\"+n+\" 0 1,1 0,\"+-2*n+\"a\"+n+\",\"+n+\" 0 1,1 0,\"+2*n+\"z\"}var Sr,Nr={point:kr,lineStart:Ar,lineEnd:Er,polygonStart:function(){Nr.lineStart=Cr},polygonEnd:function(){Nr.point=kr,Nr.lineStart=Ar,Nr.lineEnd=Er}};function kr(n,t){ke+=n,Ae+=t,++Ee}function Ar(){var n,t;function e(e,r){var i=e-n,o=r-t,u=Math.sqrt(i*i+o*o);Ce+=u*(n+e)/2,Le+=u*(t+r)/2,Te+=u,kr(n=e,t=r)}Nr.point=function(r,i){Nr.point=e,kr(n=r,t=i)}}function Er(){Nr.point=kr}function Cr(){var n,t,e,r;function i(n,t){var i=n-e,o=t-r,u=Math.sqrt(i*i+o*o);Ce+=u*(e+n)/2,Le+=u*(r+t)/2,Te+=u,ze+=(u=r*n-e*t)*(e+n),qe+=u*(r+t),De+=3*u,kr(e=n,r=t)}Nr.point=function(o,u){Nr.point=i,kr(n=e=o,t=r=u)},Nr.lineEnd=function(){i(n,t)}}function Lr(n){var t=4.5,e={point:r,lineStart:function(){e.point=i},lineEnd:u,polygonStart:function(){e.lineEnd=a},polygonEnd:function(){e.lineEnd=u,e.point=r},pointRadius:function(n){return t=n,e},result:O};function r(e,r){n.moveTo(e+t,r),n.arc(e,r,t,0,Tn)}function i(t,r){n.moveTo(t,r),e.point=o}function o(t,e){n.lineTo(t,e)}function u(){e.point=r}function a(){n.closePath()}return e}function Tr(n){var t=.5,e=Math.cos(30*Dn),r=16;function i(t){return(r?function(t){var e,i,u,a,l,c,s,f,h,p,g,v,d={point:y,lineStart:m,lineEnd:M,polygonStart:function(){t.polygonStart(),d.lineStart=_},polygonEnd:function(){t.polygonEnd(),d.lineStart=m}};function y(e,r){e=n(e,r),t.point(e[0],e[1])}function m(){f=NaN,d.point=x,t.lineStart()}function x(e,i){var u=Ue([e,i]),a=n(e,i);o(f,h,s,p,g,v,f=a[0],h=a[1],s=e,p=u[0],g=u[1],v=u[2],r,t),t.point(f,h)}function M(){d.point=y,t.lineEnd()}function _(){m(),d.point=w,d.lineEnd=b}function w(n,t){x(e=n,t),i=f,u=h,a=p,l=g,c=v,d.point=x}function b(){o(f,h,s,p,g,v,i,u,e,a,l,c,r,t),d.lineEnd=M,M()}return d}:function(t){return qr(t,function(e,r){e=n(e,r),t.point(e[0],e[1])})})(t)}function o(r,i,u,a,l,c,s,f,h,p,g,v,d,y){var m=s-r,x=f-i,M=m*m+x*x;if(M>4*t&&d--){var _=a+p,b=l+g,S=c+v,N=Math.sqrt(_*_+b*b+S*S),k=Math.asin(S/=N),A=w(w(S)-1)<En||w(u-h)<En?(u+h)/2:Math.atan2(b,_),E=n(A,k),C=E[0],L=E[1],T=C-r,z=L-i,q=x*T-m*z;(q*q/M>t||w((m*T+x*z)/M-.5)>.3||a*p+l*g+c*v<e)&&(o(r,i,u,a,l,c,C,L,A,_/=N,b/=N,S,d,y),y.point(C,L),o(C,L,A,_,b,S,s,f,h,p,g,v,d,y))}}return i.precision=function(n){return arguments.length?(r=(t=n*n)>0&&16,i):Math.sqrt(t)},i}function zr(n){this.stream=n}function qr(n,t){return{point:t,sphere:function(){n.sphere()},lineStart:function(){n.lineStart()},lineEnd:function(){n.lineEnd()},polygonStart:function(){n.polygonStart()},polygonEnd:function(){n.polygonEnd()}}}function Dr(n){return Rr(function(){return n})()}function Rr(n){var t,e,r,i,u,a,l=Tr(function(n,e){return[(n=t(n,e))[0]*c+i,u-n[1]*c]}),c=150,s=480,f=250,h=0,p=0,g=0,v=0,d=0,y=ar,m=R,x=null,M=null;function _(n){return[(n=r(n[0]*Dn,n[1]*Dn))[0]*c+i,u-n[1]*c]}function b(n){return(n=r.invert((n[0]-i)/c,(u-n[1])/c))&&[n[0]*Rn,n[1]*Rn]}function S(){r=Je(e=Or(g,v,d),t);var n=t(h,p);return i=s-n[0]*c,u=f+n[1]*c,N()}function N(){return a&&(a.valid=!1,a=null),_}return _.stream=function(n){return a&&(a.valid=!1),(a=Pr(y(e,l(m(n))))).valid=!0,a},_.clipAngle=function(n){return arguments.length?(y=null==n?(x=n,ar):function(n){var t=Math.cos(n),e=t>0,r=w(t)>En;return rr(i,function(n){var t,a,l,c,s;return{lineStart:function(){c=l=!1,s=1},point:function(f,h){var p,g=[f,h],v=i(f,h),d=e?v?0:u(f,h):v?u(f+(f<0?Ln:-Ln),h):0;if(!t&&(c=l=v)&&n.lineStart(),v!==l&&(p=o(t,g),($e(t,p)||$e(g,p))&&(g[0]+=En,g[1]+=En,v=i(g[0],g[1]))),v!==l)s=0,v?(n.lineStart(),p=o(g,t),n.point(p[0],p[1])):(p=o(t,g),n.point(p[0],p[1]),n.lineEnd()),t=p;else if(r&&t&&e^v){var y;d&a||!(y=o(g,t,!0))||(s=0,e?(n.lineStart(),n.point(y[0][0],y[0][1]),n.point(y[1][0],y[1][1]),n.lineEnd()):(n.point(y[1][0],y[1][1]),n.lineEnd(),n.lineStart(),n.point(y[0][0],y[0][1])))}!v||t&&$e(t,g)||n.point(g[0],g[1]),t=g,l=v,a=d},lineEnd:function(){l&&n.lineEnd(),t=null},clean:function(){return s|(c&&l)<<1}}},Br(n,6*Dn),e?[0,-n]:[-Ln,n-Ln]);function i(n,e){return Math.cos(n)*Math.cos(e)>t}function o(n,e,r){var i=[1,0,0],o=He(Ue(n),Ue(e)),u=Oe(o,o),a=o[0],l=u-a*a;if(!l)return!r&&n;var c=t*u/l,s=-t*a/l,f=He(i,o),h=Ie(i,c);Fe(h,Ie(o,s));var p=f,g=Oe(h,p),v=Oe(p,p),d=g*g-v*(Oe(h,h)-1);if(!(d<0)){var y=Math.sqrt(d),m=Ie(p,(-g-y)/v);if(Fe(m,h),m=Ye(m),!r)return m;var x,M=n[0],_=e[0],b=n[1],S=e[1];_<M&&(x=M,M=_,_=x);var N=_-M,k=w(N-Ln)<En;if(!k&&S<b&&(x=b,b=S,S=x),k||N<En?k?b+S>0^m[1]<(w(m[0]-M)<En?b:S):b<=m[1]&&m[1]<=S:N>Ln^(M<=m[0]&&m[0]<=_)){var A=Ie(p,(-g+y)/v);return Fe(A,h),[m,Ye(A)]}}}function u(t,r){var i=e?n:Ln-n,o=0;return t<-i?o|=1:t>i&&(o|=2),r<-i?o|=4:r>i&&(o|=8),o}}((x=+n)*Dn),N()):x},_.clipExtent=function(n){return arguments.length?(M=n,m=n?sr(n[0][0],n[0][1],n[1][0],n[1][1]):R,N()):M},_.scale=function(n){return arguments.length?(c=+n,S()):c},_.translate=function(n){return arguments.length?(s=+n[0],f=+n[1],S()):[s,f]},_.center=function(n){return arguments.length?(h=n[0]%360*Dn,p=n[1]%360*Dn,S()):[h*Rn,p*Rn]},_.rotate=function(n){return arguments.length?(g=n[0]%360*Dn,v=n[1]%360*Dn,d=n.length>2?n[2]%360*Dn:0,S()):[g*Rn,v*Rn,d*Rn]},o.rebind(_,l,\"precision\"),function(){return t=n.apply(this,arguments),_.invert=t.invert&&b,S()}}function Pr(n){return qr(n,function(t,e){n.point(t*Dn,e*Dn)})}function jr(n,t){return[n,t]}function Ur(n,t){return[n>Ln?n-Tn:n<-Ln?n+Tn:n,t]}function Or(n,t,e){return n?t||e?Je(Fr(n),Ir(t,e)):Fr(n):t||e?Ir(t,e):Ur}function Hr(n){return function(t,e){return[(t+=n)>Ln?t-Tn:t<-Ln?t+Tn:t,e]}}function Fr(n){var t=Hr(n);return t.invert=Hr(-n),t}function Ir(n,t){var e=Math.cos(n),r=Math.sin(n),i=Math.cos(t),o=Math.sin(t);function u(n,t){var u=Math.cos(t),a=Math.cos(n)*u,l=Math.sin(n)*u,c=Math.sin(t),s=c*e+a*r;return[Math.atan2(l*i-s*o,a*e-c*r),On(s*i+l*o)]}return u.invert=function(n,t){var u=Math.cos(t),a=Math.cos(n)*u,l=Math.sin(n)*u,c=Math.sin(t),s=c*i-l*o;return[Math.atan2(l*i+c*o,a*e+s*r),On(s*e-a*r)]},u}function Br(n,t){var e=Math.cos(n),r=Math.sin(n);return function(i,o,u,a){var l=u*t;null!=i?(i=Yr(e,i),o=Yr(e,o),(u>0?i<o:i>o)&&(i+=u*Tn)):(i=n+u*Tn,o=n-.5*l);for(var c,s=i;u>0?s>o:s<o;s-=l)a.point((c=Ye([e,-r*Math.cos(s),-r*Math.sin(s)]))[0],c[1])}}function Yr(n,t){var e=Ue(t);e[0]-=n,Be(e);var r=Un(-e[1]);return((-e[2]<0?-r:r)+2*Math.PI-En)%(2*Math.PI)}function $r(n,t,e){var r=o.range(n,t-En,e).concat(t);return function(n){return r.map(function(t){return[n,t]})}}function Vr(n,t,e){var r=o.range(n,t-En,e).concat(t);return function(n){return r.map(function(t){return[t,n]})}}function Zr(n){return n.source}function Xr(n){return n.target}o.geo.path=function(){var n,t,e,r,i,u=4.5;function a(n){return n&&(\"function\"==typeof u&&r.pointRadius(+u.apply(this,arguments)),i&&i.valid||(i=e(r)),o.geo.stream(n,i)),r.result()}function l(){return i=null,a}return a.area=function(n){return pr=0,o.geo.stream(n,e(xr)),pr},a.centroid=function(n){return ke=Ae=Ee=Ce=Le=Te=ze=qe=De=0,o.geo.stream(n,e(Nr)),De?[ze/De,qe/De]:Te?[Ce/Te,Le/Te]:Ee?[ke/Ee,Ae/Ee]:[NaN,NaN]},a.bounds=function(n){return yr=mr=-(vr=dr=1/0),o.geo.stream(n,e(_r)),[[vr,dr],[yr,mr]]},a.projection=function(t){return arguments.length?(e=(n=t)?t.stream||(r=t,i=Tr(function(n,t){return r([n*Rn,t*Rn])}),function(n){return Pr(i(n))}):R,l()):n;var r,i},a.context=function(n){return arguments.length?(r=null==(t=n)?new wr:new Lr(n),\"function\"!=typeof u&&r.pointRadius(u),l()):t},a.pointRadius=function(n){return arguments.length?(u=\"function\"==typeof n?n:(r.pointRadius(+n),+n),a):u},a.projection(o.geo.albersUsa()).context(null)},o.geo.transform=function(n){return{stream:function(t){var e=new zr(t);for(var r in n)e[r]=n[r];return e}}},zr.prototype={point:function(n,t){this.stream.point(n,t)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}},o.geo.projection=Dr,o.geo.projectionMutator=Rr,(o.geo.equirectangular=function(){return Dr(jr)}).raw=jr.invert=jr,o.geo.rotation=function(n){function t(t){return(t=n(t[0]*Dn,t[1]*Dn))[0]*=Rn,t[1]*=Rn,t}return n=Or(n[0]%360*Dn,n[1]*Dn,n.length>2?n[2]*Dn:0),t.invert=function(t){return(t=n.invert(t[0]*Dn,t[1]*Dn))[0]*=Rn,t[1]*=Rn,t},t},Ur.invert=jr,o.geo.circle=function(){var n,t,e=[0,0],r=6;function i(){var n=\"function\"==typeof e?e.apply(this,arguments):e,r=Or(-n[0]*Dn,-n[1]*Dn,0).invert,i=[];return t(null,null,1,{point:function(n,t){i.push(n=r(n,t)),n[0]*=Rn,n[1]*=Rn}}),{type:\"Polygon\",coordinates:[i]}}return i.origin=function(n){return arguments.length?(e=n,i):e},i.angle=function(e){return arguments.length?(t=Br((n=+e)*Dn,r*Dn),i):n},i.precision=function(e){return arguments.length?(t=Br(n*Dn,(r=+e)*Dn),i):r},i.angle(90)},o.geo.distance=function(n,t){var e,r=(t[0]-n[0])*Dn,i=n[1]*Dn,o=t[1]*Dn,u=Math.sin(r),a=Math.cos(r),l=Math.sin(i),c=Math.cos(i),s=Math.sin(o),f=Math.cos(o);return Math.atan2(Math.sqrt((e=f*u)*e+(e=c*s-l*f*a)*e),l*s+c*f*a)},o.geo.graticule=function(){var n,t,e,r,i,u,a,l,c,s,f,h,p=10,g=p,v=90,d=360,y=2.5;function m(){return{type:\"MultiLineString\",coordinates:x()}}function x(){return o.range(Math.ceil(r/v)*v,e,v).map(f).concat(o.range(Math.ceil(l/d)*d,a,d).map(h)).concat(o.range(Math.ceil(t/p)*p,n,p).filter(function(n){return w(n%v)>En}).map(c)).concat(o.range(Math.ceil(u/g)*g,i,g).filter(function(n){return w(n%d)>En}).map(s))}return m.lines=function(){return x().map(function(n){return{type:\"LineString\",coordinates:n}})},m.outline=function(){return{type:\"Polygon\",coordinates:[f(r).concat(h(a).slice(1),f(e).reverse().slice(1),h(l).reverse().slice(1))]}},m.extent=function(n){return arguments.length?m.majorExtent(n).minorExtent(n):m.minorExtent()},m.majorExtent=function(n){return arguments.length?(r=+n[0][0],e=+n[1][0],l=+n[0][1],a=+n[1][1],r>e&&(n=r,r=e,e=n),l>a&&(n=l,l=a,a=n),m.precision(y)):[[r,l],[e,a]]},m.minorExtent=function(e){return arguments.length?(t=+e[0][0],n=+e[1][0],u=+e[0][1],i=+e[1][1],t>n&&(e=t,t=n,n=e),u>i&&(e=u,u=i,i=e),m.precision(y)):[[t,u],[n,i]]},m.step=function(n){return arguments.length?m.majorStep(n).minorStep(n):m.minorStep()},m.majorStep=function(n){return arguments.length?(v=+n[0],d=+n[1],m):[v,d]},m.minorStep=function(n){return arguments.length?(p=+n[0],g=+n[1],m):[p,g]},m.precision=function(o){return arguments.length?(y=+o,c=$r(u,i,90),s=Vr(t,n,y),f=$r(l,a,90),h=Vr(r,e,y),m):y},m.majorExtent([[-180,-90+En],[180,90-En]]).minorExtent([[-180,-80-En],[180,80+En]])},o.geo.greatArc=function(){var n,t,e=Zr,r=Xr;function i(){return{type:\"LineString\",coordinates:[n||e.apply(this,arguments),t||r.apply(this,arguments)]}}return i.distance=function(){return o.geo.distance(n||e.apply(this,arguments),t||r.apply(this,arguments))},i.source=function(t){return arguments.length?(e=t,n=\"function\"==typeof t?null:t,i):e},i.target=function(n){return arguments.length?(r=n,t=\"function\"==typeof n?null:n,i):r},i.precision=function(){return arguments.length?i:0},i},o.geo.interpolate=function(n,t){return e=n[0]*Dn,r=n[1]*Dn,i=t[0]*Dn,o=t[1]*Dn,u=Math.cos(r),a=Math.sin(r),l=Math.cos(o),c=Math.sin(o),s=u*Math.cos(e),f=u*Math.sin(e),h=l*Math.cos(i),p=l*Math.sin(i),g=2*Math.asin(Math.sqrt(Fn(o-r)+u*l*Fn(i-e))),v=1/Math.sin(g),(d=g?function(n){var t=Math.sin(n*=g)*v,e=Math.sin(g-n)*v,r=e*s+t*h,i=e*f+t*p,o=e*a+t*c;return[Math.atan2(i,r)*Rn,Math.atan2(o,Math.sqrt(r*r+i*i))*Rn]}:function(){return[e*Rn,r*Rn]}).distance=g,d;var e,r,i,o,u,a,l,c,s,f,h,p,g,v,d},o.geo.length=function(n){return Sr=0,o.geo.stream(n,Gr),Sr};var Gr={sphere:O,point:O,lineStart:function(){var n,t,e;function r(r,i){var o=Math.sin(i*=Dn),u=Math.cos(i),a=w((r*=Dn)-n),l=Math.cos(a);Sr+=Math.atan2(Math.sqrt((a=u*Math.sin(a))*a+(a=e*o-t*u*l)*a),t*o+e*u*l),n=r,t=o,e=u}Gr.point=function(i,o){n=i*Dn,t=Math.sin(o*=Dn),e=Math.cos(o),Gr.point=r},Gr.lineEnd=function(){Gr.point=Gr.lineEnd=O}},lineEnd:O,polygonStart:O,polygonEnd:O};function Wr(n,t){function e(t,e){var r=Math.cos(t),i=Math.cos(e),o=n(r*i);return[o*i*Math.sin(t),o*Math.sin(e)]}return e.invert=function(n,e){var r=Math.sqrt(n*n+e*e),i=t(r),o=Math.sin(i),u=Math.cos(i);return[Math.atan2(n*o,r*u),Math.asin(r&&e*o/r)]},e}var Kr=Wr(function(n){return Math.sqrt(2/(1+n))},function(n){return 2*Math.asin(n/2)});(o.geo.azimuthalEqualArea=function(){return Dr(Kr)}).raw=Kr;var Jr=Wr(function(n){var t=Math.acos(n);return t&&t/Math.sin(t)},R);function Qr(n,t){var e=Math.cos(n),r=function(n){return Math.tan(Ln/4+n/2)},i=n===t?Math.sin(n):Math.log(e/Math.cos(t))/Math.log(r(t)/r(n)),o=e*Math.pow(r(n),i)/i;if(!i)return ei;function u(n,t){o>0?t<-qn+En&&(t=-qn+En):t>qn-En&&(t=qn-En);var e=o/Math.pow(r(t),i);return[e*Math.sin(i*n),o-e*Math.cos(i*n)]}return u.invert=function(n,t){var e=o-t,r=Pn(i)*Math.sqrt(n*n+e*e);return[Math.atan2(n,e)/i,2*Math.atan(Math.pow(o/r,1/i))-qn]},u}function ni(n,t){var e=Math.cos(n),r=n===t?Math.sin(n):(e-Math.cos(t))/(t-n),i=e/r+n;if(w(r)<En)return jr;function o(n,t){var e=i-t;return[e*Math.sin(r*n),i-e*Math.cos(r*n)]}return o.invert=function(n,t){var e=i-t;return[Math.atan2(n,e)/r,i-Pn(r)*Math.sqrt(n*n+e*e)]},o}(o.geo.azimuthalEquidistant=function(){return Dr(Jr)}).raw=Jr,(o.geo.conicConformal=function(){return fr(Qr)}).raw=Qr,(o.geo.conicEquidistant=function(){return fr(ni)}).raw=ni;var ti=Wr(function(n){return 1/n},Math.atan);function ei(n,t){return[n,Math.log(Math.tan(Ln/4+t/2))]}function ri(n){var t,e=Dr(n),r=e.scale,i=e.translate,o=e.clipExtent;return e.scale=function(){var n=r.apply(e,arguments);return n===e?t?e.clipExtent(null):e:n},e.translate=function(){var n=i.apply(e,arguments);return n===e?t?e.clipExtent(null):e:n},e.clipExtent=function(n){var u=o.apply(e,arguments);if(u===e){if(t=null==n){var a=Ln*r(),l=i();o([[l[0]-a,l[1]-a],[l[0]+a,l[1]+a]])}}else t&&(u=null);return u},e.clipExtent(null)}(o.geo.gnomonic=function(){return Dr(ti)}).raw=ti,ei.invert=function(n,t){return[n,2*Math.atan(Math.exp(t))-qn]},(o.geo.mercator=function(){return ri(ei)}).raw=ei;var ii=Wr(function(){return 1},Math.asin);(o.geo.orthographic=function(){return Dr(ii)}).raw=ii;var oi=Wr(function(n){return 1/(1+n)},function(n){return 2*Math.atan(n)});function ui(n,t){return[Math.log(Math.tan(Ln/4+t/2)),-n]}function ai(n){return n[0]}function li(n){return n[1]}function ci(n){for(var t=n.length,e=[0,1],r=2,i=2;i<t;i++){for(;r>1&&jn(n[e[r-2]],n[e[r-1]],n[i])<=0;)--r;e[r++]=i}return e.slice(0,r)}function si(n,t){return n[0]-t[0]||n[1]-t[1]}(o.geo.stereographic=function(){return Dr(oi)}).raw=oi,ui.invert=function(n,t){return[-t,2*Math.atan(Math.exp(n))-qn]},(o.geo.transverseMercator=function(){var n=ri(ui),t=n.center,e=n.rotate;return n.center=function(n){return n?t([-n[1],n[0]]):[(n=t())[1],-n[0]]},n.rotate=function(n){return n?e([n[0],n[1],n.length>2?n[2]+90:90]):[(n=e())[0],n[1],n[2]-90]},e([0,0,90])}).raw=ui,o.geom={},o.geom.hull=function(n){var t=ai,e=li;if(arguments.length)return r(n);function r(n){if(n.length<3)return[];var r,i=_t(t),o=_t(e),u=n.length,a=[],l=[];for(r=0;r<u;r++)a.push([+i.call(this,n[r],r),+o.call(this,n[r],r),r]);for(a.sort(si),r=0;r<u;r++)l.push([a[r][0],-a[r][1]]);var c=ci(a),s=ci(l),f=s[0]===c[0],h=s[s.length-1]===c[c.length-1],p=[];for(r=c.length-1;r>=0;--r)p.push(n[a[c[r]][2]]);for(r=+f;r<s.length-h;++r)p.push(n[a[s[r]][2]]);return p}return r.x=function(n){return arguments.length?(t=n,r):t},r.y=function(n){return arguments.length?(e=n,r):e},r},o.geom.polygon=function(n){return V(n,fi),n};var fi=o.geom.polygon.prototype=[];function hi(n,t,e){return(e[0]-t[0])*(n[1]-t[1])<(e[1]-t[1])*(n[0]-t[0])}function pi(n,t,e,r){var i=n[0],o=e[0],u=t[0]-i,a=r[0]-o,l=n[1],c=e[1],s=t[1]-l,f=r[1]-c,h=(a*(l-c)-f*(i-o))/(f*u-a*s);return[i+h*u,l+h*s]}function gi(n){var t=n[0],e=n[n.length-1];return!(t[0]-e[0]||t[1]-e[1])}fi.area=function(){for(var n,t=-1,e=this.length,r=this[e-1],i=0;++t<e;)n=r,r=this[t],i+=n[1]*r[0]-n[0]*r[1];return.5*i},fi.centroid=function(n){var t,e,r=-1,i=this.length,o=0,u=0,a=this[i-1];for(arguments.length||(n=-1/(6*this.area()));++r<i;)t=a,a=this[r],e=t[0]*a[1]-a[0]*t[1],o+=(t[0]+a[0])*e,u+=(t[1]+a[1])*e;return[o*n,u*n]},fi.clip=function(n){for(var t,e,r,i,o,u,a=gi(n),l=-1,c=this.length-gi(this),s=this[c-1];++l<c;){for(t=n.slice(),n.length=0,i=this[l],o=t[(r=t.length-a)-1],e=-1;++e<r;)hi(u=t[e],s,i)?(hi(o,s,i)||n.push(pi(o,u,s,i)),n.push(u)):hi(o,s,i)&&n.push(pi(o,u,s,i)),o=u;a&&n.push(n[0]),s=i}return n};var vi,di,yi,mi,xi,Mi=[],_i=[];function wi(){Hi(this),this.edge=this.site=this.circle=null}function bi(n){var t=Mi.pop()||new wi;return t.site=n,t}function Si(n){qi(n),yi.remove(n),Mi.push(n),Hi(n)}function Ni(n){var t=n.circle,e=t.x,r=t.cy,i={x:e,y:r},o=n.P,u=n.N,a=[n];Si(n);for(var l=o;l.circle&&w(e-l.circle.x)<En&&w(r-l.circle.cy)<En;)o=l.P,a.unshift(l),Si(l),l=o;a.unshift(l),qi(l);for(var c=u;c.circle&&w(e-c.circle.x)<En&&w(r-c.circle.cy)<En;)u=c.N,a.push(c),Si(c),c=u;a.push(c),qi(c);var s,f=a.length;for(s=1;s<f;++s)c=a[s],l=a[s-1],ji(c.edge,l.site,c.site,i);l=a[0],(c=a[f-1]).edge=Pi(l.site,c.site,null,i),zi(l),zi(c)}function ki(n){for(var t,e,r,i,o=n.x,u=n.y,a=yi._;a;)if((r=Ai(a,u)-o)>En)a=a.L;else{if(!((i=o-Ei(a,u))>En)){r>-En?(t=a.P,e=a):i>-En?(t=a,e=a.N):t=e=a;break}if(!a.R){t=a;break}a=a.R}var l=bi(n);if(yi.insert(t,l),t||e){if(t===e)return qi(t),e=bi(t.site),yi.insert(l,e),l.edge=e.edge=Pi(t.site,l.site),zi(t),void zi(e);if(e){qi(t),qi(e);var c=t.site,s=c.x,f=c.y,h=n.x-s,p=n.y-f,g=e.site,v=g.x-s,d=g.y-f,y=2*(h*d-p*v),m=h*h+p*p,x=v*v+d*d,M={x:(d*m-p*x)/y+s,y:(h*x-v*m)/y+f};ji(e.edge,c,g,M),l.edge=Pi(c,n,null,M),e.edge=Pi(n,g,null,M),zi(t),zi(e)}else l.edge=Pi(t.site,l.site)}}function Ai(n,t){var e=n.site,r=e.x,i=e.y,o=i-t;if(!o)return r;var u=n.P;if(!u)return-1/0;var a=(e=u.site).x,l=e.y,c=l-t;if(!c)return a;var s=a-r,f=1/o-1/c,h=s/c;return f?(-h+Math.sqrt(h*h-2*f*(s*s/(-2*c)-l+c/2+i-o/2)))/f+r:(r+a)/2}function Ei(n,t){var e=n.N;if(e)return Ai(e,t);var r=n.site;return r.y===t?r.x:1/0}function Ci(n){this.site=n,this.edges=[]}function Li(n,t){return t.angle-n.angle}function Ti(){Hi(this),this.x=this.y=this.arc=this.site=this.cy=null}function zi(n){var t=n.P,e=n.N;if(t&&e){var r=t.site,i=n.site,o=e.site;if(r!==o){var u=i.x,a=i.y,l=r.x-u,c=r.y-a,s=o.x-u,f=2*(l*(d=o.y-a)-c*s);if(!(f>=-Cn)){var h=l*l+c*c,p=s*s+d*d,g=(d*h-c*p)/f,v=(l*p-s*h)/f,d=v+a,y=_i.pop()||new Ti;y.arc=n,y.site=i,y.x=g+u,y.y=d+Math.sqrt(g*g+v*v),y.cy=d,n.circle=y;for(var m=null,x=xi._;x;)if(y.y<x.y||y.y===x.y&&y.x<=x.x){if(!x.L){m=x.P;break}x=x.L}else{if(!x.R){m=x;break}x=x.R}xi.insert(m,y),m||(mi=y)}}}}function qi(n){var t=n.circle;t&&(t.P||(mi=t.N),xi.remove(t),_i.push(t),Hi(t),n.circle=null)}function Di(n,t){var e=n.b;if(e)return!0;var r,i,o=n.a,u=t[0][0],a=t[1][0],l=t[0][1],c=t[1][1],s=n.l,f=n.r,h=s.x,p=s.y,g=f.x,v=f.y,d=(h+g)/2,y=(p+v)/2;if(v===p){if(d<u||d>=a)return;if(h>g){if(o){if(o.y>=c)return}else o={x:d,y:l};e={x:d,y:c}}else{if(o){if(o.y<l)return}else o={x:d,y:c};e={x:d,y:l}}}else if(i=y-(r=(h-g)/(v-p))*d,r<-1||r>1)if(h>g){if(o){if(o.y>=c)return}else o={x:(l-i)/r,y:l};e={x:(c-i)/r,y:c}}else{if(o){if(o.y<l)return}else o={x:(c-i)/r,y:c};e={x:(l-i)/r,y:l}}else if(p<v){if(o){if(o.x>=a)return}else o={x:u,y:r*u+i};e={x:a,y:r*a+i}}else{if(o){if(o.x<u)return}else o={x:a,y:r*a+i};e={x:u,y:r*u+i}}return n.a=o,n.b=e,!0}function Ri(n,t){this.l=n,this.r=t,this.a=this.b=null}function Pi(n,t,e,r){var i=new Ri(n,t);return vi.push(i),e&&ji(i,n,t,e),r&&ji(i,t,n,r),di[n.i].edges.push(new Ui(i,n,t)),di[t.i].edges.push(new Ui(i,t,n)),i}function ji(n,t,e,r){n.a||n.b?n.l===e?n.b=r:n.a=r:(n.a=r,n.l=t,n.r=e)}function Ui(n,t,e){var r=n.a,i=n.b;this.edge=n,this.site=t,this.angle=e?Math.atan2(e.y-t.y,e.x-t.x):n.l===t?Math.atan2(i.x-r.x,r.y-i.y):Math.atan2(r.x-i.x,i.y-r.y)}function Oi(){this._=null}function Hi(n){n.U=n.C=n.L=n.R=n.P=n.N=null}function Fi(n,t){var e=t,r=t.R,i=e.U;i?i.L===e?i.L=r:i.R=r:n._=r,r.U=i,e.U=r,e.R=r.L,e.R&&(e.R.U=e),r.L=e}function Ii(n,t){var e=t,r=t.L,i=e.U;i?i.L===e?i.L=r:i.R=r:n._=r,r.U=i,e.U=r,e.L=r.R,e.L&&(e.L.U=e),r.R=e}function Bi(n){for(;n.L;)n=n.L;return n}function Yi(n,t){var e,r,i,o=n.sort($i).pop();for(vi=[],di=new Array(n.length),yi=new Oi,xi=new Oi;;)if(i=mi,o&&(!i||o.y<i.y||o.y===i.y&&o.x<i.x))o.x===e&&o.y===r||(di[o.i]=new Ci(o),ki(o),e=o.x,r=o.y),o=n.pop();else{if(!i)break;Ni(i.arc)}t&&(function(n){for(var t,e=vi,r=lr(n[0][0],n[0][1],n[1][0],n[1][1]),i=e.length;i--;)(!Di(t=e[i],n)||!r(t)||w(t.a.x-t.b.x)<En&&w(t.a.y-t.b.y)<En)&&(t.a=t.b=null,e.splice(i,1))}(t),function(n){for(var t,e,r,i,o,u,a,l,c,s,f=n[0][0],h=n[1][0],p=n[0][1],g=n[1][1],v=di,d=v.length;d--;)if((o=v[d])&&o.prepare())for(l=(a=o.edges).length,u=0;u<l;)r=(s=a[u].end()).x,i=s.y,t=(c=a[++u%l].start()).x,e=c.y,(w(r-t)>En||w(i-e)>En)&&(a.splice(u,0,new Ui((y=o.site,m=s,x=w(r-f)<En&&g-i>En?{x:f,y:w(t-f)<En?e:g}:w(i-g)<En&&h-r>En?{x:w(e-g)<En?t:h,y:g}:w(r-h)<En&&i-p>En?{x:h,y:w(t-h)<En?e:p}:w(i-p)<En&&r-f>En?{x:w(e-p)<En?t:f,y:p}:null,M=void 0,M=new Ri(y,null),M.a=m,M.b=x,vi.push(M),M),o.site,null)),++l);var y,m,x,M}(t));var u={cells:di,edges:vi};return yi=xi=vi=di=null,u}function $i(n,t){return t.y-n.y||t.x-n.x}Ci.prototype.prepare=function(){for(var n,t=this.edges,e=t.length;e--;)(n=t[e].edge).b&&n.a||t.splice(e,1);return t.sort(Li),t.length},Ui.prototype={start:function(){return this.edge.l===this.site?this.edge.a:this.edge.b},end:function(){return this.edge.l===this.site?this.edge.b:this.edge.a}},Oi.prototype={insert:function(n,t){var e,r,i;if(n){if(t.P=n,t.N=n.N,n.N&&(n.N.P=t),n.N=t,n.R){for(n=n.R;n.L;)n=n.L;n.L=t}else n.R=t;e=n}else this._?(n=Bi(this._),t.P=null,t.N=n,n.P=n.L=t,e=n):(t.P=t.N=null,this._=t,e=null);for(t.L=t.R=null,t.U=e,t.C=!0,n=t;e&&e.C;)e===(r=e.U).L?(i=r.R)&&i.C?(e.C=i.C=!1,r.C=!0,n=r):(n===e.R&&(Fi(this,e),e=(n=e).U),e.C=!1,r.C=!0,Ii(this,r)):(i=r.L)&&i.C?(e.C=i.C=!1,r.C=!0,n=r):(n===e.L&&(Ii(this,e),e=(n=e).U),e.C=!1,r.C=!0,Fi(this,r)),e=n.U;this._.C=!1},remove:function(n){n.N&&(n.N.P=n.P),n.P&&(n.P.N=n.N),n.N=n.P=null;var t,e,r,i=n.U,o=n.L,u=n.R;if(e=o?u?Bi(u):o:u,i?i.L===n?i.L=e:i.R=e:this._=e,o&&u?(r=e.C,e.C=n.C,e.L=o,o.U=e,e!==u?(i=e.U,e.U=n.U,n=e.R,i.L=n,e.R=u,u.U=e):(e.U=i,i=e,n=e.R)):(r=n.C,n=e),n&&(n.U=i),!r)if(n&&n.C)n.C=!1;else{do{if(n===this._)break;if(n===i.L){if((t=i.R).C&&(t.C=!1,i.C=!0,Fi(this,i),t=i.R),t.L&&t.L.C||t.R&&t.R.C){t.R&&t.R.C||(t.L.C=!1,t.C=!0,Ii(this,t),t=i.R),t.C=i.C,i.C=t.R.C=!1,Fi(this,i),n=this._;break}}else if((t=i.L).C&&(t.C=!1,i.C=!0,Ii(this,i),t=i.L),t.L&&t.L.C||t.R&&t.R.C){t.L&&t.L.C||(t.R.C=!1,t.C=!0,Fi(this,t),t=i.L),t.C=i.C,i.C=t.L.C=!1,Ii(this,i),n=this._;break}t.C=!0,n=i,i=i.U}while(!n.C);n&&(n.C=!1)}}},o.geom.voronoi=function(n){var t=ai,e=li,r=t,i=e,o=Vi;if(n)return u(n);function u(n){var t=new Array(n.length),e=o[0][0],r=o[0][1],i=o[1][0],u=o[1][1];return Yi(a(n),o).cells.forEach(function(o,a){var l=o.edges,c=o.site;(t[a]=l.length?l.map(function(n){var t=n.start();return[t.x,t.y]}):c.x>=e&&c.x<=i&&c.y>=r&&c.y<=u?[[e,u],[i,u],[i,r],[e,r]]:[]).point=n[a]}),t}function a(n){return n.map(function(n,t){return{x:Math.round(r(n,t)/En)*En,y:Math.round(i(n,t)/En)*En,i:t}})}return u.links=function(n){return Yi(a(n)).edges.filter(function(n){return n.l&&n.r}).map(function(t){return{source:n[t.l.i],target:n[t.r.i]}})},u.triangles=function(n){var t=[];return Yi(a(n)).cells.forEach(function(e,r){for(var i,o,u,a,l=e.site,c=e.edges.sort(Li),s=-1,f=c.length,h=c[f-1].edge,p=h.l===l?h.r:h.l;++s<f;)h,i=p,p=(h=c[s].edge).l===l?h.r:h.l,r<i.i&&r<p.i&&(u=i,a=p,((o=l).x-a.x)*(u.y-o.y)-(o.x-u.x)*(a.y-o.y)<0)&&t.push([n[r],n[i.i],n[p.i]])}),t},u.x=function(n){return arguments.length?(r=_t(t=n),u):t},u.y=function(n){return arguments.length?(i=_t(e=n),u):e},u.clipExtent=function(n){return arguments.length?(o=null==n?Vi:n,u):o===Vi?null:o},u.size=function(n){return arguments.length?u.clipExtent(n&&[[0,0],n]):o===Vi?null:o&&o[1]},u};var Vi=[[-1e6,-1e6],[1e6,1e6]];function Zi(n){return n.x}function Xi(n){return n.y}function Gi(n,t){n=o.rgb(n),t=o.rgb(t);var e=n.r,r=n.g,i=n.b,u=t.r-e,a=t.g-r,l=t.b-i;return function(n){return\"#\"+gt(Math.round(e+u*n))+gt(Math.round(r+a*n))+gt(Math.round(i+l*n))}}function Wi(n,t){var e,r={},i={};for(e in n)e in t?r[e]=to(n[e],t[e]):i[e]=n[e];for(e in t)e in n||(i[e]=t[e]);return function(n){for(e in r)i[e]=r[e](n);return i}}function Ki(n,t){return n=+n,t=+t,function(e){return n*(1-e)+t*e}}function Ji(n,t){var e,r,i,o=Qi.lastIndex=no.lastIndex=0,u=-1,a=[],l=[];for(n+=\"\",t+=\"\";(e=Qi.exec(n))&&(r=no.exec(t));)(i=r.index)>o&&(i=t.slice(o,i),a[u]?a[u]+=i:a[++u]=i),(e=e[0])===(r=r[0])?a[u]?a[u]+=r:a[++u]=r:(a[++u]=null,l.push({i:u,x:Ki(e,r)})),o=no.lastIndex;return o<t.length&&(i=t.slice(o),a[u]?a[u]+=i:a[++u]=i),a.length<2?l[0]?(t=l[0].x,function(n){return t(n)+\"\"}):function(){return t}:(t=l.length,function(n){for(var e,r=0;r<t;++r)a[(e=l[r]).i]=e.x(n);return a.join(\"\")})}o.geom.delaunay=function(n){return o.geom.voronoi().triangles(n)},o.geom.quadtree=function(n,t,e,r,i){var o,u=ai,a=li;if(o=arguments.length)return u=Zi,a=Xi,3===o&&(i=e,r=t,e=t=0),l(n);function l(n){var l,c,s,f,h,p,g,v,d,y=_t(u),m=_t(a);if(null!=t)p=t,g=e,v=r,d=i;else if(v=d=-(p=g=1/0),c=[],s=[],h=n.length,o)for(f=0;f<h;++f)(l=n[f]).x<p&&(p=l.x),l.y<g&&(g=l.y),l.x>v&&(v=l.x),l.y>d&&(d=l.y),c.push(l.x),s.push(l.y);else for(f=0;f<h;++f){var x=+y(l=n[f],f),M=+m(l,f);x<p&&(p=x),M<g&&(g=M),x>v&&(v=x),M>d&&(d=M),c.push(x),s.push(M)}var _=v-p,b=d-g;function S(n,t,e,r,i,o,u,a){if(!isNaN(e)&&!isNaN(r))if(n.leaf){var l=n.x,c=n.y;if(null!=l)if(w(l-e)+w(c-r)<.01)N(n,t,e,r,i,o,u,a);else{var s=n.point;n.x=n.y=n.point=null,N(n,s,l,c,i,o,u,a),N(n,t,e,r,i,o,u,a)}else n.x=e,n.y=r,n.point=t}else N(n,t,e,r,i,o,u,a)}function N(n,t,e,r,i,o,u,a){var l=.5*(i+u),c=.5*(o+a),s=e>=l,f=r>=c,h=f<<1|s;n.leaf=!1,s?i=l:u=l,f?o=c:a=c,S(n=n.nodes[h]||(n.nodes[h]={leaf:!0,nodes:[],point:null,x:null,y:null}),t,e,r,i,o,u,a)}_>b?d=g+_:v=p+b;var k={leaf:!0,nodes:[],point:null,x:null,y:null,add:function(n){S(k,n,+y(n,++f),+m(n,f),p,g,v,d)}};if(k.visit=function(n){!function n(t,e,r,i,o,u){if(!t(e,r,i,o,u)){var a=.5*(r+o),l=.5*(i+u),c=e.nodes;c[0]&&n(t,c[0],r,i,a,l),c[1]&&n(t,c[1],a,i,o,l),c[2]&&n(t,c[2],r,l,a,u),c[3]&&n(t,c[3],a,l,o,u)}}(n,k,p,g,v,d)},k.find=function(n){return function(n,t,e,r,i,o,u){var a,l=1/0;return function n(c,s,f,h,p){if(!(s>o||f>u||h<r||p<i)){if(g=c.point){var g,v=t-c.x,d=e-c.y,y=v*v+d*d;if(y<l){var m=Math.sqrt(l=y);r=t-m,i=e-m,o=t+m,u=e+m,a=g}}for(var x=c.nodes,M=.5*(s+h),_=.5*(f+p),w=(e>=_)<<1|t>=M,b=w+4;w<b;++w)if(c=x[3&w])switch(3&w){case 0:n(c,s,f,M,_);break;case 1:n(c,M,f,h,_);break;case 2:n(c,s,_,M,p);break;case 3:n(c,M,_,h,p)}}}(n,r,i,o,u),a}(k,n[0],n[1],p,g,v,d)},f=-1,null==t){for(;++f<h;)S(k,n[f],c[f],s[f],p,g,v,d);--f}else n.forEach(k.add);return c=s=n=l=null,k}return l.x=function(n){return arguments.length?(u=n,l):u},l.y=function(n){return arguments.length?(a=n,l):a},l.extent=function(n){return arguments.length?(null==n?t=e=r=i=null:(t=+n[0][0],e=+n[0][1],r=+n[1][0],i=+n[1][1]),l):null==t?null:[[t,e],[r,i]]},l.size=function(n){return arguments.length?(null==n?t=e=r=i=null:(t=e=0,r=+n[0],i=+n[1]),l):null==t?null:[r-t,i-e]},l},o.interpolateRgb=Gi,o.interpolateObject=Wi,o.interpolateNumber=Ki,o.interpolateString=Ji;var Qi=/[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,no=new RegExp(Qi.source,\"g\");function to(n,t){for(var e,r=o.interpolators.length;--r>=0&&!(e=o.interpolators[r](n,t)););return e}function eo(n,t){var e,r=[],i=[],o=n.length,u=t.length,a=Math.min(n.length,t.length);for(e=0;e<a;++e)r.push(to(n[e],t[e]));for(;e<o;++e)i[e]=n[e];for(;e<u;++e)i[e]=t[e];return function(n){for(e=0;e<a;++e)i[e]=r[e](n);return i}}o.interpolate=to,o.interpolators=[function(n,t){var e=typeof t;return(\"string\"===e?Mt.has(t.toLowerCase())||/^(#|rgb\\(|hsl\\()/i.test(t)?Gi:Ji:t instanceof Vn?Gi:Array.isArray(t)?eo:\"object\"===e&&isNaN(t)?Wi:Ki)(n,t)}],o.interpolateArray=eo;var ro=function(){return R},io=o.map({linear:ro,poly:function(n){return function(t){return Math.pow(t,n)}},quad:function(){return lo},cubic:function(){return co},sin:function(){return fo},exp:function(){return ho},circle:function(){return po},elastic:function(n,t){var e;arguments.length<2&&(t=.45);arguments.length?e=t/Tn*Math.asin(1/n):(n=1,e=t/4);return function(r){return 1+n*Math.pow(2,-10*r)*Math.sin((r-e)*Tn/t)}},back:function(n){n||(n=1.70158);return function(t){return t*t*((n+1)*t-n)}},bounce:function(){return go}}),oo=o.map({in:R,out:uo,\"in-out\":ao,\"out-in\":function(n){return ao(uo(n))}});function uo(n){return function(t){return 1-n(1-t)}}function ao(n){return function(t){return.5*(t<.5?n(2*t):2-n(2-2*t))}}function lo(n){return n*n}function co(n){return n*n*n}function so(n){if(n<=0)return 0;if(n>=1)return 1;var t=n*n,e=t*n;return 4*(n<.5?e:3*(n-t)+e-.75)}function fo(n){return 1-Math.cos(n*qn)}function ho(n){return Math.pow(2,10*(n-1))}function po(n){return 1-Math.sqrt(1-n*n)}function go(n){return n<1/2.75?7.5625*n*n:n<2/2.75?7.5625*(n-=1.5/2.75)*n+.75:n<2.5/2.75?7.5625*(n-=2.25/2.75)*n+.9375:7.5625*(n-=2.625/2.75)*n+.984375}function vo(n,t){return t-=n,function(e){return Math.round(n+t*e)}}function yo(n){var t,e,r,i=[n.a,n.b],o=[n.c,n.d],u=xo(i),a=mo(i,o),l=xo(((t=o)[0]+=(r=-a)*(e=i)[0],t[1]+=r*e[1],t))||0;i[0]*o[1]<o[0]*i[1]&&(i[0]*=-1,i[1]*=-1,u*=-1,a*=-1),this.rotate=(u?Math.atan2(i[1],i[0]):Math.atan2(-o[0],o[1]))*Rn,this.translate=[n.e,n.f],this.scale=[u,l],this.skew=l?Math.atan2(a,l)*Rn:0}function mo(n,t){return n[0]*t[0]+n[1]*t[1]}function xo(n){var t=Math.sqrt(mo(n,n));return t&&(n[0]/=t,n[1]/=t),t}o.ease=function(n){var t,e=n.indexOf(\"-\"),r=e>=0?n.slice(0,e):n,i=e>=0?n.slice(e+1):\"in\";return r=io.get(r)||ro,i=oo.get(i)||R,t=i(r.apply(null,u.call(arguments,1))),function(n){return n<=0?0:n>=1?1:t(n)}},o.interpolateHcl=function(n,t){n=o.hcl(n),t=o.hcl(t);var e=n.h,r=n.c,i=n.l,u=t.h-e,a=t.c-r,l=t.l-i;isNaN(a)&&(a=0,r=isNaN(r)?t.c:r);isNaN(u)?(u=0,e=isNaN(e)?t.h:e):u>180?u-=360:u<-180&&(u+=360);return function(n){return Jn(e+u*n,r+a*n,i+l*n)+\"\"}},o.interpolateHsl=function(n,t){n=o.hsl(n),t=o.hsl(t);var e=n.h,r=n.s,i=n.l,u=t.h-e,a=t.s-r,l=t.l-i;isNaN(a)&&(a=0,r=isNaN(r)?t.s:r);isNaN(u)?(u=0,e=isNaN(e)?t.h:e):u>180?u-=360:u<-180&&(u+=360);return function(n){return Gn(e+u*n,r+a*n,i+l*n)+\"\"}},o.interpolateLab=function(n,t){n=o.lab(n),t=o.lab(t);var e=n.l,r=n.a,i=n.b,u=t.l-e,a=t.a-r,l=t.b-i;return function(n){return ot(e+u*n,r+a*n,i+l*n)+\"\"}},o.interpolateRound=vo,o.transform=function(n){var t=l.createElementNS(o.ns.prefix.svg,\"g\");return(o.transform=function(n){if(null!=n){t.setAttribute(\"transform\",n);var e=t.transform.baseVal.consolidate()}return new yo(e?e.matrix:Mo)})(n)},yo.prototype.toString=function(){return\"translate(\"+this.translate+\")rotate(\"+this.rotate+\")skewX(\"+this.skew+\")scale(\"+this.scale+\")\"};var Mo={a:1,b:0,c:0,d:1,e:0,f:0};function _o(n){return n.length?n.pop()+\",\":\"\"}function wo(n,t){var e=[],r=[];return n=o.transform(n),t=o.transform(t),function(n,t,e,r){if(n[0]!==t[0]||n[1]!==t[1]){var i=e.push(\"translate(\",null,\",\",null,\")\");r.push({i:i-4,x:Ki(n[0],t[0])},{i:i-2,x:Ki(n[1],t[1])})}else(t[0]||t[1])&&e.push(\"translate(\"+t+\")\")}(n.translate,t.translate,e,r),function(n,t,e,r){n!==t?(n-t>180?t+=360:t-n>180&&(n+=360),r.push({i:e.push(_o(e)+\"rotate(\",null,\")\")-2,x:Ki(n,t)})):t&&e.push(_o(e)+\"rotate(\"+t+\")\")}(n.rotate,t.rotate,e,r),function(n,t,e,r){n!==t?r.push({i:e.push(_o(e)+\"skewX(\",null,\")\")-2,x:Ki(n,t)}):t&&e.push(_o(e)+\"skewX(\"+t+\")\")}(n.skew,t.skew,e,r),function(n,t,e,r){if(n[0]!==t[0]||n[1]!==t[1]){var i=e.push(_o(e)+\"scale(\",null,\",\",null,\")\");r.push({i:i-4,x:Ki(n[0],t[0])},{i:i-2,x:Ki(n[1],t[1])})}else 1===t[0]&&1===t[1]||e.push(_o(e)+\"scale(\"+t+\")\")}(n.scale,t.scale,e,r),n=t=null,function(n){for(var t,i=-1,o=r.length;++i<o;)e[(t=r[i]).i]=t.x(n);return e.join(\"\")}}function bo(n,t){return t=(t-=n=+n)||1/t,function(e){return(e-n)/t}}function So(n,t){return t=(t-=n=+n)||1/t,function(e){return Math.max(0,Math.min(1,(e-n)/t))}}function No(n){for(var t=n.source,e=n.target,r=function(n,t){if(n===t)return n;var e=ko(n),r=ko(t),i=e.pop(),o=r.pop(),u=null;for(;i===o;)u=i,i=e.pop(),o=r.pop();return u}(t,e),i=[t];t!==r;)t=t.parent,i.push(t);for(var o=i.length;e!==r;)i.splice(o,0,e),e=e.parent;return i}function ko(n){for(var t=[],e=n.parent;null!=e;)t.push(n),n=e,e=e.parent;return t.push(n),t}function Ao(n){n.fixed|=2}function Eo(n){n.fixed&=-7}function Co(n){n.fixed|=4,n.px=n.x,n.py=n.y}function Lo(n){n.fixed&=-5}o.interpolateTransform=wo,o.layout={},o.layout.bundle=function(){return function(n){for(var t=[],e=-1,r=n.length;++e<r;)t.push(No(n[e]));return t}},o.layout.chord=function(){var n,t,e,r,i,u,a,l={},c=0;function s(){var l,s,h,p,g,v={},d=[],y=o.range(r),m=[];for(n=[],t=[],l=0,p=-1;++p<r;){for(s=0,g=-1;++g<r;)s+=e[p][g];d.push(s),m.push(o.range(r)),l+=s}for(i&&y.sort(function(n,t){return i(d[n],d[t])}),u&&m.forEach(function(n,t){n.sort(function(n,r){return u(e[t][n],e[t][r])})}),l=(Tn-c*r)/l,s=0,p=-1;++p<r;){for(h=s,g=-1;++g<r;){var x=y[p],M=m[x][g],_=e[x][M],w=s,b=s+=_*l;v[x+\"-\"+M]={index:x,subindex:M,startAngle:w,endAngle:b,value:_}}t[x]={index:x,startAngle:h,endAngle:s,value:d[x]},s+=c}for(p=-1;++p<r;)for(g=p-1;++g<r;){var S=v[p+\"-\"+g],N=v[g+\"-\"+p];(S.value||N.value)&&n.push(S.value<N.value?{source:N,target:S}:{source:S,target:N})}a&&f()}function f(){n.sort(function(n,t){return a((n.source.value+n.target.value)/2,(t.source.value+t.target.value)/2)})}return l.matrix=function(i){return arguments.length?(r=(e=i)&&e.length,n=t=null,l):e},l.padding=function(e){return arguments.length?(c=e,n=t=null,l):c},l.sortGroups=function(e){return arguments.length?(i=e,n=t=null,l):i},l.sortSubgroups=function(t){return arguments.length?(u=t,n=null,l):u},l.sortChords=function(t){return arguments.length?(a=t,n&&f(),l):a},l.chords=function(){return n||s(),n},l.groups=function(){return t||s(),t},l},o.layout.force=function(){var n,t,e,r,i,u,a={},l=o.dispatch(\"start\",\"tick\",\"end\"),c=[1,1],s=.9,f=To,h=zo,p=-30,g=qo,v=.1,d=.64,y=[],m=[];function x(n){return function(t,e,r,i){if(t.point!==n){var o=t.cx-n.x,u=t.cy-n.y,a=i-e,l=o*o+u*u;if(a*a/d<l){if(l<g){var c=t.charge/l;n.px-=o*c,n.py-=u*c}return!0}if(t.point&&l&&l<g){c=t.pointCharge/l;n.px-=o*c,n.py-=u*c}}return!t.charge}}function M(n){n.px=o.event.x,n.py=o.event.y,a.resume()}return a.tick=function(){if((e*=.99)<.005)return n=null,l.end({type:\"end\",alpha:e=0}),!0;var t,a,f,h,g,d,M,_,w,b=y.length,S=m.length;for(a=0;a<S;++a)h=(f=m[a]).source,(d=(_=(g=f.target).x-h.x)*_+(w=g.y-h.y)*w)&&(_*=d=e*i[a]*((d=Math.sqrt(d))-r[a])/d,w*=d,g.x-=_*(M=h.weight+g.weight?h.weight/(h.weight+g.weight):.5),g.y-=w*M,h.x+=_*(M=1-M),h.y+=w*M);if((M=e*v)&&(_=c[0]/2,w=c[1]/2,a=-1,M))for(;++a<b;)(f=y[a]).x+=(_-f.x)*M,f.y+=(w-f.y)*M;if(p)for(!function n(t,e,r){var i=0,o=0;t.charge=0;if(!t.leaf)for(var u,a=t.nodes,l=a.length,c=-1;++c<l;)null!=(u=a[c])&&(n(u,e,r),t.charge+=u.charge,i+=u.charge*u.cx,o+=u.charge*u.cy);if(t.point){t.leaf||(t.point.x+=Math.random()-.5,t.point.y+=Math.random()-.5);var s=e*r[t.point.index];t.charge+=t.pointCharge=s,i+=s*t.point.x,o+=s*t.point.y}t.cx=i/t.charge;t.cy=o/t.charge}(t=o.geom.quadtree(y),e,u),a=-1;++a<b;)(f=y[a]).fixed||t.visit(x(f));for(a=-1;++a<b;)(f=y[a]).fixed?(f.x=f.px,f.y=f.py):(f.x-=(f.px-(f.px=f.x))*s,f.y-=(f.py-(f.py=f.y))*s);l.tick({type:\"tick\",alpha:e})},a.nodes=function(n){return arguments.length?(y=n,a):y},a.links=function(n){return arguments.length?(m=n,a):m},a.size=function(n){return arguments.length?(c=n,a):c},a.linkDistance=function(n){return arguments.length?(f=\"function\"==typeof n?n:+n,a):f},a.distance=a.linkDistance,a.linkStrength=function(n){return arguments.length?(h=\"function\"==typeof n?n:+n,a):h},a.friction=function(n){return arguments.length?(s=+n,a):s},a.charge=function(n){return arguments.length?(p=\"function\"==typeof n?n:+n,a):p},a.chargeDistance=function(n){return arguments.length?(g=n*n,a):Math.sqrt(g)},a.gravity=function(n){return arguments.length?(v=+n,a):v},a.theta=function(n){return arguments.length?(d=n*n,a):Math.sqrt(d)},a.alpha=function(t){return arguments.length?(t=+t,e?t>0?e=t:(n.c=null,n.t=NaN,n=null,l.end({type:\"end\",alpha:e=0})):t>0&&(l.start({type:\"start\",alpha:e=t}),n=Ct(a.tick)),a):e},a.start=function(){var n,t,e,o=y.length,l=m.length,s=c[0],g=c[1];for(n=0;n<o;++n)(e=y[n]).index=n,e.weight=0;for(n=0;n<l;++n)\"number\"==typeof(e=m[n]).source&&(e.source=y[e.source]),\"number\"==typeof e.target&&(e.target=y[e.target]),++e.source.weight,++e.target.weight;for(n=0;n<o;++n)e=y[n],isNaN(e.x)&&(e.x=v(\"x\",s)),isNaN(e.y)&&(e.y=v(\"y\",g)),isNaN(e.px)&&(e.px=e.x),isNaN(e.py)&&(e.py=e.y);if(r=[],\"function\"==typeof f)for(n=0;n<l;++n)r[n]=+f.call(this,m[n],n);else for(n=0;n<l;++n)r[n]=f;if(i=[],\"function\"==typeof h)for(n=0;n<l;++n)i[n]=+h.call(this,m[n],n);else for(n=0;n<l;++n)i[n]=h;if(u=[],\"function\"==typeof p)for(n=0;n<o;++n)u[n]=+p.call(this,y[n],n);else for(n=0;n<o;++n)u[n]=p;function v(e,r){if(!t){for(t=new Array(o),c=0;c<o;++c)t[c]=[];for(c=0;c<l;++c){var i=m[c];t[i.source.index].push(i.target),t[i.target.index].push(i.source)}}for(var u,a=t[n],c=-1,s=a.length;++c<s;)if(!isNaN(u=a[c][e]))return u;return Math.random()*r}return a.resume()},a.resume=function(){return a.alpha(.1)},a.stop=function(){return a.alpha(0)},a.drag=function(){if(t||(t=o.behavior.drag().origin(R).on(\"dragstart.force\",Ao).on(\"drag.force\",M).on(\"dragend.force\",Eo)),!arguments.length)return t;this.on(\"mouseover.force\",Co).on(\"mouseout.force\",Lo).call(t)},o.rebind(a,l,\"on\")};var To=20,zo=1,qo=1/0;function Do(n,t){return o.rebind(n,t,\"sort\",\"children\",\"value\"),n.nodes=n,n.links=Ho,n}function Ro(n,t){for(var e=[n];null!=(n=e.pop());)if(t(n),(i=n.children)&&(r=i.length))for(var r,i;--r>=0;)e.push(i[r])}function Po(n,t){for(var e=[n],r=[];null!=(n=e.pop());)if(r.push(n),(o=n.children)&&(i=o.length))for(var i,o,u=-1;++u<i;)e.push(o[u]);for(;null!=(n=r.pop());)t(n)}function jo(n){return n.children}function Uo(n){return n.value}function Oo(n,t){return t.value-n.value}function Ho(n){return o.merge(n.map(function(n){return(n.children||[]).map(function(t){return{source:n,target:t}})}))}o.layout.hierarchy=function(){var n=Oo,t=jo,e=Uo;function r(i){var o,u=[i],a=[];for(i.depth=0;null!=(o=u.pop());)if(a.push(o),(c=t.call(r,o,o.depth))&&(l=c.length)){for(var l,c,s;--l>=0;)u.push(s=c[l]),s.parent=o,s.depth=o.depth+1;e&&(o.value=0),o.children=c}else e&&(o.value=+e.call(r,o,o.depth)||0),delete o.children;return Po(i,function(t){var r,i;n&&(r=t.children)&&r.sort(n),e&&(i=t.parent)&&(i.value+=t.value)}),a}return r.sort=function(t){return arguments.length?(n=t,r):n},r.children=function(n){return arguments.length?(t=n,r):t},r.value=function(n){return arguments.length?(e=n,r):e},r.revalue=function(n){return e&&(Ro(n,function(n){n.children&&(n.value=0)}),Po(n,function(n){var t;n.children||(n.value=+e.call(r,n,n.depth)||0),(t=n.parent)&&(t.value+=n.value)})),n},r},o.layout.partition=function(){var n=o.layout.hierarchy(),t=[1,1];function e(e,r){var i=n.call(this,e,r);return function n(t,e,r,i){var o=t.children;if(t.x=e,t.y=t.depth*i,t.dx=r,t.dy=i,o&&(u=o.length)){var u,a,l,c=-1;for(r=t.value?r/t.value:0;++c<u;)n(a=o[c],e,l=a.value*r,i),e+=l}}(i[0],0,t[0],t[1]/function n(t){var e=t.children,r=0;if(e&&(i=e.length))for(var i,o=-1;++o<i;)r=Math.max(r,n(e[o]));return 1+r}(i[0])),i}return e.size=function(n){return arguments.length?(t=n,e):t},Do(e,n)},o.layout.pie=function(){var n=Number,t=Fo,e=0,r=Tn,i=0;function u(a){var l,c=a.length,s=a.map(function(t,e){return+n.call(u,t,e)}),f=+(\"function\"==typeof e?e.apply(this,arguments):e),h=(\"function\"==typeof r?r.apply(this,arguments):r)-f,p=Math.min(Math.abs(h)/c,+(\"function\"==typeof i?i.apply(this,arguments):i)),g=p*(h<0?-1:1),v=o.sum(s),d=v?(h-c*g)/v:0,y=o.range(c),m=[];return null!=t&&y.sort(t===Fo?function(n,t){return s[t]-s[n]}:function(n,e){return t(a[n],a[e])}),y.forEach(function(n){m[n]={data:a[n],value:l=s[n],startAngle:f,endAngle:f+=l*d+g,padAngle:p}}),m}return u.value=function(t){return arguments.length?(n=t,u):n},u.sort=function(n){return arguments.length?(t=n,u):t},u.startAngle=function(n){return arguments.length?(e=n,u):e},u.endAngle=function(n){return arguments.length?(r=n,u):r},u.padAngle=function(n){return arguments.length?(i=n,u):i},u};var Fo={};function Io(n){return n.x}function Bo(n){return n.y}function Yo(n,t,e){n.y0=t,n.y=e}o.layout.stack=function(){var n=R,t=Zo,e=Xo,r=Yo,i=Io,u=Bo;function a(l,c){if(!(p=l.length))return l;var s=l.map(function(t,e){return n.call(a,t,e)}),f=s.map(function(n){return n.map(function(n,t){return[i.call(a,n,t),u.call(a,n,t)]})}),h=t.call(a,f,c);s=o.permute(s,h),f=o.permute(f,h);var p,g,v,d,y=e.call(a,f,c),m=s[0].length;for(v=0;v<m;++v)for(r.call(a,s[0][v],d=y[v],f[0][v][1]),g=1;g<p;++g)r.call(a,s[g][v],d+=f[g-1][v][1],f[g][v][1]);return l}return a.values=function(t){return arguments.length?(n=t,a):n},a.order=function(n){return arguments.length?(t=\"function\"==typeof n?n:$o.get(n)||Zo,a):t},a.offset=function(n){return arguments.length?(e=\"function\"==typeof n?n:Vo.get(n)||Xo,a):e},a.x=function(n){return arguments.length?(i=n,a):i},a.y=function(n){return arguments.length?(u=n,a):u},a.out=function(n){return arguments.length?(r=n,a):r},a};var $o=o.map({\"inside-out\":function(n){var t,e,r=n.length,i=n.map(Go),u=n.map(Wo),a=o.range(r).sort(function(n,t){return i[n]-i[t]}),l=0,c=0,s=[],f=[];for(t=0;t<r;++t)e=a[t],l<c?(l+=u[e],s.push(e)):(c+=u[e],f.push(e));return f.reverse().concat(s)},reverse:function(n){return o.range(n.length).reverse()},default:Zo}),Vo=o.map({silhouette:function(n){var t,e,r,i=n.length,o=n[0].length,u=[],a=0,l=[];for(e=0;e<o;++e){for(t=0,r=0;t<i;t++)r+=n[t][e][1];r>a&&(a=r),u.push(r)}for(e=0;e<o;++e)l[e]=(a-u[e])/2;return l},wiggle:function(n){var t,e,r,i,o,u,a,l,c,s=n.length,f=n[0],h=f.length,p=[];for(p[0]=l=c=0,e=1;e<h;++e){for(t=0,i=0;t<s;++t)i+=n[t][e][1];for(t=0,o=0,a=f[e][0]-f[e-1][0];t<s;++t){for(r=0,u=(n[t][e][1]-n[t][e-1][1])/(2*a);r<t;++r)u+=(n[r][e][1]-n[r][e-1][1])/a;o+=u*n[t][e][1]}p[e]=l-=i?o/i*a:0,l<c&&(c=l)}for(e=0;e<h;++e)p[e]-=c;return p},expand:function(n){var t,e,r,i=n.length,o=n[0].length,u=1/i,a=[];for(e=0;e<o;++e){for(t=0,r=0;t<i;t++)r+=n[t][e][1];if(r)for(t=0;t<i;t++)n[t][e][1]/=r;else for(t=0;t<i;t++)n[t][e][1]=u}for(e=0;e<o;++e)a[e]=0;return a},zero:Xo});function Zo(n){return o.range(n.length)}function Xo(n){for(var t=-1,e=n[0].length,r=[];++t<e;)r[t]=0;return r}function Go(n){for(var t,e=1,r=0,i=n[0][1],o=n.length;e<o;++e)(t=n[e][1])>i&&(r=e,i=t);return r}function Wo(n){return n.reduce(Ko,0)}function Ko(n,t){return n+t[1]}function Jo(n,t){return Qo(n,Math.ceil(Math.log(t.length)/Math.LN2+1))}function Qo(n,t){for(var e=-1,r=+n[0],i=(n[1]-r)/t,o=[];++e<=t;)o[e]=i*e+r;return o}function nu(n){return[o.min(n),o.max(n)]}function tu(n,t){return n.value-t.value}function eu(n,t){var e=n._pack_next;n._pack_next=t,t._pack_prev=n,t._pack_next=e,e._pack_prev=t}function ru(n,t){n._pack_next=t,t._pack_prev=n}function iu(n,t){var e=t.x-n.x,r=t.y-n.y,i=n.r+t.r;return.999*i*i>e*e+r*r}function ou(n){if((t=n.children)&&(l=t.length)){var t,e,r,i,o,u,a,l,c=1/0,s=-1/0,f=1/0,h=-1/0;if(t.forEach(uu),(e=t[0]).x=-e.r,e.y=0,x(e),l>1&&((r=t[1]).x=r.r,r.y=0,x(r),l>2))for(lu(e,r,i=t[2]),x(i),eu(e,i),e._pack_prev=i,eu(i,r),r=e._pack_next,o=3;o<l;o++){lu(e,r,i=t[o]);var p=0,g=1,v=1;for(u=r._pack_next;u!==r;u=u._pack_next,g++)if(iu(u,i)){p=1;break}if(1==p)for(a=e._pack_prev;a!==u._pack_prev&&!iu(a,i);a=a._pack_prev,v++);p?(g<v||g==v&&r.r<e.r?ru(e,r=u):ru(e=a,r),o--):(eu(e,i),r=i,x(i))}var d=(c+s)/2,y=(f+h)/2,m=0;for(o=0;o<l;o++)(i=t[o]).x-=d,i.y-=y,m=Math.max(m,i.r+Math.sqrt(i.x*i.x+i.y*i.y));n.r=m,t.forEach(au)}function x(n){c=Math.min(n.x-n.r,c),s=Math.max(n.x+n.r,s),f=Math.min(n.y-n.r,f),h=Math.max(n.y+n.r,h)}}function uu(n){n._pack_next=n._pack_prev=n}function au(n){delete n._pack_next,delete n._pack_prev}function lu(n,t,e){var r=n.r+e.r,i=t.x-n.x,o=t.y-n.y;if(r&&(i||o)){var u=t.r+e.r,a=i*i+o*o,l=.5+((r*=r)-(u*=u))/(2*a),c=Math.sqrt(Math.max(0,2*u*(r+a)-(r-=a)*r-u*u))/(2*a);e.x=n.x+l*i+c*o,e.y=n.y+l*o-c*i}else e.x=n.x+r,e.y=n.y}function cu(n,t){return n.parent==t.parent?1:2}function su(n){var t=n.children;return t.length?t[0]:n.t}function fu(n){var t,e=n.children;return(t=e.length)?e[t-1]:n.t}function hu(n,t,e){var r=e/(t.i-n.i);t.c-=r,t.s+=e,n.c+=r,t.z+=e,t.m+=e}function pu(n,t,e){return n.a.parent===t.parent?n.a:e}function gu(n){return{x:n.x,y:n.y,dx:n.dx,dy:n.dy}}function vu(n,t){var e=n.x+t[3],r=n.y+t[0],i=n.dx-t[1]-t[3],o=n.dy-t[0]-t[2];return i<0&&(e+=i/2,i=0),o<0&&(r+=o/2,o=0),{x:e,y:r,dx:i,dy:o}}function du(n){var t=n[0],e=n[n.length-1];return t<e?[t,e]:[e,t]}function yu(n){return n.rangeExtent?n.rangeExtent():du(n.range())}function mu(n,t,e,r){var i=e(n[0],n[1]),o=r(t[0],t[1]);return function(n){return o(i(n))}}function xu(n,t){var e,r=0,i=n.length-1,o=n[r],u=n[i];return u<o&&(e=r,r=i,i=e,e=o,o=u,u=e),n[r]=t.floor(o),n[i]=t.ceil(u),n}function Mu(n){return n?{floor:function(t){return Math.floor(t/n)*n},ceil:function(t){return Math.ceil(t/n)*n}}:_u}o.layout.histogram=function(){var n=!0,t=Number,e=nu,r=Jo;function i(i,u){for(var a,l,c=[],s=i.map(t,this),f=e.call(this,s,u),h=r.call(this,f,s,u),p=(u=-1,s.length),g=h.length-1,v=n?1:1/p;++u<g;)(a=c[u]=[]).dx=h[u+1]-(a.x=h[u]),a.y=0;if(g>0)for(u=-1;++u<p;)(l=s[u])>=f[0]&&l<=f[1]&&((a=c[o.bisect(h,l,1,g)-1]).y+=v,a.push(i[u]));return c}return i.value=function(n){return arguments.length?(t=n,i):t},i.range=function(n){return arguments.length?(e=_t(n),i):e},i.bins=function(n){return arguments.length?(r=\"number\"==typeof n?function(t){return Qo(t,n)}:_t(n),i):r},i.frequency=function(t){return arguments.length?(n=!!t,i):n},i},o.layout.pack=function(){var n,t=o.layout.hierarchy().sort(tu),e=0,r=[1,1];function i(i,o){var u=t.call(this,i,o),a=u[0],l=r[0],c=r[1],s=null==n?Math.sqrt:\"function\"==typeof n?n:function(){return n};if(a.x=a.y=0,Po(a,function(n){n.r=+s(n.value)}),Po(a,ou),e){var f=e*(n?1:Math.max(2*a.r/l,2*a.r/c))/2;Po(a,function(n){n.r+=f}),Po(a,ou),Po(a,function(n){n.r-=f})}return function n(t,e,r,i){var o=t.children;t.x=e+=i*t.x;t.y=r+=i*t.y;t.r*=i;if(o)for(var u=-1,a=o.length;++u<a;)n(o[u],e,r,i)}(a,l/2,c/2,n?1:1/Math.max(2*a.r/l,2*a.r/c)),u}return i.size=function(n){return arguments.length?(r=n,i):r},i.radius=function(t){return arguments.length?(n=null==t||\"function\"==typeof t?t:+t,i):n},i.padding=function(n){return arguments.length?(e=+n,i):e},Do(i,t)},o.layout.tree=function(){var n=o.layout.hierarchy().sort(null).value(null),t=cu,e=[1,1],r=null;function i(i,o){var c=n.call(this,i,o),s=c[0],f=function(n){var t,e={A:null,children:[n]},r=[e];for(;null!=(t=r.pop());)for(var i,o=t.children,u=0,a=o.length;u<a;++u)r.push((o[u]=i={_:o[u],parent:t,children:(i=o[u].children)&&i.slice()||[],A:null,a:null,z:0,m:0,c:0,s:0,t:null,i:u}).a=i);return e.children[0]}(s);if(Po(f,u),f.parent.m=-f.z,Ro(f,a),r)Ro(s,l);else{var h=s,p=s,g=s;Ro(s,function(n){n.x<h.x&&(h=n),n.x>p.x&&(p=n),n.depth>g.depth&&(g=n)});var v=t(h,p)/2-h.x,d=e[0]/(p.x+t(p,h)/2+v),y=e[1]/(g.depth||1);Ro(s,function(n){n.x=(n.x+v)*d,n.y=n.depth*y})}return c}function u(n){var e=n.children,r=n.parent.children,i=n.i?r[n.i-1]:null;if(e.length){!function(n){var t,e=0,r=0,i=n.children,o=i.length;for(;--o>=0;)(t=i[o]).z+=e,t.m+=e,e+=t.s+(r+=t.c)}(n);var o=(e[0].z+e[e.length-1].z)/2;i?(n.z=i.z+t(n._,i._),n.m=n.z-o):n.z=o}else i&&(n.z=i.z+t(n._,i._));n.parent.A=function(n,e,r){if(e){for(var i,o=n,u=n,a=e,l=o.parent.children[0],c=o.m,s=u.m,f=a.m,h=l.m;a=fu(a),o=su(o),a&&o;)l=su(l),(u=fu(u)).a=n,(i=a.z+f-o.z-c+t(a._,o._))>0&&(hu(pu(a,n,r),n,i),c+=i,s+=i),f+=a.m,c+=o.m,h+=l.m,s+=u.m;a&&!fu(u)&&(u.t=a,u.m+=f-s),o&&!su(l)&&(l.t=o,l.m+=c-h,r=n)}return r}(n,i,n.parent.A||r[0])}function a(n){n._.x=n.z+n.parent.m,n.m+=n.parent.m}function l(n){n.x*=e[0],n.y=n.depth*e[1]}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(n){return arguments.length?(r=null==(e=n)?l:null,i):r?null:e},i.nodeSize=function(n){return arguments.length?(r=null==(e=n)?null:l,i):r?e:null},Do(i,n)},o.layout.cluster=function(){var n=o.layout.hierarchy().sort(null).value(null),t=cu,e=[1,1],r=!1;function i(i,u){var a,l=n.call(this,i,u),c=l[0],s=0;Po(c,function(n){var e=n.children;e&&e.length?(n.x=function(n){return n.reduce(function(n,t){return n+t.x},0)/n.length}(e),n.y=function(n){return 1+o.max(n,function(n){return n.y})}(e)):(n.x=a?s+=t(n,a):0,n.y=0,a=n)});var f=function n(t){var e=t.children;return e&&e.length?n(e[0]):t}(c),h=function n(t){var e,r=t.children;return r&&(e=r.length)?n(r[e-1]):t}(c),p=f.x-t(f,h)/2,g=h.x+t(h,f)/2;return Po(c,r?function(n){n.x=(n.x-c.x)*e[0],n.y=(c.y-n.y)*e[1]}:function(n){n.x=(n.x-p)/(g-p)*e[0],n.y=(1-(c.y?n.y/c.y:1))*e[1]}),l}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(n){return arguments.length?(r=null==(e=n),i):r?null:e},i.nodeSize=function(n){return arguments.length?(r=null!=(e=n),i):r?e:null},Do(i,n)},o.layout.treemap=function(){var n,t=o.layout.hierarchy(),e=Math.round,r=[1,1],i=null,u=gu,a=!1,l=\"squarify\",c=.5*(1+Math.sqrt(5));function s(n,t){for(var e,r,i=-1,o=n.length;++i<o;)r=(e=n[i]).value*(t<0?0:t),e.area=isNaN(r)||r<=0?0:r}function f(n){var t=n.children;if(t&&t.length){var e,r,i,o=u(n),a=[],c=t.slice(),h=1/0,v=\"slice\"===l?o.dx:\"dice\"===l?o.dy:\"slice-dice\"===l?1&n.depth?o.dy:o.dx:Math.min(o.dx,o.dy);for(s(c,o.dx*o.dy/n.value),a.area=0;(i=c.length)>0;)a.push(e=c[i-1]),a.area+=e.area,\"squarify\"!==l||(r=p(a,v))<=h?(c.pop(),h=r):(a.area-=a.pop().area,g(a,v,o,!1),v=Math.min(o.dx,o.dy),a.length=a.area=0,h=1/0);a.length&&(g(a,v,o,!0),a.length=a.area=0),t.forEach(f)}}function h(n){var t=n.children;if(t&&t.length){var e,r=u(n),i=t.slice(),o=[];for(s(i,r.dx*r.dy/n.value),o.area=0;e=i.pop();)o.push(e),o.area+=e.area,null!=e.z&&(g(o,e.z?r.dx:r.dy,r,!i.length),o.length=o.area=0);t.forEach(h)}}function p(n,t){for(var e,r=n.area,i=0,o=1/0,u=-1,a=n.length;++u<a;)(e=n[u].area)&&(e<o&&(o=e),e>i&&(i=e));return t*=t,(r*=r)?Math.max(t*i*c/r,r/(t*o*c)):1/0}function g(n,t,r,i){var o,u=-1,a=n.length,l=r.x,c=r.y,s=t?e(n.area/t):0;if(t==r.dx){for((i||s>r.dy)&&(s=r.dy);++u<a;)(o=n[u]).x=l,o.y=c,o.dy=s,l+=o.dx=Math.min(r.x+r.dx-l,s?e(o.area/s):0);o.z=!0,o.dx+=r.x+r.dx-l,r.y+=s,r.dy-=s}else{for((i||s>r.dx)&&(s=r.dx);++u<a;)(o=n[u]).x=l,o.y=c,o.dx=s,c+=o.dy=Math.min(r.y+r.dy-c,s?e(o.area/s):0);o.z=!1,o.dy+=r.y+r.dy-c,r.x+=s,r.dx-=s}}function v(e){var i=n||t(e),o=i[0];return o.x=o.y=0,o.value?(o.dx=r[0],o.dy=r[1]):o.dx=o.dy=0,n&&t.revalue(o),s([o],o.dx*o.dy/o.value),(n?h:f)(o),a&&(n=i),i}return v.size=function(n){return arguments.length?(r=n,v):r},v.padding=function(n){if(!arguments.length)return i;function t(t){return vu(t,n)}var e;return u=null==(i=n)?gu:\"function\"==(e=typeof n)?function(t){var e=n.call(v,t,t.depth);return null==e?gu(t):vu(t,\"number\"==typeof e?[e,e,e,e]:e)}:\"number\"===e?(n=[n,n,n,n],t):t,v},v.round=function(n){return arguments.length?(e=n?Math.round:Number,v):e!=Number},v.sticky=function(t){return arguments.length?(a=t,n=null,v):a},v.ratio=function(n){return arguments.length?(c=n,v):c},v.mode=function(n){return arguments.length?(l=n+\"\",v):l},Do(v,t)},o.random={normal:function(n,t){var e=arguments.length;return e<2&&(t=1),e<1&&(n=0),function(){var e,r,i;do{i=(e=2*Math.random()-1)*e+(r=2*Math.random()-1)*r}while(!i||i>1);return n+t*e*Math.sqrt(-2*Math.log(i)/i)}},logNormal:function(){var n=o.random.normal.apply(o,arguments);return function(){return Math.exp(n())}},bates:function(n){var t=o.random.irwinHall(n);return function(){return t()/n}},irwinHall:function(n){return function(){for(var t=0,e=0;e<n;e++)t+=Math.random();return t}}},o.scale={};var _u={floor:R,ceil:R};function wu(n,t,e,r){var i=[],u=[],a=0,l=Math.min(n.length,t.length)-1;for(n[l]<n[0]&&(n=n.slice().reverse(),t=t.slice().reverse());++a<=l;)i.push(e(n[a-1],n[a])),u.push(r(t[a-1],t[a]));return function(t){var e=o.bisect(n,t,1,l)-1;return u[e](i[e](t))}}function bu(n,t){return o.rebind(n,t,\"range\",\"rangeRound\",\"interpolate\",\"clamp\")}function Su(n,t){return xu(n,Mu(Nu(n,t)[2])),xu(n,Mu(Nu(n,t)[2])),n}function Nu(n,t){null==t&&(t=10);var e=du(n),r=e[1]-e[0],i=Math.pow(10,Math.floor(Math.log(r/t)/Math.LN10)),o=t/r*i;return o<=.15?i*=10:o<=.35?i*=5:o<=.75&&(i*=2),e[0]=Math.ceil(e[0]/i)*i,e[1]=Math.floor(e[1]/i)*i+.5*i,e[2]=i,e}function ku(n,t){return o.range.apply(o,Nu(n,t))}function Au(n,t,e){var r=Nu(n,t);if(e){var i=Pt.exec(e);if(i.shift(),\"s\"===i[8]){var u=o.formatPrefix(Math.max(w(r[0]),w(r[1])));return i[7]||(i[7]=\".\"+Cu(u.scale(r[2]))),i[8]=\"f\",e=o.format(i.join(\"\")),function(n){return e(u.scale(n))+u.symbol}}i[7]||(i[7]=\".\"+function(n,t){var e=Cu(t[2]);return n in Eu?Math.abs(e-Cu(Math.max(w(t[0]),w(t[1]))))+ +(\"e\"!==n):e-2*(\"%\"===n)}(i[8],r)),e=i.join(\"\")}else e=\",.\"+Cu(r[2])+\"f\";return o.format(e)}o.scale.linear=function(){return function n(t,e,r,i){var o,u;function a(){var n=Math.min(t.length,e.length)>2?wu:mu,a=i?So:bo;return o=n(t,e,a,r),u=n(e,t,a,to),l}function l(n){return o(n)}l.invert=function(n){return u(n)};l.domain=function(n){return arguments.length?(t=n.map(Number),a()):t};l.range=function(n){return arguments.length?(e=n,a()):e};l.rangeRound=function(n){return l.range(n).interpolate(vo)};l.clamp=function(n){return arguments.length?(i=n,a()):i};l.interpolate=function(n){return arguments.length?(r=n,a()):r};l.ticks=function(n){return ku(t,n)};l.tickFormat=function(n,e){return Au(t,n,e)};l.nice=function(n){return Su(t,n),a()};l.copy=function(){return n(t,e,r,i)};return a()}([0,1],[0,1],to,!1)};var Eu={s:1,g:1,p:1,r:1,e:1};function Cu(n){return-Math.floor(Math.log(n)/Math.LN10+.01)}o.scale.log=function(){return function n(t,e,r,i){function u(n){return(r?Math.log(n<0?0:n):-Math.log(n>0?0:-n))/Math.log(e)}function a(n){return r?Math.pow(e,n):-Math.pow(e,-n)}function l(n){return t(u(n))}l.invert=function(n){return a(t.invert(n))};l.domain=function(n){return arguments.length?(r=n[0]>=0,t.domain((i=n.map(Number)).map(u)),l):i};l.base=function(n){return arguments.length?(e=+n,t.domain(i.map(u)),l):e};l.nice=function(){var n=xu(i.map(u),r?Math:Tu);return t.domain(n),i=n.map(a),l};l.ticks=function(){var n=du(i),t=[],o=n[0],l=n[1],c=Math.floor(u(o)),s=Math.ceil(u(l)),f=e%1?2:e;if(isFinite(s-c)){if(r){for(;c<s;c++)for(var h=1;h<f;h++)t.push(a(c)*h);t.push(a(c))}else for(t.push(a(c));c++<s;)for(var h=f-1;h>0;h--)t.push(a(c)*h);for(c=0;t[c]<o;c++);for(s=t.length;t[s-1]>l;s--);t=t.slice(c,s)}return t};l.tickFormat=function(n,t){if(!arguments.length)return Lu;arguments.length<2?t=Lu:\"function\"!=typeof t&&(t=o.format(t));var r=Math.max(1,e*n/l.ticks().length);return function(n){var i=n/a(Math.round(u(n)));return i*e<e-.5&&(i*=e),i<=r?t(n):\"\"}};l.copy=function(){return n(t.copy(),e,r,i)};return bu(l,t)}(o.scale.linear().domain([0,1]),10,!0,[1,10])};var Lu=o.format(\".0e\"),Tu={floor:function(n){return-Math.ceil(-n)},ceil:function(n){return-Math.floor(-n)}};function zu(n){return function(t){return t<0?-Math.pow(-t,n):Math.pow(t,n)}}o.scale.pow=function(){return function n(t,e,r){var i=zu(e),o=zu(1/e);function u(n){return t(i(n))}u.invert=function(n){return o(t.invert(n))};u.domain=function(n){return arguments.length?(t.domain((r=n.map(Number)).map(i)),u):r};u.ticks=function(n){return ku(r,n)};u.tickFormat=function(n,t){return Au(r,n,t)};u.nice=function(n){return u.domain(Su(r,n))};u.exponent=function(n){return arguments.length?(i=zu(e=n),o=zu(1/e),t.domain(r.map(i)),u):e};u.copy=function(){return n(t.copy(),e,r)};return bu(u,t)}(o.scale.linear(),1,[0,1])},o.scale.sqrt=function(){return o.scale.pow().exponent(.5)},o.scale.ordinal=function(){return function n(t,e){var r,i,u;function a(n){return i[((r.get(n)||(\"range\"===e.t?r.set(n,t.push(n)):NaN))-1)%i.length]}function l(n,e){return o.range(t.length).map(function(t){return n+e*t})}a.domain=function(n){if(!arguments.length)return t;t=[],r=new S;for(var i,o=-1,u=n.length;++o<u;)r.has(i=n[o])||r.set(i,t.push(i));return a[e.t].apply(a,e.a)};a.range=function(n){return arguments.length?(i=n,u=0,e={t:\"range\",a:arguments},a):i};a.rangePoints=function(n,r){arguments.length<2&&(r=0);var o=n[0],c=n[1],s=t.length<2?(o=(o+c)/2,0):(c-o)/(t.length-1+r);return i=l(o+s*r/2,s),u=0,e={t:\"rangePoints\",a:arguments},a};a.rangeRoundPoints=function(n,r){arguments.length<2&&(r=0);var o=n[0],c=n[1],s=t.length<2?(o=c=Math.round((o+c)/2),0):(c-o)/(t.length-1+r)|0;return i=l(o+Math.round(s*r/2+(c-o-(t.length-1+r)*s)/2),s),u=0,e={t:\"rangeRoundPoints\",a:arguments},a};a.rangeBands=function(n,r,o){arguments.length<2&&(r=0),arguments.length<3&&(o=r);var c=n[1]<n[0],s=n[c-0],f=n[1-c],h=(f-s)/(t.length-r+2*o);return i=l(s+h*o,h),c&&i.reverse(),u=h*(1-r),e={t:\"rangeBands\",a:arguments},a};a.rangeRoundBands=function(n,r,o){arguments.length<2&&(r=0),arguments.length<3&&(o=r);var c=n[1]<n[0],s=n[c-0],f=n[1-c],h=Math.floor((f-s)/(t.length-r+2*o));return i=l(s+Math.round((f-s-(t.length-r)*h)/2),h),c&&i.reverse(),u=Math.round(h*(1-r)),e={t:\"rangeRoundBands\",a:arguments},a};a.rangeBand=function(){return u};a.rangeExtent=function(){return du(e.a[0])};a.copy=function(){return n(t,e)};return a.domain(t)}([],{t:\"range\",a:[[]]})},o.scale.category10=function(){return o.scale.ordinal().range(qu)},o.scale.category20=function(){return o.scale.ordinal().range(Du)},o.scale.category20b=function(){return o.scale.ordinal().range(Ru)},o.scale.category20c=function(){return o.scale.ordinal().range(Pu)};var qu=[2062260,16744206,2924588,14034728,9725885,9197131,14907330,8355711,12369186,1556175].map(ht),Du=[2062260,11454440,16744206,16759672,2924588,10018698,14034728,16750742,9725885,12955861,9197131,12885140,14907330,16234194,8355711,13092807,12369186,14408589,1556175,10410725].map(ht),Ru=[3750777,5395619,7040719,10264286,6519097,9216594,11915115,13556636,9202993,12426809,15186514,15190932,8666169,11356490,14049643,15177372,8077683,10834324,13528509,14589654].map(ht),Pu=[3244733,7057110,10406625,13032431,15095053,16616764,16625259,16634018,3253076,7652470,10607003,13101504,7695281,10394312,12369372,14342891,6513507,9868950,12434877,14277081].map(ht);function ju(){return 0}o.scale.quantile=function(){return function n(t,e){var r;function i(){var n=0,i=e.length;for(r=[];++n<i;)r[n-1]=o.quantile(t,n/i);return u}function u(n){if(!isNaN(n=+n))return e[o.bisect(r,n)]}u.domain=function(n){return arguments.length?(t=n.map(y).filter(m).sort(d),i()):t};u.range=function(n){return arguments.length?(e=n,i()):e};u.quantiles=function(){return r};u.invertExtent=function(n){return(n=e.indexOf(n))<0?[NaN,NaN]:[n>0?r[n-1]:t[0],n<r.length?r[n]:t[t.length-1]]};u.copy=function(){return n(t,e)};return i()}([],[])},o.scale.quantize=function(){return function n(t,e,r){var i,o;function u(n){return r[Math.max(0,Math.min(o,Math.floor(i*(n-t))))]}function a(){return i=r.length/(e-t),o=r.length-1,u}u.domain=function(n){return arguments.length?(t=+n[0],e=+n[n.length-1],a()):[t,e]};u.range=function(n){return arguments.length?(r=n,a()):r};u.invertExtent=function(n){return[n=(n=r.indexOf(n))<0?NaN:n/i+t,n+1/i]};u.copy=function(){return n(t,e,r)};return a()}(0,1,[0,1])},o.scale.threshold=function(){return function n(t,e){function r(n){if(n<=n)return e[o.bisect(t,n)]}r.domain=function(n){return arguments.length?(t=n,r):t};r.range=function(n){return arguments.length?(e=n,r):e};r.invertExtent=function(n){return n=e.indexOf(n),[t[n-1],t[n]]};r.copy=function(){return n(t,e)};return r}([.5],[0,1])},o.scale.identity=function(){return function n(t){function e(n){return+n}e.invert=e;e.domain=e.range=function(n){return arguments.length?(t=n.map(e),e):t};e.ticks=function(n){return ku(t,n)};e.tickFormat=function(n,e){return Au(t,n,e)};e.copy=function(){return n(t)};return e}([0,1])},o.svg={},o.svg.arc=function(){var n=Ou,t=Hu,e=ju,r=Uu,i=Fu,o=Iu,u=Bu;function a(){var a=Math.max(0,+n.apply(this,arguments)),c=Math.max(0,+t.apply(this,arguments)),s=i.apply(this,arguments)-qn,f=o.apply(this,arguments)-qn,h=Math.abs(f-s),p=s>f?0:1;if(c<a&&(g=c,c=a,a=g),h>=zn)return l(c,p)+(a?l(a,1-p):\"\")+\"Z\";var g,v,d,y,m,x,M,_,w,b,S,N,k=0,A=0,E=[];if((y=(+u.apply(this,arguments)||0)/2)&&(d=r===Uu?Math.sqrt(a*a+c*c):+r.apply(this,arguments),p||(A*=-1),c&&(A=On(d/c*Math.sin(y))),a&&(k=On(d/a*Math.sin(y)))),c){m=c*Math.cos(s+A),x=c*Math.sin(s+A),M=c*Math.cos(f-A),_=c*Math.sin(f-A);var C=Math.abs(f-s-2*A)<=Ln?0:1;if(A&&Yu(m,x,M,_)===p^C){var L=(s+f)/2;m=c*Math.cos(L),x=c*Math.sin(L),M=_=null}}else m=x=0;if(a){w=a*Math.cos(f-k),b=a*Math.sin(f-k),S=a*Math.cos(s+k),N=a*Math.sin(s+k);var T=Math.abs(s-f+2*k)<=Ln?0:1;if(k&&Yu(w,b,S,N)===1-p^T){var z=(s+f)/2;w=a*Math.cos(z),b=a*Math.sin(z),S=N=null}}else w=b=0;if(h>En&&(g=Math.min(Math.abs(c-a)/2,+e.apply(this,arguments)))>.001){v=a<c^p?0:1;var q=g,D=g;if(h<Ln){var R=null==S?[w,b]:null==M?[m,x]:pi([m,x],[S,N],[M,_],[w,b]),P=m-R[0],j=x-R[1],U=M-R[0],O=_-R[1],H=1/Math.sin(Math.acos((P*U+j*O)/(Math.sqrt(P*P+j*j)*Math.sqrt(U*U+O*O)))/2),F=Math.sqrt(R[0]*R[0]+R[1]*R[1]);D=Math.min(g,(a-F)/(H-1)),q=Math.min(g,(c-F)/(H+1))}if(null!=M){var I=$u(null==S?[w,b]:[S,N],[m,x],c,q,p),B=$u([M,_],[w,b],c,q,p);g===q?E.push(\"M\",I[0],\"A\",q,\",\",q,\" 0 0,\",v,\" \",I[1],\"A\",c,\",\",c,\" 0 \",1-p^Yu(I[1][0],I[1][1],B[1][0],B[1][1]),\",\",p,\" \",B[1],\"A\",q,\",\",q,\" 0 0,\",v,\" \",B[0]):E.push(\"M\",I[0],\"A\",q,\",\",q,\" 0 1,\",v,\" \",B[0])}else E.push(\"M\",m,\",\",x);if(null!=S){var Y=$u([m,x],[S,N],a,-D,p),$=$u([w,b],null==M?[m,x]:[M,_],a,-D,p);g===D?E.push(\"L\",$[0],\"A\",D,\",\",D,\" 0 0,\",v,\" \",$[1],\"A\",a,\",\",a,\" 0 \",p^Yu($[1][0],$[1][1],Y[1][0],Y[1][1]),\",\",1-p,\" \",Y[1],\"A\",D,\",\",D,\" 0 0,\",v,\" \",Y[0]):E.push(\"L\",$[0],\"A\",D,\",\",D,\" 0 0,\",v,\" \",Y[0])}else E.push(\"L\",w,\",\",b)}else E.push(\"M\",m,\",\",x),null!=M&&E.push(\"A\",c,\",\",c,\" 0 \",C,\",\",p,\" \",M,\",\",_),E.push(\"L\",w,\",\",b),null!=S&&E.push(\"A\",a,\",\",a,\" 0 \",T,\",\",1-p,\" \",S,\",\",N);return E.push(\"Z\"),E.join(\"\")}function l(n,t){return\"M0,\"+n+\"A\"+n+\",\"+n+\" 0 1,\"+t+\" 0,\"+-n+\"A\"+n+\",\"+n+\" 0 1,\"+t+\" 0,\"+n}return a.innerRadius=function(t){return arguments.length?(n=_t(t),a):n},a.outerRadius=function(n){return arguments.length?(t=_t(n),a):t},a.cornerRadius=function(n){return arguments.length?(e=_t(n),a):e},a.padRadius=function(n){return arguments.length?(r=n==Uu?Uu:_t(n),a):r},a.startAngle=function(n){return arguments.length?(i=_t(n),a):i},a.endAngle=function(n){return arguments.length?(o=_t(n),a):o},a.padAngle=function(n){return arguments.length?(u=_t(n),a):u},a.centroid=function(){var e=(+n.apply(this,arguments)+ +t.apply(this,arguments))/2,r=(+i.apply(this,arguments)+ +o.apply(this,arguments))/2-qn;return[Math.cos(r)*e,Math.sin(r)*e]},a};var Uu=\"auto\";function Ou(n){return n.innerRadius}function Hu(n){return n.outerRadius}function Fu(n){return n.startAngle}function Iu(n){return n.endAngle}function Bu(n){return n&&n.padAngle}function Yu(n,t,e,r){return(n-e)*t-(t-r)*n>0?0:1}function $u(n,t,e,r,i){var o=n[0]-t[0],u=n[1]-t[1],a=(i?r:-r)/Math.sqrt(o*o+u*u),l=a*u,c=-a*o,s=n[0]+l,f=n[1]+c,h=t[0]+l,p=t[1]+c,g=(s+h)/2,v=(f+p)/2,d=h-s,y=p-f,m=d*d+y*y,x=e-r,M=s*p-h*f,_=(y<0?-1:1)*Math.sqrt(Math.max(0,x*x*m-M*M)),w=(M*y-d*_)/m,b=(-M*d-y*_)/m,S=(M*y+d*_)/m,N=(-M*d+y*_)/m,k=w-g,A=b-v,E=S-g,C=N-v;return k*k+A*A>E*E+C*C&&(w=S,b=N),[[w-l,b-c],[w*e/x,b*e/x]]}function Vu(n){var t=ai,e=li,r=Qe,i=Xu,o=i.key,u=.7;function a(o){var a,l=[],c=[],s=-1,f=o.length,h=_t(t),p=_t(e);function g(){l.push(\"M\",i(n(c),u))}for(;++s<f;)r.call(this,a=o[s],s)?c.push([+h.call(this,a,s),+p.call(this,a,s)]):c.length&&(g(),c=[]);return c.length&&g(),l.length?l.join(\"\"):null}return a.x=function(n){return arguments.length?(t=n,a):t},a.y=function(n){return arguments.length?(e=n,a):e},a.defined=function(n){return arguments.length?(r=n,a):r},a.interpolate=function(n){return arguments.length?(o=\"function\"==typeof n?i=n:(i=Zu.get(n)||Xu).key,a):o},a.tension=function(n){return arguments.length?(u=n,a):u},a}o.svg.line=function(){return Vu(R)};var Zu=o.map({linear:Xu,\"linear-closed\":Gu,step:function(n){var t=0,e=n.length,r=n[0],i=[r[0],\",\",r[1]];for(;++t<e;)i.push(\"H\",(r[0]+(r=n[t])[0])/2,\"V\",r[1]);e>1&&i.push(\"H\",r[0]);return i.join(\"\")},\"step-before\":Wu,\"step-after\":Ku,basis:na,\"basis-open\":function(n){if(n.length<4)return Xu(n);var t,e=[],r=-1,i=n.length,o=[0],u=[0];for(;++r<3;)t=n[r],o.push(t[0]),u.push(t[1]);e.push(ta(ia,o)+\",\"+ta(ia,u)),--r;for(;++r<i;)t=n[r],o.shift(),o.push(t[0]),u.shift(),u.push(t[1]),oa(e,o,u);return e.join(\"\")},\"basis-closed\":function(n){var t,e,r=-1,i=n.length,o=i+4,u=[],a=[];for(;++r<4;)e=n[r%i],u.push(e[0]),a.push(e[1]);t=[ta(ia,u),\",\",ta(ia,a)],--r;for(;++r<o;)e=n[r%i],u.shift(),u.push(e[0]),a.shift(),a.push(e[1]),oa(t,u,a);return t.join(\"\")},bundle:function(n,t){var e=n.length-1;if(e)for(var r,i,o=n[0][0],u=n[0][1],a=n[e][0]-o,l=n[e][1]-u,c=-1;++c<=e;)r=n[c],i=c/e,r[0]=t*r[0]+(1-t)*(o+i*a),r[1]=t*r[1]+(1-t)*(u+i*l);return na(n)},cardinal:function(n,t){return n.length<3?Xu(n):n[0]+Ju(n,Qu(n,t))},\"cardinal-open\":function(n,t){return n.length<4?Xu(n):n[1]+Ju(n.slice(1,-1),Qu(n,t))},\"cardinal-closed\":function(n,t){return n.length<3?Gu(n):n[0]+Ju((n.push(n[0]),n),Qu([n[n.length-2]].concat(n,[n[1]]),t))},monotone:function(n){return n.length<3?Xu(n):n[0]+Ju(n,function(n){var t,e,r,i,o=[],u=function(n){var t=0,e=n.length-1,r=[],i=n[0],o=n[1],u=r[0]=ua(i,o);for(;++t<e;)r[t]=(u+(u=ua(i=o,o=n[t+1])))/2;return r[t]=u,r}(n),a=-1,l=n.length-1;for(;++a<l;)t=ua(n[a],n[a+1]),w(t)<En?u[a]=u[a+1]=0:(e=u[a]/t,r=u[a+1]/t,(i=e*e+r*r)>9&&(i=3*t/Math.sqrt(i),u[a]=i*e,u[a+1]=i*r));a=-1;for(;++a<=l;)i=(n[Math.min(l,a+1)][0]-n[Math.max(0,a-1)][0])/(6*(1+u[a]*u[a])),o.push([i||0,u[a]*i||0]);return o}(n))}});function Xu(n){return n.length>1?n.join(\"L\"):n+\"Z\"}function Gu(n){return n.join(\"L\")+\"Z\"}function Wu(n){for(var t=0,e=n.length,r=n[0],i=[r[0],\",\",r[1]];++t<e;)i.push(\"V\",(r=n[t])[1],\"H\",r[0]);return i.join(\"\")}function Ku(n){for(var t=0,e=n.length,r=n[0],i=[r[0],\",\",r[1]];++t<e;)i.push(\"H\",(r=n[t])[0],\"V\",r[1]);return i.join(\"\")}function Ju(n,t){if(t.length<1||n.length!=t.length&&n.length!=t.length+2)return Xu(n);var e=n.length!=t.length,r=\"\",i=n[0],o=n[1],u=t[0],a=u,l=1;if(e&&(r+=\"Q\"+(o[0]-2*u[0]/3)+\",\"+(o[1]-2*u[1]/3)+\",\"+o[0]+\",\"+o[1],i=n[1],l=2),t.length>1){a=t[1],o=n[l],l++,r+=\"C\"+(i[0]+u[0])+\",\"+(i[1]+u[1])+\",\"+(o[0]-a[0])+\",\"+(o[1]-a[1])+\",\"+o[0]+\",\"+o[1];for(var c=2;c<t.length;c++,l++)o=n[l],a=t[c],r+=\"S\"+(o[0]-a[0])+\",\"+(o[1]-a[1])+\",\"+o[0]+\",\"+o[1]}if(e){var s=n[l];r+=\"Q\"+(o[0]+2*a[0]/3)+\",\"+(o[1]+2*a[1]/3)+\",\"+s[0]+\",\"+s[1]}return r}function Qu(n,t){for(var e,r=[],i=(1-t)/2,o=n[0],u=n[1],a=1,l=n.length;++a<l;)e=o,o=u,u=n[a],r.push([i*(u[0]-e[0]),i*(u[1]-e[1])]);return r}function na(n){if(n.length<3)return Xu(n);var t=1,e=n.length,r=n[0],i=r[0],o=r[1],u=[i,i,i,(r=n[1])[0]],a=[o,o,o,r[1]],l=[i,\",\",o,\"L\",ta(ia,u),\",\",ta(ia,a)];for(n.push(n[e-1]);++t<=e;)r=n[t],u.shift(),u.push(r[0]),a.shift(),a.push(r[1]),oa(l,u,a);return n.pop(),l.push(\"L\",r),l.join(\"\")}function ta(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]+n[3]*t[3]}Zu.forEach(function(n,t){t.key=n,t.closed=/-closed$/.test(n)});var ea=[0,2/3,1/3,0],ra=[0,1/3,2/3,0],ia=[0,1/6,2/3,1/6];function oa(n,t,e){n.push(\"C\",ta(ea,t),\",\",ta(ea,e),\",\",ta(ra,t),\",\",ta(ra,e),\",\",ta(ia,t),\",\",ta(ia,e))}function ua(n,t){return(t[1]-n[1])/(t[0]-n[0])}function aa(n){for(var t,e,r,i=-1,o=n.length;++i<o;)e=(t=n[i])[0],r=t[1]-qn,t[0]=e*Math.cos(r),t[1]=e*Math.sin(r);return n}function la(n){var t=ai,e=ai,r=0,i=li,o=Qe,u=Xu,a=u.key,l=u,c=\"L\",s=.7;function f(a){var f,h,p,g=[],v=[],d=[],y=-1,m=a.length,x=_t(t),M=_t(r),_=t===e?function(){return h}:_t(e),w=r===i?function(){return p}:_t(i);function b(){g.push(\"M\",u(n(d),s),c,l(n(v.reverse()),s),\"Z\")}for(;++y<m;)o.call(this,f=a[y],y)?(v.push([h=+x.call(this,f,y),p=+M.call(this,f,y)]),d.push([+_.call(this,f,y),+w.call(this,f,y)])):v.length&&(b(),v=[],d=[]);return v.length&&b(),g.length?g.join(\"\"):null}return f.x=function(n){return arguments.length?(t=e=n,f):e},f.x0=function(n){return arguments.length?(t=n,f):t},f.x1=function(n){return arguments.length?(e=n,f):e},f.y=function(n){return arguments.length?(r=i=n,f):i},f.y0=function(n){return arguments.length?(r=n,f):r},f.y1=function(n){return arguments.length?(i=n,f):i},f.defined=function(n){return arguments.length?(o=n,f):o},f.interpolate=function(n){return arguments.length?(a=\"function\"==typeof n?u=n:(u=Zu.get(n)||Xu).key,l=u.reverse||u,c=u.closed?\"M\":\"L\",f):a},f.tension=function(n){return arguments.length?(s=n,f):s},f}function ca(n){return n.radius}function sa(n){return[n.x,n.y]}function fa(){return 64}function ha(){return\"circle\"}function pa(n){var t=Math.sqrt(n/Ln);return\"M0,\"+t+\"A\"+t+\",\"+t+\" 0 1,1 0,\"+-t+\"A\"+t+\",\"+t+\" 0 1,1 0,\"+t+\"Z\"}o.svg.line.radial=function(){var n=Vu(aa);return n.radius=n.x,delete n.x,n.angle=n.y,delete n.y,n},Wu.reverse=Ku,Ku.reverse=Wu,o.svg.area=function(){return la(R)},o.svg.area.radial=function(){var n=la(aa);return n.radius=n.x,delete n.x,n.innerRadius=n.x0,delete n.x0,n.outerRadius=n.x1,delete n.x1,n.angle=n.y,delete n.y,n.startAngle=n.y0,delete n.y0,n.endAngle=n.y1,delete n.y1,n},o.svg.chord=function(){var n=Zr,t=Xr,e=ca,r=Fu,i=Iu;function o(e,r){var i,o,c=u(this,n,e,r),s=u(this,t,e,r);return\"M\"+c.p0+a(c.r,c.p1,c.a1-c.a0)+(o=s,(i=c).a0==o.a0&&i.a1==o.a1?l(c.r,c.p1,c.r,c.p0):l(c.r,c.p1,s.r,s.p0)+a(s.r,s.p1,s.a1-s.a0)+l(s.r,s.p1,c.r,c.p0))+\"Z\"}function u(n,t,o,u){var a=t.call(n,o,u),l=e.call(n,a,u),c=r.call(n,a,u)-qn,s=i.call(n,a,u)-qn;return{r:l,a0:c,a1:s,p0:[l*Math.cos(c),l*Math.sin(c)],p1:[l*Math.cos(s),l*Math.sin(s)]}}function a(n,t,e){return\"A\"+n+\",\"+n+\" 0 \"+ +(e>Ln)+\",1 \"+t}function l(n,t,e,r){return\"Q 0,0 \"+r}return o.radius=function(n){return arguments.length?(e=_t(n),o):e},o.source=function(t){return arguments.length?(n=_t(t),o):n},o.target=function(n){return arguments.length?(t=_t(n),o):t},o.startAngle=function(n){return arguments.length?(r=_t(n),o):r},o.endAngle=function(n){return arguments.length?(i=_t(n),o):i},o},o.svg.diagonal=function(){var n=Zr,t=Xr,e=sa;function r(r,i){var o=n.call(this,r,i),u=t.call(this,r,i),a=(o.y+u.y)/2,l=[o,{x:o.x,y:a},{x:u.x,y:a},u];return\"M\"+(l=l.map(e))[0]+\"C\"+l[1]+\" \"+l[2]+\" \"+l[3]}return r.source=function(t){return arguments.length?(n=_t(t),r):n},r.target=function(n){return arguments.length?(t=_t(n),r):t},r.projection=function(n){return arguments.length?(e=n,r):e},r},o.svg.diagonal.radial=function(){var n=o.svg.diagonal(),t=sa,e=n.projection;return n.projection=function(n){return arguments.length?e(function(n){return function(){var t=n.apply(this,arguments),e=t[0],r=t[1]-qn;return[e*Math.cos(r),e*Math.sin(r)]}}(t=n)):t},n},o.svg.symbol=function(){var n=ha,t=fa;function e(e,r){return(ga.get(n.call(this,e,r))||pa)(t.call(this,e,r))}return e.type=function(t){return arguments.length?(n=_t(t),e):n},e.size=function(n){return arguments.length?(t=_t(n),e):t},e};var ga=o.map({circle:pa,cross:function(n){var t=Math.sqrt(n/5)/2;return\"M\"+-3*t+\",\"+-t+\"H\"+-t+\"V\"+-3*t+\"H\"+t+\"V\"+-t+\"H\"+3*t+\"V\"+t+\"H\"+t+\"V\"+3*t+\"H\"+-t+\"V\"+t+\"H\"+-3*t+\"Z\"},diamond:function(n){var t=Math.sqrt(n/(2*da)),e=t*da;return\"M0,\"+-t+\"L\"+e+\",0 0,\"+t+\" \"+-e+\",0Z\"},square:function(n){var t=Math.sqrt(n)/2;return\"M\"+-t+\",\"+-t+\"L\"+t+\",\"+-t+\" \"+t+\",\"+t+\" \"+-t+\",\"+t+\"Z\"},\"triangle-down\":function(n){var t=Math.sqrt(n/va),e=t*va/2;return\"M0,\"+e+\"L\"+t+\",\"+-e+\" \"+-t+\",\"+-e+\"Z\"},\"triangle-up\":function(n){var t=Math.sqrt(n/va),e=t*va/2;return\"M0,\"+-e+\"L\"+t+\",\"+e+\" \"+-t+\",\"+e+\"Z\"}});o.svg.symbolTypes=ga.keys();var va=Math.sqrt(3),da=Math.tan(30*Dn);K.transition=function(n){for(var t,e,r=Ma||++ba,i=ka(n),o=[],u=_a||{time:Date.now(),ease:so,delay:0,duration:250},a=-1,l=this.length;++a<l;){o.push(t=[]);for(var c=this[a],s=-1,f=c.length;++s<f;)(e=c[s])&&Aa(e,s,i,r,u),t.push(e)}return xa(o,i,r)},K.interrupt=function(n){return this.each(null==n?ya:ma(ka(n)))};var ya=ma(ka());function ma(n){return function(){var t,e,r;(t=this[n])&&(r=t[e=t.active])&&(r.timer.c=null,r.timer.t=NaN,--t.count?delete t[e]:delete this[n],t.active+=.5,r.event&&r.event.interrupt.call(this,this.__data__,r.index))}}function xa(n,t,e){return V(n,wa),n.namespace=t,n.id=e,n}var Ma,_a,wa=[],ba=0;function Sa(n,t,e,r){var i=n.id,o=n.namespace;return vn(n,\"function\"==typeof e?function(n,u,a){n[o][i].tween.set(t,r(e.call(n,n.__data__,u,a)))}:(e=r(e),function(n){n[o][i].tween.set(t,e)}))}function Na(n){return null==n&&(n=\"\"),function(){this.textContent=n}}function ka(n){return null==n?\"__transition__\":\"__transition_\"+n+\"__\"}function Aa(n,t,e,r,i){var o,u,a,l,c,s=n[e]||(n[e]={active:0,count:0}),f=s[r];function h(e){var i=s.active,h=s[i];for(var g in h&&(h.timer.c=null,h.timer.t=NaN,--s.count,delete s[i],h.event&&h.event.interrupt.call(n,n.__data__,h.index)),s)if(+g<r){var v=s[g];v.timer.c=null,v.timer.t=NaN,--s.count,delete s[g]}u.c=p,Ct(function(){return u.c&&p(e||1)&&(u.c=null,u.t=NaN),1},0,o),s.active=r,f.event&&f.event.start.call(n,n.__data__,t),c=[],f.tween.forEach(function(e,r){(r=r.call(n,n.__data__,t))&&c.push(r)}),l=f.ease,a=f.duration}function p(i){for(var o=i/a,u=l(o),h=c.length;h>0;)c[--h].call(n,u);if(o>=1)return f.event&&f.event.end.call(n,n.__data__,t),--s.count?delete s[r]:delete n[e],1}f||(o=i.time,u=Ct(function(n){var t=f.delay;if(u.t=t+o,t<=n)return h(n-t);u.c=h},0,o),f=s[r]={tween:new S,time:o,timer:u,delay:i.delay,duration:i.duration,ease:i.ease,index:t},i=null,++s.count)}wa.call=K.call,wa.empty=K.empty,wa.node=K.node,wa.size=K.size,o.transition=function(n,t){return n&&n.transition?Ma?n.transition(t):n:o.selection().transition(n)},o.transition.prototype=wa,wa.select=function(n){var t,e,r,i=this.id,o=this.namespace,u=[];n=J(n);for(var a=-1,l=this.length;++a<l;){u.push(t=[]);for(var c=this[a],s=-1,f=c.length;++s<f;)(r=c[s])&&(e=n.call(r,r.__data__,s,a))?(\"__data__\"in r&&(e.__data__=r.__data__),Aa(e,s,o,i,r[o][i]),t.push(e)):t.push(null)}return xa(u,o,i)},wa.selectAll=function(n){var t,e,r,i,o,u=this.id,a=this.namespace,l=[];n=Q(n);for(var c=-1,s=this.length;++c<s;)for(var f=this[c],h=-1,p=f.length;++h<p;)if(r=f[h]){o=r[a][u],e=n.call(r,r.__data__,h,c),l.push(t=[]);for(var g=-1,v=e.length;++g<v;)(i=e[g])&&Aa(i,g,a,u,o),t.push(i)}return xa(l,a,u)},wa.filter=function(n){var t,e,r=[];\"function\"!=typeof n&&(n=gn(n));for(var i=0,o=this.length;i<o;i++){r.push(t=[]);for(var u,a=0,l=(u=this[i]).length;a<l;a++)(e=u[a])&&n.call(e,e.__data__,a,i)&&t.push(e)}return xa(r,this.namespace,this.id)},wa.tween=function(n,t){var e=this.id,r=this.namespace;return arguments.length<2?this.node()[r][e].tween.get(n):vn(this,null==t?function(t){t[r][e].tween.remove(n)}:function(i){i[r][e].tween.set(n,t)})},wa.attr=function(n,t){if(arguments.length<2){for(t in n)this.attr(t,n[t]);return this}var e=\"transform\"==n?wo:to,r=o.ns.qualify(n);function i(){this.removeAttribute(r)}function u(){this.removeAttributeNS(r.space,r.local)}return Sa(this,\"attr.\"+n,t,r.local?function(n){return null==n?u:(n+=\"\",function(){var t,i=this.getAttributeNS(r.space,r.local);return i!==n&&(t=e(i,n),function(n){this.setAttributeNS(r.space,r.local,t(n))})})}:function(n){return null==n?i:(n+=\"\",function(){var t,i=this.getAttribute(r);return i!==n&&(t=e(i,n),function(n){this.setAttribute(r,t(n))})})})},wa.attrTween=function(n,t){var e=o.ns.qualify(n);return this.tween(\"attr.\"+n,e.local?function(n,r){var i=t.call(this,n,r,this.getAttributeNS(e.space,e.local));return i&&function(n){this.setAttributeNS(e.space,e.local,i(n))}}:function(n,r){var i=t.call(this,n,r,this.getAttribute(e));return i&&function(n){this.setAttribute(e,i(n))}})},wa.style=function(n,t,e){var r=arguments.length;if(r<3){if(\"string\"!=typeof n){for(e in r<2&&(t=\"\"),n)this.style(e,n[e],t);return this}e=\"\"}function i(){this.style.removeProperty(n)}return Sa(this,\"style.\"+n,t,function(t){return null==t?i:(t+=\"\",function(){var r,i=s(this).getComputedStyle(this,null).getPropertyValue(n);return i!==t&&(r=to(i,t),function(t){this.style.setProperty(n,r(t),e)})})})},wa.styleTween=function(n,t,e){return arguments.length<3&&(e=\"\"),this.tween(\"style.\"+n,function(r,i){var o=t.call(this,r,i,s(this).getComputedStyle(this,null).getPropertyValue(n));return o&&function(t){this.style.setProperty(n,o(t),e)}})},wa.text=function(n){return Sa(this,\"text\",n,Na)},wa.remove=function(){var n=this.namespace;return this.each(\"end.transition\",function(){var t;this[n].count<2&&(t=this.parentNode)&&t.removeChild(this)})},wa.ease=function(n){var t=this.id,e=this.namespace;return arguments.length<1?this.node()[e][t].ease:(\"function\"!=typeof n&&(n=o.ease.apply(o,arguments)),vn(this,function(r){r[e][t].ease=n}))},wa.delay=function(n){var t=this.id,e=this.namespace;return arguments.length<1?this.node()[e][t].delay:vn(this,\"function\"==typeof n?function(r,i,o){r[e][t].delay=+n.call(r,r.__data__,i,o)}:(n=+n,function(r){r[e][t].delay=n}))},wa.duration=function(n){var t=this.id,e=this.namespace;return arguments.length<1?this.node()[e][t].duration:vn(this,\"function\"==typeof n?function(r,i,o){r[e][t].duration=Math.max(1,n.call(r,r.__data__,i,o))}:(n=Math.max(1,n),function(r){r[e][t].duration=n}))},wa.each=function(n,t){var e=this.id,r=this.namespace;if(arguments.length<2){var i=_a,u=Ma;try{Ma=e,vn(this,function(t,i,o){_a=t[r][e],n.call(t,t.__data__,i,o)})}finally{_a=i,Ma=u}}else vn(this,function(i){var u=i[r][e];(u.event||(u.event=o.dispatch(\"start\",\"end\",\"interrupt\"))).on(n,t)});return this},wa.transition=function(){for(var n,t,e,r=this.id,i=++ba,o=this.namespace,u=[],a=0,l=this.length;a<l;a++){u.push(n=[]);for(var c,s=0,f=(c=this[a]).length;s<f;s++)(t=c[s])&&Aa(t,s,o,i,{time:(e=t[o][r]).time,ease:e.ease,delay:e.delay+e.duration,duration:e.duration}),n.push(t)}return xa(u,o,i)},o.svg.axis=function(){var n,t=o.scale.linear(),e=Ea,r=6,i=6,u=3,l=[10],c=null;function s(a){a.each(function(){var a,s=o.select(this),f=this.__chart__||t,h=this.__chart__=t.copy(),p=null==c?h.ticks?h.ticks.apply(h,l):h.domain():c,g=null==n?h.tickFormat?h.tickFormat.apply(h,l):R:n,v=s.selectAll(\".tick\").data(p,h),d=v.enter().insert(\"g\",\".domain\").attr(\"class\",\"tick\").style(\"opacity\",En),y=o.transition(v.exit()).style(\"opacity\",En).remove(),m=o.transition(v.order()).style(\"opacity\",1),x=Math.max(r,0)+u,M=yu(h),_=s.selectAll(\".domain\").data([0]),w=(_.enter().append(\"path\").attr(\"class\",\"domain\"),o.transition(_));d.append(\"line\"),d.append(\"text\");var b,S,N,k,A=d.select(\"line\"),E=m.select(\"line\"),C=v.select(\"text\").text(g),L=d.select(\"text\"),T=m.select(\"text\"),z=\"top\"===e||\"left\"===e?-1:1;if(\"bottom\"===e||\"top\"===e?(a=La,b=\"x\",N=\"y\",S=\"x2\",k=\"y2\",C.attr(\"dy\",z<0?\"0em\":\".71em\").style(\"text-anchor\",\"middle\"),w.attr(\"d\",\"M\"+M[0]+\",\"+z*i+\"V0H\"+M[1]+\"V\"+z*i)):(a=Ta,b=\"y\",N=\"x\",S=\"y2\",k=\"x2\",C.attr(\"dy\",\".32em\").style(\"text-anchor\",z<0?\"end\":\"start\"),w.attr(\"d\",\"M\"+z*i+\",\"+M[0]+\"H0V\"+M[1]+\"H\"+z*i)),A.attr(k,z*r),L.attr(N,z*x),E.attr(S,0).attr(k,z*r),T.attr(b,0).attr(N,z*x),h.rangeBand){var q=h,D=q.rangeBand()/2;f=h=function(n){return q(n)+D}}else f.rangeBand?f=h:y.call(a,h,f);d.call(a,f,h),m.call(a,h,h)})}return s.scale=function(n){return arguments.length?(t=n,s):t},s.orient=function(n){return arguments.length?(e=n in Ca?n+\"\":Ea,s):e},s.ticks=function(){return arguments.length?(l=a(arguments),s):l},s.tickValues=function(n){return arguments.length?(c=n,s):c},s.tickFormat=function(t){return arguments.length?(n=t,s):n},s.tickSize=function(n){var t=arguments.length;return t?(r=+n,i=+arguments[t-1],s):r},s.innerTickSize=function(n){return arguments.length?(r=+n,s):r},s.outerTickSize=function(n){return arguments.length?(i=+n,s):i},s.tickPadding=function(n){return arguments.length?(u=+n,s):u},s.tickSubdivide=function(){return arguments.length&&s},s};var Ea=\"bottom\",Ca={top:1,right:1,bottom:1,left:1};function La(n,t,e){n.attr(\"transform\",function(n){var r=t(n);return\"translate(\"+(isFinite(r)?r:e(n))+\",0)\"})}function Ta(n,t,e){n.attr(\"transform\",function(n){var r=t(n);return\"translate(0,\"+(isFinite(r)?r:e(n))+\")\"})}o.svg.brush=function(){var n,t,e=Y(h,\"brushstart\",\"brush\",\"brushend\"),r=null,i=null,u=[0,0],a=[0,0],l=!0,c=!0,f=qa[0];function h(n){n.each(function(){var n=o.select(this).style(\"pointer-events\",\"all\").style(\"-webkit-tap-highlight-color\",\"rgba(0,0,0,0)\").on(\"mousedown.brush\",d).on(\"touchstart.brush\",d),t=n.selectAll(\".background\").data([0]);t.enter().append(\"rect\").attr(\"class\",\"background\").style(\"visibility\",\"hidden\").style(\"cursor\",\"crosshair\"),n.selectAll(\".extent\").data([0]).enter().append(\"rect\").attr(\"class\",\"extent\").style(\"cursor\",\"move\");var e=n.selectAll(\".resize\").data(f,R);e.exit().remove(),e.enter().append(\"g\").attr(\"class\",function(n){return\"resize \"+n}).style(\"cursor\",function(n){return za[n]}).append(\"rect\").attr(\"x\",function(n){return/[ew]$/.test(n)?-3:null}).attr(\"y\",function(n){return/^[ns]/.test(n)?-3:null}).attr(\"width\",6).attr(\"height\",6).style(\"visibility\",\"hidden\"),e.style(\"display\",h.empty()?\"none\":null);var u,a=o.transition(n),l=o.transition(t);r&&(u=yu(r),l.attr(\"x\",u[0]).attr(\"width\",u[1]-u[0]),g(a)),i&&(u=yu(i),l.attr(\"y\",u[0]).attr(\"height\",u[1]-u[0]),v(a)),p(a)})}function p(n){n.selectAll(\".resize\").attr(\"transform\",function(n){return\"translate(\"+u[+/e$/.test(n)]+\",\"+a[+/^s/.test(n)]+\")\"})}function g(n){n.select(\".extent\").attr(\"x\",u[0]),n.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\",u[1]-u[0])}function v(n){n.select(\".extent\").attr(\"y\",a[0]),n.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\",a[1]-a[0])}function d(){var f,d,y=this,m=o.select(o.event.target),x=e.of(y,arguments),M=o.select(y),_=m.datum(),w=!/^(n|s)$/.test(_)&&r,b=!/^(e|w)$/.test(_)&&i,S=m.classed(\"extent\"),N=Sn(y),k=o.mouse(y),A=o.select(s(y)).on(\"keydown.brush\",function(){32==o.event.keyCode&&(S||(f=null,k[0]-=u[1],k[1]-=a[1],S=2),I())}).on(\"keyup.brush\",function(){32==o.event.keyCode&&2==S&&(k[0]+=u[1],k[1]+=a[1],S=0,I())});if(o.event.changedTouches?A.on(\"touchmove.brush\",L).on(\"touchend.brush\",z):A.on(\"mousemove.brush\",L).on(\"mouseup.brush\",z),M.interrupt().selectAll(\"*\").interrupt(),S)k[0]=u[0]-k[0],k[1]=a[0]-k[1];else if(_){var E=+/w$/.test(_),C=+/^n/.test(_);d=[u[1-E]-k[0],a[1-C]-k[1]],k[0]=u[E],k[1]=a[C]}else o.event.altKey&&(f=k.slice());function L(){var n=o.mouse(y),t=!1;d&&(n[0]+=d[0],n[1]+=d[1]),S||(o.event.altKey?(f||(f=[(u[0]+u[1])/2,(a[0]+a[1])/2]),k[0]=u[+(n[0]<f[0])],k[1]=a[+(n[1]<f[1])]):f=null),w&&T(n,r,0)&&(g(M),t=!0),b&&T(n,i,1)&&(v(M),t=!0),t&&(p(M),x({type:\"brush\",mode:S?\"move\":\"resize\"}))}function T(e,r,i){var o,s,h=yu(r),p=h[0],g=h[1],v=k[i],d=i?a:u,y=d[1]-d[0];if(S&&(p-=v,g-=y+v),o=(i?c:l)?Math.max(p,Math.min(g,e[i])):e[i],S?s=(o+=v)+y:(f&&(v=Math.max(p,Math.min(g,2*f[i]-o))),v<o?(s=o,o=v):s=v),d[0]!=o||d[1]!=s)return i?t=null:n=null,d[0]=o,d[1]=s,!0}function z(){L(),M.style(\"pointer-events\",\"all\").selectAll(\".resize\").style(\"display\",h.empty()?\"none\":null),o.select(\"body\").style(\"cursor\",null),A.on(\"mousemove.brush\",null).on(\"mouseup.brush\",null).on(\"touchmove.brush\",null).on(\"touchend.brush\",null).on(\"keydown.brush\",null).on(\"keyup.brush\",null),N(),x({type:\"brushend\"})}M.style(\"pointer-events\",\"none\").selectAll(\".resize\").style(\"display\",null),o.select(\"body\").style(\"cursor\",m.style(\"cursor\")),x({type:\"brushstart\"}),L()}return h.event=function(r){r.each(function(){var r=e.of(this,arguments),i={x:u,y:a,i:n,j:t},l=this.__chart__||i;this.__chart__=i,Ma?o.select(this).transition().each(\"start.brush\",function(){n=l.i,t=l.j,u=l.x,a=l.y,r({type:\"brushstart\"})}).tween(\"brush:brush\",function(){var e=eo(u,i.x),o=eo(a,i.y);return n=t=null,function(n){u=i.x=e(n),a=i.y=o(n),r({type:\"brush\",mode:\"resize\"})}}).each(\"end.brush\",function(){n=i.i,t=i.j,r({type:\"brush\",mode:\"resize\"}),r({type:\"brushend\"})}):(r({type:\"brushstart\"}),r({type:\"brush\",mode:\"resize\"}),r({type:\"brushend\"}))})},h.x=function(n){return arguments.length?(f=qa[!(r=n)<<1|!i],h):r},h.y=function(n){return arguments.length?(f=qa[!r<<1|!(i=n)],h):i},h.clamp=function(n){return arguments.length?(r&&i?(l=!!n[0],c=!!n[1]):r?l=!!n:i&&(c=!!n),h):r&&i?[l,c]:r?l:i?c:null},h.extent=function(e){var o,l,c,s,f;return arguments.length?(r&&(o=e[0],l=e[1],i&&(o=o[0],l=l[0]),n=[o,l],r.invert&&(o=r(o),l=r(l)),l<o&&(f=o,o=l,l=f),o==u[0]&&l==u[1]||(u=[o,l])),i&&(c=e[0],s=e[1],r&&(c=c[1],s=s[1]),t=[c,s],i.invert&&(c=i(c),s=i(s)),s<c&&(f=c,c=s,s=f),c==a[0]&&s==a[1]||(a=[c,s])),h):(r&&(n?(o=n[0],l=n[1]):(o=u[0],l=u[1],r.invert&&(o=r.invert(o),l=r.invert(l)),l<o&&(f=o,o=l,l=f))),i&&(t?(c=t[0],s=t[1]):(c=a[0],s=a[1],i.invert&&(c=i.invert(c),s=i.invert(s)),s<c&&(f=c,c=s,s=f))),r&&i?[[o,c],[l,s]]:r?[o,l]:i&&[c,s])},h.clear=function(){return h.empty()||(u=[0,0],a=[0,0],n=t=null),h},h.empty=function(){return!!r&&u[0]==u[1]||!!i&&a[0]==a[1]},o.rebind(h,e,\"on\")};var za={n:\"ns-resize\",e:\"ew-resize\",s:\"ns-resize\",w:\"ew-resize\",nw:\"nwse-resize\",ne:\"nesw-resize\",se:\"nwse-resize\",sw:\"nesw-resize\"},qa=[[\"n\",\"e\",\"s\",\"w\",\"nw\",\"ne\",\"se\",\"sw\"],[\"e\",\"w\"],[\"n\",\"s\"],[]],Da=Ot.format=ge.timeFormat,Ra=Da.utc,Pa=Ra(\"%Y-%m-%dT%H:%M:%S.%LZ\");function ja(n){return n.toISOString()}function Ua(n,t,e){function r(t){return n(t)}function i(n,e){var r=(n[1]-n[0])/e,i=o.bisect(Ha,r);return i==Ha.length?[t.year,Nu(n.map(function(n){return n/31536e6}),e)[2]]:i?t[r/Ha[i-1]<Ha[i]/r?i-1:i]:[Ba,Nu(n,e)[2]]}return r.invert=function(t){return Oa(n.invert(t))},r.domain=function(t){return arguments.length?(n.domain(t),r):n.domain().map(Oa)},r.nice=function(n,t){var e=r.domain(),o=du(e),u=null==n?i(o,10):\"number\"==typeof n&&i(o,n);function a(e){return!isNaN(e)&&!n.range(e,Oa(+e+1),t).length}return u&&(n=u[0],t=u[1]),r.domain(xu(e,t>1?{floor:function(t){for(;a(t=n.floor(t));)t=Oa(t-1);return t},ceil:function(t){for(;a(t=n.ceil(t));)t=Oa(+t+1);return t}}:n))},r.ticks=function(n,t){var e=du(r.domain()),o=null==n?i(e,10):\"number\"==typeof n?i(e,n):!n.range&&[{range:n},t];return o&&(n=o[0],t=o[1]),n.range(e[0],Oa(+e[1]+1),t<1?1:t)},r.tickFormat=function(){return e},r.copy=function(){return Ua(n.copy(),t,e)},bu(r,n)}function Oa(n){return new Date(n)}Da.iso=Date.prototype.toISOString&&+new Date(\"2000-01-01T00:00:00.000Z\")?ja:Pa,ja.parse=function(n){var t=new Date(n);return isNaN(t)?null:t},ja.toString=Pa.toString,Ot.second=Bt(function(n){return new Ht(1e3*Math.floor(n/1e3))},function(n,t){n.setTime(n.getTime()+1e3*Math.floor(t))},function(n){return n.getSeconds()}),Ot.seconds=Ot.second.range,Ot.seconds.utc=Ot.second.utc.range,Ot.minute=Bt(function(n){return new Ht(6e4*Math.floor(n/6e4))},function(n,t){n.setTime(n.getTime()+6e4*Math.floor(t))},function(n){return n.getMinutes()}),Ot.minutes=Ot.minute.range,Ot.minutes.utc=Ot.minute.utc.range,Ot.hour=Bt(function(n){var t=n.getTimezoneOffset()/60;return new Ht(36e5*(Math.floor(n/36e5-t)+t))},function(n,t){n.setTime(n.getTime()+36e5*Math.floor(t))},function(n){return n.getHours()}),Ot.hours=Ot.hour.range,Ot.hours.utc=Ot.hour.utc.range,Ot.month=Bt(function(n){return(n=Ot.day(n)).setDate(1),n},function(n,t){n.setMonth(n.getMonth()+t)},function(n){return n.getMonth()}),Ot.months=Ot.month.range,Ot.months.utc=Ot.month.utc.range;var Ha=[1e3,5e3,15e3,3e4,6e4,3e5,9e5,18e5,36e5,108e5,216e5,432e5,864e5,1728e5,6048e5,2592e6,7776e6,31536e6],Fa=[[Ot.second,1],[Ot.second,5],[Ot.second,15],[Ot.second,30],[Ot.minute,1],[Ot.minute,5],[Ot.minute,15],[Ot.minute,30],[Ot.hour,1],[Ot.hour,3],[Ot.hour,6],[Ot.hour,12],[Ot.day,1],[Ot.day,2],[Ot.week,1],[Ot.month,1],[Ot.month,3],[Ot.year,1]],Ia=Da.multi([[\".%L\",function(n){return n.getMilliseconds()}],[\":%S\",function(n){return n.getSeconds()}],[\"%I:%M\",function(n){return n.getMinutes()}],[\"%I %p\",function(n){return n.getHours()}],[\"%a %d\",function(n){return n.getDay()&&1!=n.getDate()}],[\"%b %d\",function(n){return 1!=n.getDate()}],[\"%B\",function(n){return n.getMonth()}],[\"%Y\",Qe]]),Ba={range:function(n,t,e){return o.range(Math.ceil(n/e)*e,+t,e).map(Oa)},floor:R,ceil:R};Fa.year=Ot.year,Ot.scale=function(){return Ua(o.scale.linear(),Fa,Ia)};var Ya=Fa.map(function(n){return[n[0].utc,n[1]]}),$a=Ra.multi([[\".%L\",function(n){return n.getUTCMilliseconds()}],[\":%S\",function(n){return n.getUTCSeconds()}],[\"%I:%M\",function(n){return n.getUTCMinutes()}],[\"%I %p\",function(n){return n.getUTCHours()}],[\"%a %d\",function(n){return n.getUTCDay()&&1!=n.getUTCDate()}],[\"%b %d\",function(n){return 1!=n.getUTCDate()}],[\"%B\",function(n){return n.getUTCMonth()}],[\"%Y\",Qe]]);function Va(n){return JSON.parse(n.responseText)}function Za(n){var t=l.createRange();return t.selectNode(l.body),t.createContextualFragment(n.responseText)}Ya.year=Ot.year.utc,Ot.scale.utc=function(){return Ua(o.scale.linear(),Ya,$a)},o.text=wt(function(n){return n.responseText}),o.json=function(n,t){return bt(n,\"application/json\",Va,t)},o.html=function(n,t){return bt(n,\"text/html\",Za,t)},o.xml=wt(function(n){return n.responseXML}),this.d3=o,void 0===(i=\"function\"==typeof(r=o)?r.call(t,e,t,n):r)||(n.exports=i)}()},function(n,t,e){},function(n,t,e){\"use strict\";e.r(t);var r=e(0);function i(){}function o(n,t){var e=new i;if(n instanceof i)n.each(function(n,t){e.set(t,n)});else if(Array.isArray(n)){var r,o=-1,u=n.length;if(null==t)for(;++o<u;)e.set(o,n[o]);else for(;++o<u;)e.set(t(r=n[o],o,n),r)}else if(n)for(var a in n)e.set(a,n[a]);return e}i.prototype=o.prototype={constructor:i,has:function(n){return\"$\"+n in this},get:function(n){return this[\"$\"+n]},set:function(n,t){return this[\"$\"+n]=t,this},remove:function(n){var t=\"$\"+n;return t in this&&delete this[t]},clear:function(){for(var n in this)\"$\"===n[0]&&delete this[n]},keys:function(){var n=[];for(var t in this)\"$\"===t[0]&&n.push(t.slice(1));return n},values:function(){var n=[];for(var t in this)\"$\"===t[0]&&n.push(this[t]);return n},entries:function(){var n=[];for(var t in this)\"$\"===t[0]&&n.push({key:t.slice(1),value:this[t]});return n},size:function(){var n=0;for(var t in this)\"$\"===t[0]&&++n;return n},empty:function(){for(var n in this)if(\"$\"===n[0])return!1;return!0},each:function(n){for(var t in this)\"$\"===t[0]&&n(this[t],t.slice(1),this)}};var u=o;function a(){}var l=u.prototype;function c(n,t){var e=new a;if(n instanceof a)n.each(function(n){e.add(n)});else if(n){var r=-1,i=n.length;if(null==t)for(;++r<i;)e.add(n[r]);else for(;++r<i;)e.add(t(n[r],r,n))}return e}a.prototype=c.prototype={constructor:a,has:l.has,add:function(n){return this[\"$\"+(n+=\"\")]=n,this},remove:l.remove,clear:l.clear,values:l.keys,size:l.size,empty:l.empty,each:l.each};var s=\"http://www.w3.org/1999/xhtml\",f={svg:\"http://www.w3.org/2000/svg\",xhtml:s,xlink:\"http://www.w3.org/1999/xlink\",xml:\"http://www.w3.org/XML/1998/namespace\",xmlns:\"http://www.w3.org/2000/xmlns/\"},h=function(n){var t=n+=\"\",e=t.indexOf(\":\");return e>=0&&\"xmlns\"!==(t=n.slice(0,e))&&(n=n.slice(e+1)),f.hasOwnProperty(t)?{space:f[t],local:n}:n};var p=function(n){var t=h(n);return(t.local?function(n){return function(){return this.ownerDocument.createElementNS(n.space,n.local)}}:function(n){return function(){var t=this.ownerDocument,e=this.namespaceURI;return e===s&&t.documentElement.namespaceURI===s?t.createElement(n):t.createElementNS(e,n)}})(t)};function g(){}var v=function(n){return null==n?g:function(){return this.querySelector(n)}};function d(){return[]}var y=function(n){return new Array(n.length)};function m(n,t){this.ownerDocument=n.ownerDocument,this.namespaceURI=n.namespaceURI,this._next=null,this._parent=n,this.__data__=t}m.prototype={constructor:m,appendChild:function(n){return this._parent.insertBefore(n,this._next)},insertBefore:function(n,t){return this._parent.insertBefore(n,t)},querySelector:function(n){return this._parent.querySelector(n)},querySelectorAll:function(n){return this._parent.querySelectorAll(n)}};var x=\"$\";function M(n,t,e,r,i,o){for(var u,a=0,l=t.length,c=o.length;a<c;++a)(u=t[a])?(u.__data__=o[a],r[a]=u):e[a]=new m(n,o[a]);for(;a<l;++a)(u=t[a])&&(i[a]=u)}function _(n,t,e,r,i,o,u){var a,l,c,s={},f=t.length,h=o.length,p=new Array(f);for(a=0;a<f;++a)(l=t[a])&&(p[a]=c=x+u.call(l,l.__data__,a,t),c in s?i[a]=l:s[c]=l);for(a=0;a<h;++a)(l=s[c=x+u.call(n,o[a],a,o)])?(r[a]=l,l.__data__=o[a],s[c]=null):e[a]=new m(n,o[a]);for(a=0;a<f;++a)(l=t[a])&&s[p[a]]===l&&(i[a]=l)}function w(n,t){return n<t?-1:n>t?1:n>=t?0:NaN}var b=function(n){return n.ownerDocument&&n.ownerDocument.defaultView||n.document&&n||n.defaultView};function S(n){return n.trim().split(/^|\\s+/)}function N(n){return n.classList||new k(n)}function k(n){this._node=n,this._names=S(n.getAttribute(\"class\")||\"\")}function A(n,t){for(var e=N(n),r=-1,i=t.length;++r<i;)e.add(t[r])}function E(n,t){for(var e=N(n),r=-1,i=t.length;++r<i;)e.remove(t[r])}k.prototype={add:function(n){this._names.indexOf(n)<0&&(this._names.push(n),this._node.setAttribute(\"class\",this._names.join(\" \")))},remove:function(n){var t=this._names.indexOf(n);t>=0&&(this._names.splice(t,1),this._node.setAttribute(\"class\",this._names.join(\" \")))},contains:function(n){return this._names.indexOf(n)>=0}};function C(){this.textContent=\"\"}function L(){this.innerHTML=\"\"}function T(){this.nextSibling&&this.parentNode.appendChild(this)}function z(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function q(){return null}function D(){var n=this.parentNode;n&&n.removeChild(this)}function R(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function P(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}var j={},U=null;\"undefined\"!=typeof document&&(\"onmouseenter\"in document.documentElement||(j={mouseenter:\"mouseover\",mouseleave:\"mouseout\"}));function O(n,t,e){return n=H(n,t,e),function(t){var e=t.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||n.call(this,t)}}function H(n,t,e){return function(r){var i=U;U=r;try{n.call(this,this.__data__,t,e)}finally{U=i}}}function F(n){return function(){var t=this.__on;if(t){for(var e,r=0,i=-1,o=t.length;r<o;++r)e=t[r],n.type&&e.type!==n.type||e.name!==n.name?t[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?t.length=i:delete this.__on}}}function I(n,t,e){var r=j.hasOwnProperty(n.type)?O:H;return function(i,o,u){var a,l=this.__on,c=r(t,o,u);if(l)for(var s=0,f=l.length;s<f;++s)if((a=l[s]).type===n.type&&a.name===n.name)return this.removeEventListener(a.type,a.listener,a.capture),this.addEventListener(a.type,a.listener=c,a.capture=e),void(a.value=t);this.addEventListener(n.type,c,e),a={type:n.type,name:n.name,value:t,listener:c,capture:e},l?l.push(a):this.__on=[a]}}function B(n,t,e){var r=b(n),i=r.CustomEvent;\"function\"==typeof i?i=new i(t,e):(i=r.document.createEvent(\"Event\"),e?(i.initEvent(t,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(t,!1,!1)),n.dispatchEvent(i)}var Y=[null];function $(n,t){this._groups=n,this._parents=t}function V(){return new $([[document.documentElement]],Y)}$.prototype=V.prototype={constructor:$,select:function(n){\"function\"!=typeof n&&(n=v(n));for(var t=this._groups,e=t.length,r=new Array(e),i=0;i<e;++i)for(var o,u,a=t[i],l=a.length,c=r[i]=new Array(l),s=0;s<l;++s)(o=a[s])&&(u=n.call(o,o.__data__,s,a))&&(\"__data__\"in o&&(u.__data__=o.__data__),c[s]=u);return new $(r,this._parents)},selectAll:function(n){var t;\"function\"!=typeof n&&(n=null==(t=n)?d:function(){return this.querySelectorAll(t)});for(var e=this._groups,r=e.length,i=[],o=[],u=0;u<r;++u)for(var a,l=e[u],c=l.length,s=0;s<c;++s)(a=l[s])&&(i.push(n.call(a,a.__data__,s,l)),o.push(a));return new $(i,o)},filter:function(n){var t;\"function\"!=typeof n&&(t=n,n=function(){return this.matches(t)});for(var e=this._groups,r=e.length,i=new Array(r),o=0;o<r;++o)for(var u,a=e[o],l=a.length,c=i[o]=[],s=0;s<l;++s)(u=a[s])&&n.call(u,u.__data__,s,a)&&c.push(u);return new $(i,this._parents)},data:function(n,t){if(!n)return g=new Array(this.size()),s=-1,this.each(function(n){g[++s]=n}),g;var e,r=t?_:M,i=this._parents,o=this._groups;\"function\"!=typeof n&&(e=n,n=function(){return e});for(var u=o.length,a=new Array(u),l=new Array(u),c=new Array(u),s=0;s<u;++s){var f=i[s],h=o[s],p=h.length,g=n.call(f,f&&f.__data__,s,i),v=g.length,d=l[s]=new Array(v),y=a[s]=new Array(v);r(f,h,d,y,c[s]=new Array(p),g,t);for(var m,x,w=0,b=0;w<v;++w)if(m=d[w]){for(w>=b&&(b=w+1);!(x=y[b])&&++b<v;);m._next=x||null}}return(a=new $(a,i))._enter=l,a._exit=c,a},enter:function(){return new $(this._enter||this._groups.map(y),this._parents)},exit:function(){return new $(this._exit||this._groups.map(y),this._parents)},join:function(n,t,e){var r=this.enter(),i=this,o=this.exit();return r=\"function\"==typeof n?n(r):r.append(n+\"\"),null!=t&&(i=t(i)),null==e?o.remove():e(o),r&&i?r.merge(i).order():i},merge:function(n){for(var t=this._groups,e=n._groups,r=t.length,i=e.length,o=Math.min(r,i),u=new Array(r),a=0;a<o;++a)for(var l,c=t[a],s=e[a],f=c.length,h=u[a]=new Array(f),p=0;p<f;++p)(l=c[p]||s[p])&&(h[p]=l);for(;a<r;++a)u[a]=t[a];return new $(u,this._parents)},order:function(){for(var n=this._groups,t=-1,e=n.length;++t<e;)for(var r,i=n[t],o=i.length-1,u=i[o];--o>=0;)(r=i[o])&&(u&&4^r.compareDocumentPosition(u)&&u.parentNode.insertBefore(r,u),u=r);return this},sort:function(n){function t(t,e){return t&&e?n(t.__data__,e.__data__):!t-!e}n||(n=w);for(var e=this._groups,r=e.length,i=new Array(r),o=0;o<r;++o){for(var u,a=e[o],l=a.length,c=i[o]=new Array(l),s=0;s<l;++s)(u=a[s])&&(c[s]=u);c.sort(t)}return new $(i,this._parents).order()},call:function(){var n=arguments[0];return arguments[0]=this,n.apply(null,arguments),this},nodes:function(){var n=new Array(this.size()),t=-1;return this.each(function(){n[++t]=this}),n},node:function(){for(var n=this._groups,t=0,e=n.length;t<e;++t)for(var r=n[t],i=0,o=r.length;i<o;++i){var u=r[i];if(u)return u}return null},size:function(){var n=0;return this.each(function(){++n}),n},empty:function(){return!this.node()},each:function(n){for(var t=this._groups,e=0,r=t.length;e<r;++e)for(var i,o=t[e],u=0,a=o.length;u<a;++u)(i=o[u])&&n.call(i,i.__data__,u,o);return this},attr:function(n,t){var e=h(n);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==t?e.local?function(n){return function(){this.removeAttributeNS(n.space,n.local)}}:function(n){return function(){this.removeAttribute(n)}}:\"function\"==typeof t?e.local?function(n,t){return function(){var e=t.apply(this,arguments);null==e?this.removeAttributeNS(n.space,n.local):this.setAttributeNS(n.space,n.local,e)}}:function(n,t){return function(){var e=t.apply(this,arguments);null==e?this.removeAttribute(n):this.setAttribute(n,e)}}:e.local?function(n,t){return function(){this.setAttributeNS(n.space,n.local,t)}}:function(n,t){return function(){this.setAttribute(n,t)}})(e,t))},style:function(n,t,e){return arguments.length>1?this.each((null==t?function(n){return function(){this.style.removeProperty(n)}}:\"function\"==typeof t?function(n,t,e){return function(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(n):this.style.setProperty(n,r,e)}}:function(n,t,e){return function(){this.style.setProperty(n,t,e)}})(n,t,null==e?\"\":e)):function(n,t){return n.style.getPropertyValue(t)||b(n).getComputedStyle(n,null).getPropertyValue(t)}(this.node(),n)},property:function(n,t){return arguments.length>1?this.each((null==t?function(n){return function(){delete this[n]}}:\"function\"==typeof t?function(n,t){return function(){var e=t.apply(this,arguments);null==e?delete this[n]:this[n]=e}}:function(n,t){return function(){this[n]=t}})(n,t)):this.node()[n]},classed:function(n,t){var e=S(n+\"\");if(arguments.length<2){for(var r=N(this.node()),i=-1,o=e.length;++i<o;)if(!r.contains(e[i]))return!1;return!0}return this.each((\"function\"==typeof t?function(n,t){return function(){(t.apply(this,arguments)?A:E)(this,n)}}:t?function(n){return function(){A(this,n)}}:function(n){return function(){E(this,n)}})(e,t))},text:function(n){return arguments.length?this.each(null==n?C:(\"function\"==typeof n?function(n){return function(){var t=n.apply(this,arguments);this.textContent=null==t?\"\":t}}:function(n){return function(){this.textContent=n}})(n)):this.node().textContent},html:function(n){return arguments.length?this.each(null==n?L:(\"function\"==typeof n?function(n){return function(){var t=n.apply(this,arguments);this.innerHTML=null==t?\"\":t}}:function(n){return function(){this.innerHTML=n}})(n)):this.node().innerHTML},raise:function(){return this.each(T)},lower:function(){return this.each(z)},append:function(n){var t=\"function\"==typeof n?n:p(n);return this.select(function(){return this.appendChild(t.apply(this,arguments))})},insert:function(n,t){var e=\"function\"==typeof n?n:p(n),r=null==t?q:\"function\"==typeof t?t:v(t);return this.select(function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)})},remove:function(){return this.each(D)},clone:function(n){return this.select(n?P:R)},datum:function(n){return arguments.length?this.property(\"__data__\",n):this.node().__data__},on:function(n,t,e){var r,i,o=function(n){return n.trim().split(/^|\\s+/).map(function(n){var t=\"\",e=n.indexOf(\".\");return e>=0&&(t=n.slice(e+1),n=n.slice(0,e)),{type:n,name:t}})}(n+\"\"),u=o.length;if(!(arguments.length<2)){for(a=t?I:F,null==e&&(e=!1),r=0;r<u;++r)this.each(a(o[r],t,e));return this}var a=this.node().__on;if(a)for(var l,c=0,s=a.length;c<s;++c)for(r=0,l=a[c];r<u;++r)if((i=o[r]).type===l.type&&i.name===l.name)return l.value},dispatch:function(n,t){return this.each((\"function\"==typeof t?function(n,t){return function(){return B(this,n,t.apply(this,arguments))}}:function(n,t){return function(){return B(this,n,t)}})(n,t))}};var Z=0;function X(){this._=\"@\"+(++Z).toString(36)}X.prototype=function(){return new X}.prototype={constructor:X,get:function(n){for(var t=this._;!(t in n);)if(!(n=n.parentNode))return;return n[t]},set:function(n,t){return n[this._]=t},remove:function(n){return this._ in n&&delete n[this._]},toString:function(){return this._}};e(1);var G=[\"LeBron James\",\"Giannis Antetokounmpo\",\"Kevin Durant\",\"Stephen Curry\",\"Kyrie Irving\",\"Joel Embiid\",\"Kawhi Leonard\",\"Paul George\",\"James Harden\",\"Kemba Walker\",\"Khris Middleton\",\"Anthony Davis\",\"Nikola Jokic\",\"Klay Thompson\",\"Ben Simmons\",\"Damian Lillard\",\"Blake Griffin\",\"Russell Westbrook\",\"D'Angelo Russell\",\"LaMarcus Aldridge\",\"Nikola Vucevic\",\"Karl-Anthony Towns\",\"Kyle Lowry\",\"Bradley Beal\",\"Dwyane Wade\",\"Dirk Nowitzki\"];Array.prototype.getUnique=function(){var n,t,e={},r=[];for(n=0;t=this[n];n++)e[t]=1;for(t in e)r.push(t);return r},fetch(\"../data/nba.json\").then(function(n){return n.json()}).then(function(n){var t=window.innerWidth,e=window.innerWidth,i=946/window.innerHeight,o=window.innerHeight*i;window.innerHeight>=946&&(o=window.innerHeight);var u,a=0,l=300,c=n;console.log(\"Before the tree\"),console.log(r),console.log(r.layout);var s=r.layout.tree().size([360,t/2-80]).separation(function(n,t){return(n.parent===t.parent?1.5:2.7)/n.depth}),f=r.svg.diagonal.radial().projection(function(n){return[n.y,n.x/180*Math.PI]}),h=r.select(\"body\").append(\"svg\").attr(\"width\",e).attr(\"height\",o).append(\"g\").attr(\"transform\",\"translate(\"+e/2+\",\"+o/2+\")\");(u=c).x0=0,u.y0=0;var p=r.tip().attr(\"class\",\"d3-tip\");function g(n){var t=s.nodes(u),e=s.links(t),r=new Set;t.forEach(function(n){n.name.length<=3&&\"NBA\"!==n.name&&r.add(n),\"NBA\"===n.name?n.y=1*n.depth:\"NBA\"===n.parent.name?n.y=175*n.depth:n.y=125*n.depth});var i=h.selectAll(\"g.node\").data(t,function(n){return n.id||(n.id=++a)}).on(\"mouseover\",p.show).on(\"mouseout\",p.hide);var o=i.enter().append(\"g\").attr(\"class\",\"node\").on(\"click\",d);o.append(\"circle\").on(\"mouseover\",function(n){console.log(\"WHAT\")}),o.append(\"text\").attr(\"x\",30).attr(\"dy\",\".35em\").attr(\"text-anchor\",\"start\").attr(\"transform\",function(n){return n.x<180?\"translate(0)\":\"rotate(180)translate(-\"+8.5*n.name.length+\")\"}).text(function(n){if(2===n.depth){var t=\"✭\"+n.name+\"✭\";return G.includes(n.name)?t:n.name}}).attr(\"class\",function(n){return G.includes(n.name)?\"all-star\":\"non-all-star\"}).style(\"fill-opacity\",1e-6),h.selectAll(\"image\").data([0]).enter().append(\"svg:image\"),o.append(\"svg:image\").attr(\"x\",function(n){return\"NBA\"===n.name?-50:-25}).attr(\"y\",function(n){return\"NBA\"===n.name?-50:-25}).attr(\"width\",function(n){return\"NBA\"===n.name?100:50}).attr(\"height\",function(n){return\"NBA\"===n.name?100:50}).attr(\"transform\",function(n){if(\"NBA\"===n.name)return\"rotate(-90 0 0)\";if(n.name.length<=3){var t=83-12*[\"ATL\",\"BOS\",\"BKN\",\"CHA\",\"CHI\",\"CLE\",\"DAL\",\"DEN\",\"DET\",\"GSW\",\"HOU\",\"IND\",\"LAC\",\"LAL\",\"MEM\",\"MIA\",\"MIL\",\"MIN\",\"NO\",\"NYK\",\"OKC\",\"ORL\",\"PHI\",\"PHX\",\"POR\",\"SAC\",\"SAS\",\"TOR\",\"UTH\",\"WAS\"].indexOf(n.name);return\"rotate(\".concat(t,\" 0 0)\")}}).attr(\"xlink:href\",function(n){return\"NBA\"===n.name?\"https://castrstatic-5doxhowepfdd9.stackpathdns.com/portal.sportscastr.com/v1/media/logos/Circle/NBA_Logo.png\":n.name.length<=3?\"https://a.espncdn.com/combiner/i?img=/i/teamlogos/nba/500/\".concat(n.name.toLowerCase(),\".png&h=80&w=80&scale=crop\"):void 0});var c=i.transition().duration(l).attr(\"transform\",function(n){return\"rotate(\"+(n.x-90)+\")translate(\"+n.y+\")\"});c.select(\"circle\").attr(\"r\",function(n){return 1===n.depth?25:0===n.depth?50:2.5}).style(\"fill\",function(n){return n._children?\"rgba(167, 167, 167, 0.294)\":\"rgba(67, 57, 167, 0.694)\"}),c.select(\"text\").style(\"fill-opacity\",1).attr(\"transform\",function(n){return n.x<180?\"translate(0)\":\"rotate(180)translate(-\"+(n.name.length+158)+\")\"});var g=i.exit().transition().duration(l).remove();g.select(\"circle\").attr(\"r\",1e-6),g.select(\"text\").style(\"fill-opacity\",1e-6);var v=h.selectAll(\"path.link\").data(e,function(n){return n.target.id});v.enter().insert(\"path\",\"g\").attr(\"class\",\"link\").attr(\"d\",function(t){var e={x:n.x0,y:n.y0};return f({source:e,target:e})}),v.transition().duration(l).attr(\"d\",f),v.exit().transition().duration(l).attr(\"d\",function(t){var e={x:n.x,y:n.y};return f({source:e,target:e})}).remove(),t.forEach(function(n){n.x0=n.x,n.y0=n.y})}p.offset(function(n){return[-n.x,-n.x]}).html(function(n){if(n.name.length>3)return G.includes(n.name)?\"<div id='positioner-all-star'><div id='profile-all-star'> <center><h2 id='all-star-name'>\"+n.name+\"</h2></center>\"+n.img+\"<div id='stats-all-star'><div id='stats-left-all-star'><div>PTS - \"+n.points+\"</div><div>RB - \"+n.rebounds+\"</div><div>AST - \"+n.assists+\"</div></div><div id='stats-right-all-star'><div>FG% - \"+n.FG+\"</div><div>FG3% - \"+n.FG3+\"</div><div>FT% - \"+n.FT+\"</div></div></div>\":\"<div id='positioner'><div id='profile'> <center><h2>\"+n.name+\"</h2></center>\"+n.img+\"<div id='stats'><div id='stats-left'><div>PTS - \"+n.points+\"</div><div>RB - \"+n.rebounds+\"</div><div>AST - \"+n.assists+\"</div></div><div id='stats-right'><div>FG% - \"+n.FG+\"</div><div>FG3% - \"+n.FG3+\"</div><div>FT% - \"+n.FT+\"</div></div></div>\"}),h.call(p),u.children.forEach(y),g(u),r.select(self.frameElement).style(\"height\",\"800px\");var v=[];function d(n){var t,e;o=2*window.innerHeight,v.getUnique(),n.children?n.name.length<4&&\"NBA\"!==n.name&&(t=n,e=[],v.forEach(function(n){n.name!==t.name&&e.push(n)}),v=e,n._children=n.children,n.children=null):n.name.length<4&&\"NBA\"!==n.name&&(v.push(n),n.children=n._children,n._children=null,v.length>6&&y(v.shift())),n.name.length<=3&&g(n),g(n)}function y(n){n.children&&(n._children=n.children,n._children.forEach(y),n.children=null)}})}]);","extractedComments":[]}